module.exports = [
"[project]/node_modules/@getbrevo/brevo/dist/model/abTestCampaignResult.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AbTestCampaignResult = void 0;
class AbTestCampaignResult {
    static getAttributeTypeMap() {
        return AbTestCampaignResult.attributeTypeMap;
    }
}
exports.AbTestCampaignResult = AbTestCampaignResult;
AbTestCampaignResult.discriminator = undefined;
AbTestCampaignResult.attributeTypeMap = [
    {
        "name": "winningVersion",
        "baseName": "winningVersion",
        "type": "AbTestCampaignResult.WinningVersionEnum"
    },
    {
        "name": "winningCriteria",
        "baseName": "winningCriteria",
        "type": "AbTestCampaignResult.WinningCriteriaEnum"
    },
    {
        "name": "winningSubjectLine",
        "baseName": "winningSubjectLine",
        "type": "string"
    },
    {
        "name": "openRate",
        "baseName": "openRate",
        "type": "string"
    },
    {
        "name": "clickRate",
        "baseName": "clickRate",
        "type": "string"
    },
    {
        "name": "winningVersionRate",
        "baseName": "winningVersionRate",
        "type": "string"
    },
    {
        "name": "statistics",
        "baseName": "statistics",
        "type": "AbTestCampaignResultStatistics"
    },
    {
        "name": "clickedLinks",
        "baseName": "clickedLinks",
        "type": "AbTestCampaignResultClickedLinks"
    }
];
(function(AbTestCampaignResult) {
    let WinningVersionEnum;
    (function(WinningVersionEnum) {
        WinningVersionEnum[WinningVersionEnum["NotAvailable"] = 'notAvailable'] = "NotAvailable";
        WinningVersionEnum[WinningVersionEnum["Pending"] = 'pending'] = "Pending";
        WinningVersionEnum[WinningVersionEnum["Tie"] = 'tie'] = "Tie";
        WinningVersionEnum[WinningVersionEnum["A"] = 'A'] = "A";
        WinningVersionEnum[WinningVersionEnum["B"] = 'B'] = "B";
    })(WinningVersionEnum = AbTestCampaignResult.WinningVersionEnum || (AbTestCampaignResult.WinningVersionEnum = {}));
    let WinningCriteriaEnum;
    (function(WinningCriteriaEnum) {
        WinningCriteriaEnum[WinningCriteriaEnum["Open"] = 'Open'] = "Open";
        WinningCriteriaEnum[WinningCriteriaEnum["Click"] = 'Click'] = "Click";
    })(WinningCriteriaEnum = AbTestCampaignResult.WinningCriteriaEnum || (AbTestCampaignResult.WinningCriteriaEnum = {}));
})(AbTestCampaignResult = exports.AbTestCampaignResult || (exports.AbTestCampaignResult = {})); //# sourceMappingURL=abTestCampaignResult.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/abTestCampaignResultClickedLinks.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AbTestCampaignResultClickedLinks = void 0;
class AbTestCampaignResultClickedLinks {
    static getAttributeTypeMap() {
        return AbTestCampaignResultClickedLinks.attributeTypeMap;
    }
}
exports.AbTestCampaignResultClickedLinks = AbTestCampaignResultClickedLinks;
AbTestCampaignResultClickedLinks.discriminator = undefined;
AbTestCampaignResultClickedLinks.attributeTypeMap = [
    {
        "name": "versionA",
        "baseName": "Version A",
        "type": "Array<AbTestVersionClicksInner>"
    },
    {
        "name": "versionB",
        "baseName": "Version B",
        "type": "Array<AbTestVersionClicksInner>"
    }
]; //# sourceMappingURL=abTestCampaignResultClickedLinks.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/abTestCampaignResultStatistics.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AbTestCampaignResultStatistics = void 0;
class AbTestCampaignResultStatistics {
    static getAttributeTypeMap() {
        return AbTestCampaignResultStatistics.attributeTypeMap;
    }
}
exports.AbTestCampaignResultStatistics = AbTestCampaignResultStatistics;
AbTestCampaignResultStatistics.discriminator = undefined;
AbTestCampaignResultStatistics.attributeTypeMap = [
    {
        "name": "openers",
        "baseName": "openers",
        "type": "AbTestVersionStats"
    },
    {
        "name": "clicks",
        "baseName": "clicks",
        "type": "AbTestVersionStats"
    },
    {
        "name": "unsubscribed",
        "baseName": "unsubscribed",
        "type": "AbTestVersionStats"
    },
    {
        "name": "hardBounces",
        "baseName": "hardBounces",
        "type": "AbTestVersionStats"
    },
    {
        "name": "softBounces",
        "baseName": "softBounces",
        "type": "AbTestVersionStats"
    },
    {
        "name": "complaints",
        "baseName": "complaints",
        "type": "AbTestVersionStats"
    }
]; //# sourceMappingURL=abTestCampaignResultStatistics.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/abTestVersionClicksInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AbTestVersionClicksInner = void 0;
class AbTestVersionClicksInner {
    static getAttributeTypeMap() {
        return AbTestVersionClicksInner.attributeTypeMap;
    }
}
exports.AbTestVersionClicksInner = AbTestVersionClicksInner;
AbTestVersionClicksInner.discriminator = undefined;
AbTestVersionClicksInner.attributeTypeMap = [
    {
        "name": "link",
        "baseName": "link",
        "type": "string"
    },
    {
        "name": "clicksCount",
        "baseName": "clicksCount",
        "type": "number"
    },
    {
        "name": "clickRate",
        "baseName": "clickRate",
        "type": "string"
    }
]; //# sourceMappingURL=abTestVersionClicksInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/abTestVersionStats.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AbTestVersionStats = void 0;
class AbTestVersionStats {
    static getAttributeTypeMap() {
        return AbTestVersionStats.attributeTypeMap;
    }
}
exports.AbTestVersionStats = AbTestVersionStats;
AbTestVersionStats.discriminator = undefined;
AbTestVersionStats.attributeTypeMap = [
    {
        "name": "versionA",
        "baseName": "Version A",
        "type": "string"
    },
    {
        "name": "versionB",
        "baseName": "Version B",
        "type": "string"
    }
]; //# sourceMappingURL=abTestVersionStats.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/addChildDomain.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AddChildDomain = void 0;
class AddChildDomain {
    static getAttributeTypeMap() {
        return AddChildDomain.attributeTypeMap;
    }
}
exports.AddChildDomain = AddChildDomain;
AddChildDomain.discriminator = undefined;
AddChildDomain.attributeTypeMap = [
    {
        "name": "domain",
        "baseName": "domain",
        "type": "string"
    }
]; //# sourceMappingURL=addChildDomain.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/addContactToList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AddContactToList = void 0;
class AddContactToList {
    static getAttributeTypeMap() {
        return AddContactToList.attributeTypeMap;
    }
}
exports.AddContactToList = AddContactToList;
AddContactToList.discriminator = undefined;
AddContactToList.attributeTypeMap = [
    {
        "name": "emails",
        "baseName": "emails",
        "type": "Array<string>"
    },
    {
        "name": "ids",
        "baseName": "ids",
        "type": "Array<number>"
    }
]; //# sourceMappingURL=addContactToList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/addCredits.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AddCredits = void 0;
class AddCredits {
    static getAttributeTypeMap() {
        return AddCredits.attributeTypeMap;
    }
}
exports.AddCredits = AddCredits;
AddCredits.discriminator = undefined;
AddCredits.attributeTypeMap = [
    {
        "name": "sms",
        "baseName": "sms",
        "type": "number"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "number"
    }
]; //# sourceMappingURL=addCredits.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/authenticateDomainModel.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AuthenticateDomainModel = void 0;
class AuthenticateDomainModel {
    static getAttributeTypeMap() {
        return AuthenticateDomainModel.attributeTypeMap;
    }
}
exports.AuthenticateDomainModel = AuthenticateDomainModel;
AuthenticateDomainModel.discriminator = undefined;
AuthenticateDomainModel.attributeTypeMap = [
    {
        "name": "domainName",
        "baseName": "domain_name",
        "type": "string"
    },
    {
        "name": "message",
        "baseName": "message",
        "type": "string"
    }
]; //# sourceMappingURL=authenticateDomainModel.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/blockDomain.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BlockDomain = void 0;
class BlockDomain {
    static getAttributeTypeMap() {
        return BlockDomain.attributeTypeMap;
    }
}
exports.BlockDomain = BlockDomain;
BlockDomain.discriminator = undefined;
BlockDomain.attributeTypeMap = [
    {
        "name": "domain",
        "baseName": "domain",
        "type": "string"
    }
]; //# sourceMappingURL=blockDomain.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/cart.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Cart = void 0;
class Cart {
    static getAttributeTypeMap() {
        return Cart.attributeTypeMap;
    }
}
exports.Cart = Cart;
Cart.discriminator = undefined;
Cart.attributeTypeMap = [
    {
        "name": "currency",
        "baseName": "currency",
        "type": "Cart.CurrencyEnum"
    },
    {
        "name": "specificAmount",
        "baseName": "specificAmount",
        "type": "number"
    }
];
(function(Cart) {
    let CurrencyEnum;
    (function(CurrencyEnum) {
        CurrencyEnum[CurrencyEnum["Eur"] = 'EUR'] = "Eur";
    })(CurrencyEnum = Cart.CurrencyEnum || (Cart.CurrencyEnum = {}));
})(Cart = exports.Cart || (exports.Cart = {})); //# sourceMappingURL=cart.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/companiesIdPatchRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CompaniesIdPatchRequest = void 0;
class CompaniesIdPatchRequest {
    static getAttributeTypeMap() {
        return CompaniesIdPatchRequest.attributeTypeMap;
    }
}
exports.CompaniesIdPatchRequest = CompaniesIdPatchRequest;
CompaniesIdPatchRequest.discriminator = undefined;
CompaniesIdPatchRequest.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "attributes",
        "baseName": "attributes",
        "type": "object"
    },
    {
        "name": "countryCode",
        "baseName": "countryCode",
        "type": "number"
    }
]; //# sourceMappingURL=companiesIdPatchRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/companiesLinkUnlinkIdPatchRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CompaniesLinkUnlinkIdPatchRequest = void 0;
class CompaniesLinkUnlinkIdPatchRequest {
    static getAttributeTypeMap() {
        return CompaniesLinkUnlinkIdPatchRequest.attributeTypeMap;
    }
}
exports.CompaniesLinkUnlinkIdPatchRequest = CompaniesLinkUnlinkIdPatchRequest;
CompaniesLinkUnlinkIdPatchRequest.discriminator = undefined;
CompaniesLinkUnlinkIdPatchRequest.attributeTypeMap = [
    {
        "name": "linkContactIds",
        "baseName": "linkContactIds",
        "type": "Array<number>"
    },
    {
        "name": "unlinkContactIds",
        "baseName": "unlinkContactIds",
        "type": "Array<number>"
    },
    {
        "name": "linkDealsIds",
        "baseName": "linkDealsIds",
        "type": "Array<string>"
    },
    {
        "name": "unlinkDealsIds",
        "baseName": "unlinkDealsIds",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=companiesLinkUnlinkIdPatchRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/companiesList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CompaniesList = void 0;
class CompaniesList {
    static getAttributeTypeMap() {
        return CompaniesList.attributeTypeMap;
    }
}
exports.CompaniesList = CompaniesList;
CompaniesList.discriminator = undefined;
CompaniesList.attributeTypeMap = [
    {
        "name": "items",
        "baseName": "items",
        "type": "Array<Company>"
    }
]; //# sourceMappingURL=companiesList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/companiesPost200Response.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CompaniesPost200Response = void 0;
class CompaniesPost200Response {
    static getAttributeTypeMap() {
        return CompaniesPost200Response.attributeTypeMap;
    }
}
exports.CompaniesPost200Response = CompaniesPost200Response;
CompaniesPost200Response.discriminator = undefined;
CompaniesPost200Response.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    }
]; //# sourceMappingURL=companiesPost200Response.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/companiesPostRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CompaniesPostRequest = void 0;
class CompaniesPostRequest {
    static getAttributeTypeMap() {
        return CompaniesPostRequest.attributeTypeMap;
    }
}
exports.CompaniesPostRequest = CompaniesPostRequest;
CompaniesPostRequest.discriminator = undefined;
CompaniesPostRequest.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "attributes",
        "baseName": "attributes",
        "type": "object"
    },
    {
        "name": "countryCode",
        "baseName": "countryCode",
        "type": "number"
    },
    {
        "name": "linkedContactsIds",
        "baseName": "linkedContactsIds",
        "type": "Array<number>"
    },
    {
        "name": "linkedDealsIds",
        "baseName": "linkedDealsIds",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=companiesPostRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/company.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Company = void 0;
class Company {
    static getAttributeTypeMap() {
        return Company.attributeTypeMap;
    }
}
exports.Company = Company;
Company.discriminator = undefined;
Company.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "attributes",
        "baseName": "attributes",
        "type": "object"
    },
    {
        "name": "linkedContactsIds",
        "baseName": "linkedContactsIds",
        "type": "Array<number>"
    },
    {
        "name": "linkedDealsIds",
        "baseName": "linkedDealsIds",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=company.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/companyAttributesInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CompanyAttributesInner = void 0;
class CompanyAttributesInner {
    static getAttributeTypeMap() {
        return CompanyAttributesInner.attributeTypeMap;
    }
}
exports.CompanyAttributesInner = CompanyAttributesInner;
CompanyAttributesInner.discriminator = undefined;
CompanyAttributesInner.attributeTypeMap = [
    {
        "name": "internalName",
        "baseName": "internalName",
        "type": "string"
    },
    {
        "name": "label",
        "baseName": "label",
        "type": "string"
    },
    {
        "name": "attributeTypeName",
        "baseName": "attributeTypeName",
        "type": "string"
    },
    {
        "name": "attributeOptions",
        "baseName": "attributeOptions",
        "type": "Array<object>"
    },
    {
        "name": "isRequired",
        "baseName": "isRequired",
        "type": "boolean"
    }
]; //# sourceMappingURL=companyAttributesInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/componentItems.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ComponentItems = void 0;
class ComponentItems {
    static getAttributeTypeMap() {
        return ComponentItems.attributeTypeMap;
    }
}
exports.ComponentItems = ComponentItems;
ComponentItems.discriminator = undefined;
ComponentItems.attributeTypeMap = [
    {
        "name": "type",
        "baseName": "type",
        "type": "string"
    },
    {
        "name": "text",
        "baseName": "text",
        "type": "string"
    }
]; //# sourceMappingURL=componentItems.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/configuration.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Configuration = void 0;
class Configuration {
    static getAttributeTypeMap() {
        return Configuration.attributeTypeMap;
    }
}
exports.Configuration = Configuration;
Configuration.discriminator = undefined;
Configuration.attributeTypeMap = [
    {
        "name": "customSuccessUrl",
        "baseName": "customSuccessUrl",
        "type": "string"
    }
]; //# sourceMappingURL=configuration.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/conversationsAgentOnlinePingPostRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConversationsAgentOnlinePingPostRequest = void 0;
class ConversationsAgentOnlinePingPostRequest {
    static getAttributeTypeMap() {
        return ConversationsAgentOnlinePingPostRequest.attributeTypeMap;
    }
}
exports.ConversationsAgentOnlinePingPostRequest = ConversationsAgentOnlinePingPostRequest;
ConversationsAgentOnlinePingPostRequest.discriminator = undefined;
ConversationsAgentOnlinePingPostRequest.attributeTypeMap = [
    {
        "name": "agentId",
        "baseName": "agentId",
        "type": "string"
    },
    {
        "name": "receivedFrom",
        "baseName": "receivedFrom",
        "type": "string"
    },
    {
        "name": "agentEmail",
        "baseName": "agentEmail",
        "type": "string"
    },
    {
        "name": "agentName",
        "baseName": "agentName",
        "type": "string"
    }
]; //# sourceMappingURL=conversationsAgentOnlinePingPostRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/conversationsMessage.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConversationsMessage = void 0;
class ConversationsMessage {
    static getAttributeTypeMap() {
        return ConversationsMessage.attributeTypeMap;
    }
}
exports.ConversationsMessage = ConversationsMessage;
ConversationsMessage.discriminator = undefined;
ConversationsMessage.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "ConversationsMessage.TypeEnum"
    },
    {
        "name": "text",
        "baseName": "text",
        "type": "string"
    },
    {
        "name": "visitorId",
        "baseName": "visitorId",
        "type": "string"
    },
    {
        "name": "agentId",
        "baseName": "agentId",
        "type": "string"
    },
    {
        "name": "agentName",
        "baseName": "agentName",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "number"
    },
    {
        "name": "isPushed",
        "baseName": "isPushed",
        "type": "boolean"
    },
    {
        "name": "receivedFrom",
        "baseName": "receivedFrom",
        "type": "string"
    },
    {
        "name": "file",
        "baseName": "file",
        "type": "ConversationsMessageFile"
    }
];
(function(ConversationsMessage) {
    let TypeEnum;
    (function(TypeEnum) {
        TypeEnum[TypeEnum["Agent"] = 'agent'] = "Agent";
        TypeEnum[TypeEnum["Visitor"] = 'visitor'] = "Visitor";
    })(TypeEnum = ConversationsMessage.TypeEnum || (ConversationsMessage.TypeEnum = {}));
})(ConversationsMessage = exports.ConversationsMessage || (exports.ConversationsMessage = {})); //# sourceMappingURL=conversationsMessage.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/conversationsMessageFile.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConversationsMessageFile = void 0;
class ConversationsMessageFile {
    static getAttributeTypeMap() {
        return ConversationsMessageFile.attributeTypeMap;
    }
}
exports.ConversationsMessageFile = ConversationsMessageFile;
ConversationsMessageFile.discriminator = undefined;
ConversationsMessageFile.attributeTypeMap = [
    {
        "name": "filename",
        "baseName": "filename",
        "type": "string"
    },
    {
        "name": "size",
        "baseName": "size",
        "type": "number"
    },
    {
        "name": "isImage",
        "baseName": "isImage",
        "type": "boolean"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "imageInfo",
        "baseName": "imageInfo",
        "type": "ConversationsMessageFileImageInfo"
    }
]; //# sourceMappingURL=conversationsMessageFile.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/conversationsMessageFileImageInfo.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConversationsMessageFileImageInfo = void 0;
class ConversationsMessageFileImageInfo {
    static getAttributeTypeMap() {
        return ConversationsMessageFileImageInfo.attributeTypeMap;
    }
}
exports.ConversationsMessageFileImageInfo = ConversationsMessageFileImageInfo;
ConversationsMessageFileImageInfo.discriminator = undefined;
ConversationsMessageFileImageInfo.attributeTypeMap = [
    {
        "name": "width",
        "baseName": "width",
        "type": "number"
    },
    {
        "name": "height",
        "baseName": "height",
        "type": "number"
    },
    {
        "name": "previewUrl",
        "baseName": "previewUrl",
        "type": "string"
    }
]; //# sourceMappingURL=conversationsMessageFileImageInfo.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/conversationsMessagesIdPutRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConversationsMessagesIdPutRequest = void 0;
class ConversationsMessagesIdPutRequest {
    static getAttributeTypeMap() {
        return ConversationsMessagesIdPutRequest.attributeTypeMap;
    }
}
exports.ConversationsMessagesIdPutRequest = ConversationsMessagesIdPutRequest;
ConversationsMessagesIdPutRequest.discriminator = undefined;
ConversationsMessagesIdPutRequest.attributeTypeMap = [
    {
        "name": "text",
        "baseName": "text",
        "type": "string"
    }
]; //# sourceMappingURL=conversationsMessagesIdPutRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/conversationsMessagesPostRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConversationsMessagesPostRequest = void 0;
class ConversationsMessagesPostRequest {
    static getAttributeTypeMap() {
        return ConversationsMessagesPostRequest.attributeTypeMap;
    }
}
exports.ConversationsMessagesPostRequest = ConversationsMessagesPostRequest;
ConversationsMessagesPostRequest.discriminator = undefined;
ConversationsMessagesPostRequest.attributeTypeMap = [
    {
        "name": "visitorId",
        "baseName": "visitorId",
        "type": "string"
    },
    {
        "name": "text",
        "baseName": "text",
        "type": "string"
    },
    {
        "name": "agentId",
        "baseName": "agentId",
        "type": "string"
    },
    {
        "name": "receivedFrom",
        "baseName": "receivedFrom",
        "type": "string"
    },
    {
        "name": "agentEmail",
        "baseName": "agentEmail",
        "type": "string"
    },
    {
        "name": "agentName",
        "baseName": "agentName",
        "type": "string"
    }
]; //# sourceMappingURL=conversationsMessagesPostRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/conversationsPushedMessagesIdPutRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConversationsPushedMessagesIdPutRequest = void 0;
class ConversationsPushedMessagesIdPutRequest {
    static getAttributeTypeMap() {
        return ConversationsPushedMessagesIdPutRequest.attributeTypeMap;
    }
}
exports.ConversationsPushedMessagesIdPutRequest = ConversationsPushedMessagesIdPutRequest;
ConversationsPushedMessagesIdPutRequest.discriminator = undefined;
ConversationsPushedMessagesIdPutRequest.attributeTypeMap = [
    {
        "name": "text",
        "baseName": "text",
        "type": "string"
    }
]; //# sourceMappingURL=conversationsPushedMessagesIdPutRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/conversationsPushedMessagesPostRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConversationsPushedMessagesPostRequest = void 0;
class ConversationsPushedMessagesPostRequest {
    static getAttributeTypeMap() {
        return ConversationsPushedMessagesPostRequest.attributeTypeMap;
    }
}
exports.ConversationsPushedMessagesPostRequest = ConversationsPushedMessagesPostRequest;
ConversationsPushedMessagesPostRequest.discriminator = undefined;
ConversationsPushedMessagesPostRequest.attributeTypeMap = [
    {
        "name": "visitorId",
        "baseName": "visitorId",
        "type": "string"
    },
    {
        "name": "text",
        "baseName": "text",
        "type": "string"
    },
    {
        "name": "agentId",
        "baseName": "agentId",
        "type": "string"
    },
    {
        "name": "groupId",
        "baseName": "groupId",
        "type": "string"
    }
]; //# sourceMappingURL=conversationsPushedMessagesPostRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/conversionSourceMetrics.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConversionSourceMetrics = void 0;
class ConversionSourceMetrics {
    static getAttributeTypeMap() {
        return ConversionSourceMetrics.attributeTypeMap;
    }
}
exports.ConversionSourceMetrics = ConversionSourceMetrics;
ConversionSourceMetrics.discriminator = undefined;
ConversionSourceMetrics.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "conversionSource",
        "baseName": "conversionSource",
        "type": "ConversionSourceMetrics.ConversionSourceEnum"
    },
    {
        "name": "ordersCount",
        "baseName": "ordersCount",
        "type": "number"
    },
    {
        "name": "revenue",
        "baseName": "revenue",
        "type": "number"
    },
    {
        "name": "averageBasket",
        "baseName": "averageBasket",
        "type": "number"
    }
];
(function(ConversionSourceMetrics) {
    let ConversionSourceEnum;
    (function(ConversionSourceEnum) {
        ConversionSourceEnum[ConversionSourceEnum["EmailCampaign"] = 'email_campaign'] = "EmailCampaign";
    })(ConversionSourceEnum = ConversionSourceMetrics.ConversionSourceEnum || (ConversionSourceMetrics.ConversionSourceEnum = {}));
})(ConversionSourceMetrics = exports.ConversionSourceMetrics || (exports.ConversionSourceMetrics = {})); //# sourceMappingURL=conversionSourceMetrics.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/conversionSourceProduct.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConversionSourceProduct = void 0;
class ConversionSourceProduct {
    static getAttributeTypeMap() {
        return ConversionSourceProduct.attributeTypeMap;
    }
}
exports.ConversionSourceProduct = ConversionSourceProduct;
ConversionSourceProduct.discriminator = undefined;
ConversionSourceProduct.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "sku",
        "baseName": "sku",
        "type": "string"
    },
    {
        "name": "price",
        "baseName": "price",
        "type": "number"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "imageUrl",
        "baseName": "imageUrl",
        "type": "string"
    },
    {
        "name": "ordersCount",
        "baseName": "ordersCount",
        "type": "number"
    },
    {
        "name": "revenue",
        "baseName": "revenue",
        "type": "number"
    }
]; //# sourceMappingURL=conversionSourceProduct.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupDetailsResponse.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CorporateGroupDetailsResponse = void 0;
class CorporateGroupDetailsResponse {
    static getAttributeTypeMap() {
        return CorporateGroupDetailsResponse.attributeTypeMap;
    }
}
exports.CorporateGroupDetailsResponse = CorporateGroupDetailsResponse;
CorporateGroupDetailsResponse.discriminator = undefined;
CorporateGroupDetailsResponse.attributeTypeMap = [
    {
        "name": "group",
        "baseName": "group",
        "type": "CorporateGroupDetailsResponseGroup"
    },
    {
        "name": "subAccounts",
        "baseName": "sub-accounts",
        "type": "Array<CorporateGroupDetailsResponseSubAccountsInner>"
    },
    {
        "name": "users",
        "baseName": "users",
        "type": "Array<CorporateGroupDetailsResponseUsersInner>"
    }
]; //# sourceMappingURL=corporateGroupDetailsResponse.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupDetailsResponseGroup.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CorporateGroupDetailsResponseGroup = void 0;
class CorporateGroupDetailsResponseGroup {
    static getAttributeTypeMap() {
        return CorporateGroupDetailsResponseGroup.attributeTypeMap;
    }
}
exports.CorporateGroupDetailsResponseGroup = CorporateGroupDetailsResponseGroup;
CorporateGroupDetailsResponseGroup.discriminator = undefined;
CorporateGroupDetailsResponseGroup.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "groupName",
        "baseName": "groupName",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    }
]; //# sourceMappingURL=corporateGroupDetailsResponseGroup.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupDetailsResponseSubAccountsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CorporateGroupDetailsResponseSubAccountsInner = void 0;
class CorporateGroupDetailsResponseSubAccountsInner {
    static getAttributeTypeMap() {
        return CorporateGroupDetailsResponseSubAccountsInner.attributeTypeMap;
    }
}
exports.CorporateGroupDetailsResponseSubAccountsInner = CorporateGroupDetailsResponseSubAccountsInner;
CorporateGroupDetailsResponseSubAccountsInner.discriminator = undefined;
CorporateGroupDetailsResponseSubAccountsInner.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "companyName",
        "baseName": "companyName",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    }
]; //# sourceMappingURL=corporateGroupDetailsResponseSubAccountsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupDetailsResponseUsersInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CorporateGroupDetailsResponseUsersInner = void 0;
class CorporateGroupDetailsResponseUsersInner {
    static getAttributeTypeMap() {
        return CorporateGroupDetailsResponseUsersInner.attributeTypeMap;
    }
}
exports.CorporateGroupDetailsResponseUsersInner = CorporateGroupDetailsResponseUsersInner;
CorporateGroupDetailsResponseUsersInner.discriminator = undefined;
CorporateGroupDetailsResponseUsersInner.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "lastName",
        "baseName": "lastName",
        "type": "string"
    },
    {
        "name": "firstName",
        "baseName": "firstName",
        "type": "string"
    }
]; //# sourceMappingURL=corporateGroupDetailsResponseUsersInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupPost201Response.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CorporateGroupPost201Response = void 0;
class CorporateGroupPost201Response {
    static getAttributeTypeMap() {
        return CorporateGroupPost201Response.attributeTypeMap;
    }
}
exports.CorporateGroupPost201Response = CorporateGroupPost201Response;
CorporateGroupPost201Response.discriminator = undefined;
CorporateGroupPost201Response.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    }
]; //# sourceMappingURL=corporateGroupPost201Response.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupPostRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CorporateGroupPostRequest = void 0;
class CorporateGroupPostRequest {
    static getAttributeTypeMap() {
        return CorporateGroupPostRequest.attributeTypeMap;
    }
}
exports.CorporateGroupPostRequest = CorporateGroupPostRequest;
CorporateGroupPostRequest.discriminator = undefined;
CorporateGroupPostRequest.attributeTypeMap = [
    {
        "name": "groupName",
        "baseName": "groupName",
        "type": "string"
    },
    {
        "name": "subAccountIds",
        "baseName": "subAccountIds",
        "type": "Array<number>"
    }
]; //# sourceMappingURL=corporateGroupPostRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupUnlinkGroupIdSubAccountsPutRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CorporateGroupUnlinkGroupIdSubAccountsPutRequest = void 0;
class CorporateGroupUnlinkGroupIdSubAccountsPutRequest {
    static getAttributeTypeMap() {
        return CorporateGroupUnlinkGroupIdSubAccountsPutRequest.attributeTypeMap;
    }
}
exports.CorporateGroupUnlinkGroupIdSubAccountsPutRequest = CorporateGroupUnlinkGroupIdSubAccountsPutRequest;
CorporateGroupUnlinkGroupIdSubAccountsPutRequest.discriminator = undefined;
CorporateGroupUnlinkGroupIdSubAccountsPutRequest.attributeTypeMap = [
    {
        "name": "subAccountIds",
        "baseName": "subAccountIds",
        "type": "Array<number>"
    }
]; //# sourceMappingURL=corporateGroupUnlinkGroupIdSubAccountsPutRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/corporateSubAccountIpAssociatePostRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CorporateSubAccountIpAssociatePostRequest = void 0;
class CorporateSubAccountIpAssociatePostRequest {
    static getAttributeTypeMap() {
        return CorporateSubAccountIpAssociatePostRequest.attributeTypeMap;
    }
}
exports.CorporateSubAccountIpAssociatePostRequest = CorporateSubAccountIpAssociatePostRequest;
CorporateSubAccountIpAssociatePostRequest.discriminator = undefined;
CorporateSubAccountIpAssociatePostRequest.attributeTypeMap = [
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    },
    {
        "name": "ids",
        "baseName": "ids",
        "type": "Array<number>"
    }
]; //# sourceMappingURL=corporateSubAccountIpAssociatePostRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/corporateSubAccountIpDissociatePutRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CorporateSubAccountIpDissociatePutRequest = void 0;
class CorporateSubAccountIpDissociatePutRequest {
    static getAttributeTypeMap() {
        return CorporateSubAccountIpDissociatePutRequest.attributeTypeMap;
    }
}
exports.CorporateSubAccountIpDissociatePutRequest = CorporateSubAccountIpDissociatePutRequest;
CorporateSubAccountIpDissociatePutRequest.discriminator = undefined;
CorporateSubAccountIpDissociatePutRequest.attributeTypeMap = [
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    },
    {
        "name": "ids",
        "baseName": "ids",
        "type": "Array<number>"
    }
]; //# sourceMappingURL=corporateSubAccountIpDissociatePutRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/corporateUserInvitationActionEmailPut200Response.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CorporateUserInvitationActionEmailPut200Response = void 0;
class CorporateUserInvitationActionEmailPut200Response {
    static getAttributeTypeMap() {
        return CorporateUserInvitationActionEmailPut200Response.attributeTypeMap;
    }
}
exports.CorporateUserInvitationActionEmailPut200Response = CorporateUserInvitationActionEmailPut200Response;
CorporateUserInvitationActionEmailPut200Response.discriminator = undefined;
CorporateUserInvitationActionEmailPut200Response.attributeTypeMap = [
    {
        "name": "message",
        "baseName": "message",
        "type": "string"
    }
]; //# sourceMappingURL=corporateUserInvitationActionEmailPut200Response.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createApiKeyRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateApiKeyRequest = void 0;
class CreateApiKeyRequest {
    static getAttributeTypeMap() {
        return CreateApiKeyRequest.attributeTypeMap;
    }
}
exports.CreateApiKeyRequest = CreateApiKeyRequest;
CreateApiKeyRequest.discriminator = undefined;
CreateApiKeyRequest.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=createApiKeyRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createApiKeyResponse.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateApiKeyResponse = void 0;
class CreateApiKeyResponse {
    static getAttributeTypeMap() {
        return CreateApiKeyResponse.attributeTypeMap;
    }
}
exports.CreateApiKeyResponse = CreateApiKeyResponse;
CreateApiKeyResponse.discriminator = undefined;
CreateApiKeyResponse.attributeTypeMap = [
    {
        "name": "status",
        "baseName": "status",
        "type": "string"
    },
    {
        "name": "key",
        "baseName": "key",
        "type": "string"
    }
]; //# sourceMappingURL=createApiKeyResponse.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createAttribute.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateAttribute = void 0;
class CreateAttribute {
    static getAttributeTypeMap() {
        return CreateAttribute.attributeTypeMap;
    }
}
exports.CreateAttribute = CreateAttribute;
CreateAttribute.discriminator = undefined;
CreateAttribute.attributeTypeMap = [
    {
        "name": "value",
        "baseName": "value",
        "type": "string"
    },
    {
        "name": "isRecurring",
        "baseName": "isRecurring",
        "type": "boolean"
    },
    {
        "name": "enumeration",
        "baseName": "enumeration",
        "type": "Array<CreateAttributeEnumerationInner>"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "CreateAttribute.TypeEnum"
    }
];
(function(CreateAttribute) {
    let TypeEnum;
    (function(TypeEnum) {
        TypeEnum[TypeEnum["Text"] = 'text'] = "Text";
        TypeEnum[TypeEnum["Date"] = 'date'] = "Date";
        TypeEnum[TypeEnum["Float"] = 'float'] = "Float";
        TypeEnum[TypeEnum["Boolean"] = 'boolean'] = "Boolean";
        TypeEnum[TypeEnum["Id"] = 'id'] = "Id";
        TypeEnum[TypeEnum["Category"] = 'category'] = "Category";
    })(TypeEnum = CreateAttribute.TypeEnum || (CreateAttribute.TypeEnum = {}));
})(CreateAttribute = exports.CreateAttribute || (exports.CreateAttribute = {})); //# sourceMappingURL=createAttribute.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createAttributeEnumerationInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateAttributeEnumerationInner = void 0;
class CreateAttributeEnumerationInner {
    static getAttributeTypeMap() {
        return CreateAttributeEnumerationInner.attributeTypeMap;
    }
}
exports.CreateAttributeEnumerationInner = CreateAttributeEnumerationInner;
CreateAttributeEnumerationInner.discriminator = undefined;
CreateAttributeEnumerationInner.attributeTypeMap = [
    {
        "name": "value",
        "baseName": "value",
        "type": "number"
    },
    {
        "name": "label",
        "baseName": "label",
        "type": "string"
    }
]; //# sourceMappingURL=createAttributeEnumerationInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createCategoryModel.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateCategoryModel = void 0;
class CreateCategoryModel {
    static getAttributeTypeMap() {
        return CreateCategoryModel.attributeTypeMap;
    }
}
exports.CreateCategoryModel = CreateCategoryModel;
CreateCategoryModel.discriminator = undefined;
CreateCategoryModel.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    }
]; //# sourceMappingURL=createCategoryModel.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createChild.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateChild = void 0;
class CreateChild {
    static getAttributeTypeMap() {
        return CreateChild.attributeTypeMap;
    }
}
exports.CreateChild = CreateChild;
CreateChild.discriminator = undefined;
CreateChild.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "firstName",
        "baseName": "firstName",
        "type": "string"
    },
    {
        "name": "lastName",
        "baseName": "lastName",
        "type": "string"
    },
    {
        "name": "companyName",
        "baseName": "companyName",
        "type": "string"
    },
    {
        "name": "password",
        "baseName": "password",
        "type": "string"
    },
    {
        "name": "language",
        "baseName": "language",
        "type": "CreateChild.LanguageEnum"
    }
];
(function(CreateChild) {
    let LanguageEnum;
    (function(LanguageEnum) {
        LanguageEnum[LanguageEnum["Fr"] = 'fr'] = "Fr";
        LanguageEnum[LanguageEnum["Es"] = 'es'] = "Es";
        LanguageEnum[LanguageEnum["Pt"] = 'pt'] = "Pt";
        LanguageEnum[LanguageEnum["It"] = 'it'] = "It";
        LanguageEnum[LanguageEnum["De"] = 'de'] = "De";
        LanguageEnum[LanguageEnum["En"] = 'en'] = "En";
    })(LanguageEnum = CreateChild.LanguageEnum || (CreateChild.LanguageEnum = {}));
})(CreateChild = exports.CreateChild || (exports.CreateChild = {})); //# sourceMappingURL=createChild.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createContact.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateContact = void 0;
class CreateContact {
    constructor(){
        this['updateEnabled'] = false;
    }
    static getAttributeTypeMap() {
        return CreateContact.attributeTypeMap;
    }
}
exports.CreateContact = CreateContact;
CreateContact.discriminator = undefined;
CreateContact.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "extId",
        "baseName": "ext_id",
        "type": "string"
    },
    {
        "name": "attributes",
        "baseName": "attributes",
        "type": "object"
    },
    {
        "name": "emailBlacklisted",
        "baseName": "emailBlacklisted",
        "type": "boolean"
    },
    {
        "name": "smsBlacklisted",
        "baseName": "smsBlacklisted",
        "type": "boolean"
    },
    {
        "name": "listIds",
        "baseName": "listIds",
        "type": "Array<number>"
    },
    {
        "name": "updateEnabled",
        "baseName": "updateEnabled",
        "type": "boolean"
    },
    {
        "name": "smtpBlacklistSender",
        "baseName": "smtpBlacklistSender",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=createContact.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createCouponCollection201Response.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateCouponCollection201Response = void 0;
class CreateCouponCollection201Response {
    static getAttributeTypeMap() {
        return CreateCouponCollection201Response.attributeTypeMap;
    }
}
exports.CreateCouponCollection201Response = CreateCouponCollection201Response;
CreateCouponCollection201Response.discriminator = undefined;
CreateCouponCollection201Response.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    }
]; //# sourceMappingURL=createCouponCollection201Response.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createCouponCollectionRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateCouponCollectionRequest = void 0;
class CreateCouponCollectionRequest {
    static getAttributeTypeMap() {
        return CreateCouponCollectionRequest.attributeTypeMap;
    }
}
exports.CreateCouponCollectionRequest = CreateCouponCollectionRequest;
CreateCouponCollectionRequest.discriminator = undefined;
CreateCouponCollectionRequest.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "defaultCoupon",
        "baseName": "defaultCoupon",
        "type": "string"
    },
    {
        "name": "expirationDate",
        "baseName": "expirationDate",
        "type": "Date"
    },
    {
        "name": "remainingDaysAlert",
        "baseName": "remainingDaysAlert",
        "type": "number"
    },
    {
        "name": "remainingCouponsAlert",
        "baseName": "remainingCouponsAlert",
        "type": "number"
    }
]; //# sourceMappingURL=createCouponCollectionRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createCouponsRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateCouponsRequest = void 0;
class CreateCouponsRequest {
    static getAttributeTypeMap() {
        return CreateCouponsRequest.attributeTypeMap;
    }
}
exports.CreateCouponsRequest = CreateCouponsRequest;
CreateCouponsRequest.discriminator = undefined;
CreateCouponsRequest.attributeTypeMap = [
    {
        "name": "collectionId",
        "baseName": "collectionId",
        "type": "string"
    },
    {
        "name": "coupons",
        "baseName": "coupons",
        "type": "Set<string>"
    }
]; //# sourceMappingURL=createCouponsRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createDoiContact.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateDoiContact = void 0;
class CreateDoiContact {
    static getAttributeTypeMap() {
        return CreateDoiContact.attributeTypeMap;
    }
}
exports.CreateDoiContact = CreateDoiContact;
CreateDoiContact.discriminator = undefined;
CreateDoiContact.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "attributes",
        "baseName": "attributes",
        "type": "object"
    },
    {
        "name": "includeListIds",
        "baseName": "includeListIds",
        "type": "Array<number>"
    },
    {
        "name": "excludeListIds",
        "baseName": "excludeListIds",
        "type": "Array<number>"
    },
    {
        "name": "templateId",
        "baseName": "templateId",
        "type": "number"
    },
    {
        "name": "redirectionUrl",
        "baseName": "redirectionUrl",
        "type": "string"
    }
]; //# sourceMappingURL=createDoiContact.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createDomain.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateDomain = void 0;
class CreateDomain {
    static getAttributeTypeMap() {
        return CreateDomain.attributeTypeMap;
    }
}
exports.CreateDomain = CreateDomain;
CreateDomain.discriminator = undefined;
CreateDomain.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=createDomain.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createDomainModel.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateDomainModel = void 0;
class CreateDomainModel {
    static getAttributeTypeMap() {
        return CreateDomainModel.attributeTypeMap;
    }
}
exports.CreateDomainModel = CreateDomainModel;
CreateDomainModel.discriminator = undefined;
CreateDomainModel.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "domainName",
        "baseName": "domain_name",
        "type": "string"
    },
    {
        "name": "domainProvider",
        "baseName": "domain_provider",
        "type": "string"
    },
    {
        "name": "message",
        "baseName": "message",
        "type": "string"
    },
    {
        "name": "dnsRecords",
        "baseName": "dns_records",
        "type": "CreateDomainModelDnsRecords"
    }
]; //# sourceMappingURL=createDomainModel.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createDomainModelDnsRecords.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateDomainModelDnsRecords = void 0;
class CreateDomainModelDnsRecords {
    static getAttributeTypeMap() {
        return CreateDomainModelDnsRecords.attributeTypeMap;
    }
}
exports.CreateDomainModelDnsRecords = CreateDomainModelDnsRecords;
CreateDomainModelDnsRecords.discriminator = undefined;
CreateDomainModelDnsRecords.attributeTypeMap = [
    {
        "name": "dkimRecord",
        "baseName": "dkim_record",
        "type": "CreateDomainModelDnsRecordsDkimRecord"
    },
    {
        "name": "brevoCode",
        "baseName": "brevo_code",
        "type": "CreateDomainModelDnsRecordsDkimRecord"
    },
    {
        "name": "dmarcRecord",
        "baseName": "dmarc_record",
        "type": "CreateDomainModelDnsRecordsDkimRecord"
    }
]; //# sourceMappingURL=createDomainModelDnsRecords.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createDomainModelDnsRecordsDkimRecord.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateDomainModelDnsRecordsDkimRecord = void 0;
class CreateDomainModelDnsRecordsDkimRecord {
    static getAttributeTypeMap() {
        return CreateDomainModelDnsRecordsDkimRecord.attributeTypeMap;
    }
}
exports.CreateDomainModelDnsRecordsDkimRecord = CreateDomainModelDnsRecordsDkimRecord;
CreateDomainModelDnsRecordsDkimRecord.discriminator = undefined;
CreateDomainModelDnsRecordsDkimRecord.attributeTypeMap = [
    {
        "name": "type",
        "baseName": "type",
        "type": "string"
    },
    {
        "name": "value",
        "baseName": "value",
        "type": "string"
    },
    {
        "name": "hostName",
        "baseName": "host_name",
        "type": "string"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "boolean"
    }
]; //# sourceMappingURL=createDomainModelDnsRecordsDkimRecord.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createEmailCampaign.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateEmailCampaign = void 0;
class CreateEmailCampaign {
    constructor(){
        this['inlineImageActivation'] = false;
        this['sendAtBestTime'] = false;
        this['abTesting'] = false;
        this['ipWarmupEnable'] = false;
    }
    static getAttributeTypeMap() {
        return CreateEmailCampaign.attributeTypeMap;
    }
}
exports.CreateEmailCampaign = CreateEmailCampaign;
CreateEmailCampaign.discriminator = undefined;
CreateEmailCampaign.attributeTypeMap = [
    {
        "name": "tag",
        "baseName": "tag",
        "type": "string"
    },
    {
        "name": "sender",
        "baseName": "sender",
        "type": "CreateEmailCampaignSender"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "htmlContent",
        "baseName": "htmlContent",
        "type": "string"
    },
    {
        "name": "htmlUrl",
        "baseName": "htmlUrl",
        "type": "string"
    },
    {
        "name": "templateId",
        "baseName": "templateId",
        "type": "number"
    },
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "string"
    },
    {
        "name": "subject",
        "baseName": "subject",
        "type": "string"
    },
    {
        "name": "previewText",
        "baseName": "previewText",
        "type": "string"
    },
    {
        "name": "replyTo",
        "baseName": "replyTo",
        "type": "string"
    },
    {
        "name": "toField",
        "baseName": "toField",
        "type": "string"
    },
    {
        "name": "recipients",
        "baseName": "recipients",
        "type": "CreateEmailCampaignRecipients"
    },
    {
        "name": "attachmentUrl",
        "baseName": "attachmentUrl",
        "type": "string"
    },
    {
        "name": "inlineImageActivation",
        "baseName": "inlineImageActivation",
        "type": "boolean"
    },
    {
        "name": "mirrorActive",
        "baseName": "mirrorActive",
        "type": "boolean"
    },
    {
        "name": "footer",
        "baseName": "footer",
        "type": "string"
    },
    {
        "name": "header",
        "baseName": "header",
        "type": "string"
    },
    {
        "name": "utmCampaign",
        "baseName": "utmCampaign",
        "type": "string"
    },
    {
        "name": "params",
        "baseName": "params",
        "type": "object"
    },
    {
        "name": "sendAtBestTime",
        "baseName": "sendAtBestTime",
        "type": "boolean"
    },
    {
        "name": "abTesting",
        "baseName": "abTesting",
        "type": "boolean"
    },
    {
        "name": "subjectA",
        "baseName": "subjectA",
        "type": "string"
    },
    {
        "name": "subjectB",
        "baseName": "subjectB",
        "type": "string"
    },
    {
        "name": "splitRule",
        "baseName": "splitRule",
        "type": "number"
    },
    {
        "name": "winnerCriteria",
        "baseName": "winnerCriteria",
        "type": "CreateEmailCampaign.WinnerCriteriaEnum"
    },
    {
        "name": "winnerDelay",
        "baseName": "winnerDelay",
        "type": "number"
    },
    {
        "name": "ipWarmupEnable",
        "baseName": "ipWarmupEnable",
        "type": "boolean"
    },
    {
        "name": "initialQuota",
        "baseName": "initialQuota",
        "type": "number"
    },
    {
        "name": "increaseRate",
        "baseName": "increaseRate",
        "type": "number"
    },
    {
        "name": "unsubscriptionPageId",
        "baseName": "unsubscriptionPageId",
        "type": "string"
    },
    {
        "name": "updateFormId",
        "baseName": "updateFormId",
        "type": "string"
    }
];
(function(CreateEmailCampaign) {
    let WinnerCriteriaEnum;
    (function(WinnerCriteriaEnum) {
        WinnerCriteriaEnum[WinnerCriteriaEnum["Open"] = 'open'] = "Open";
        WinnerCriteriaEnum[WinnerCriteriaEnum["Click"] = 'click'] = "Click";
    })(WinnerCriteriaEnum = CreateEmailCampaign.WinnerCriteriaEnum || (CreateEmailCampaign.WinnerCriteriaEnum = {}));
})(CreateEmailCampaign = exports.CreateEmailCampaign || (exports.CreateEmailCampaign = {})); //# sourceMappingURL=createEmailCampaign.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createEmailCampaignRecipients.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateEmailCampaignRecipients = void 0;
class CreateEmailCampaignRecipients {
    static getAttributeTypeMap() {
        return CreateEmailCampaignRecipients.attributeTypeMap;
    }
}
exports.CreateEmailCampaignRecipients = CreateEmailCampaignRecipients;
CreateEmailCampaignRecipients.discriminator = undefined;
CreateEmailCampaignRecipients.attributeTypeMap = [
    {
        "name": "exclusionListIds",
        "baseName": "exclusionListIds",
        "type": "Array<number>"
    },
    {
        "name": "listIds",
        "baseName": "listIds",
        "type": "Array<number>"
    },
    {
        "name": "segmentIds",
        "baseName": "segmentIds",
        "type": "Array<number>"
    }
]; //# sourceMappingURL=createEmailCampaignRecipients.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createEmailCampaignSender.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateEmailCampaignSender = void 0;
class CreateEmailCampaignSender {
    static getAttributeTypeMap() {
        return CreateEmailCampaignSender.attributeTypeMap;
    }
}
exports.CreateEmailCampaignSender = CreateEmailCampaignSender;
CreateEmailCampaignSender.discriminator = undefined;
CreateEmailCampaignSender.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    }
]; //# sourceMappingURL=createEmailCampaignSender.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createExternalFeed.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateExternalFeed = void 0;
class CreateExternalFeed {
    constructor(){
        this['authType'] = CreateExternalFeed.AuthTypeEnum.NoAuth;
        this['cache'] = false;
    }
    static getAttributeTypeMap() {
        return CreateExternalFeed.attributeTypeMap;
    }
}
exports.CreateExternalFeed = CreateExternalFeed;
CreateExternalFeed.discriminator = undefined;
CreateExternalFeed.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "authType",
        "baseName": "authType",
        "type": "CreateExternalFeed.AuthTypeEnum"
    },
    {
        "name": "username",
        "baseName": "username",
        "type": "string"
    },
    {
        "name": "password",
        "baseName": "password",
        "type": "string"
    },
    {
        "name": "token",
        "baseName": "token",
        "type": "string"
    },
    {
        "name": "headers",
        "baseName": "headers",
        "type": "Array<GetExternalFeedByUUIDHeadersInner>"
    },
    {
        "name": "maxRetries",
        "baseName": "maxRetries",
        "type": "number"
    },
    {
        "name": "cache",
        "baseName": "cache",
        "type": "boolean"
    }
];
(function(CreateExternalFeed) {
    let AuthTypeEnum;
    (function(AuthTypeEnum) {
        AuthTypeEnum[AuthTypeEnum["Basic"] = 'basic'] = "Basic";
        AuthTypeEnum[AuthTypeEnum["Token"] = 'token'] = "Token";
        AuthTypeEnum[AuthTypeEnum["NoAuth"] = 'noAuth'] = "NoAuth";
    })(AuthTypeEnum = CreateExternalFeed.AuthTypeEnum || (CreateExternalFeed.AuthTypeEnum = {}));
})(CreateExternalFeed = exports.CreateExternalFeed || (exports.CreateExternalFeed = {})); //# sourceMappingURL=createExternalFeed.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createExternalFeed201Response.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateExternalFeed201Response = void 0;
class CreateExternalFeed201Response {
    static getAttributeTypeMap() {
        return CreateExternalFeed201Response.attributeTypeMap;
    }
}
exports.CreateExternalFeed201Response = CreateExternalFeed201Response;
CreateExternalFeed201Response.discriminator = undefined;
CreateExternalFeed201Response.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    }
]; //# sourceMappingURL=createExternalFeed201Response.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateList = void 0;
class CreateList {
    static getAttributeTypeMap() {
        return CreateList.attributeTypeMap;
    }
}
exports.CreateList = CreateList;
CreateList.discriminator = undefined;
CreateList.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "folderId",
        "baseName": "folderId",
        "type": "number"
    }
]; //# sourceMappingURL=createList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createModel.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateModel = void 0;
class CreateModel {
    static getAttributeTypeMap() {
        return CreateModel.attributeTypeMap;
    }
}
exports.CreateModel = CreateModel;
CreateModel.discriminator = undefined;
CreateModel.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    }
]; //# sourceMappingURL=createModel.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createPaymentRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreatePaymentRequest = void 0;
class CreatePaymentRequest {
    static getAttributeTypeMap() {
        return CreatePaymentRequest.attributeTypeMap;
    }
}
exports.CreatePaymentRequest = CreatePaymentRequest;
CreatePaymentRequest.discriminator = undefined;
CreatePaymentRequest.attributeTypeMap = [
    {
        "name": "reference",
        "baseName": "reference",
        "type": "string"
    },
    {
        "name": "cart",
        "baseName": "cart",
        "type": "Cart"
    },
    {
        "name": "contactId",
        "baseName": "contactId",
        "type": "number"
    },
    {
        "name": "description",
        "baseName": "description",
        "type": "string"
    },
    {
        "name": "notification",
        "baseName": "notification",
        "type": "Notification"
    },
    {
        "name": "configuration",
        "baseName": "configuration",
        "type": "Configuration"
    }
]; //# sourceMappingURL=createPaymentRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createPaymentResponse.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreatePaymentResponse = void 0;
class CreatePaymentResponse {
    static getAttributeTypeMap() {
        return CreatePaymentResponse.attributeTypeMap;
    }
}
exports.CreatePaymentResponse = CreatePaymentResponse;
CreatePaymentResponse.discriminator = undefined;
CreatePaymentResponse.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    }
]; //# sourceMappingURL=createPaymentResponse.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createProductModel.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateProductModel = void 0;
class CreateProductModel {
    static getAttributeTypeMap() {
        return CreateProductModel.attributeTypeMap;
    }
}
exports.CreateProductModel = CreateProductModel;
CreateProductModel.discriminator = undefined;
CreateProductModel.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    }
]; //# sourceMappingURL=createProductModel.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createReseller.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateReseller = void 0;
class CreateReseller {
    static getAttributeTypeMap() {
        return CreateReseller.attributeTypeMap;
    }
}
exports.CreateReseller = CreateReseller;
CreateReseller.discriminator = undefined;
CreateReseller.attributeTypeMap = [
    {
        "name": "authKey",
        "baseName": "authKey",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    }
]; //# sourceMappingURL=createReseller.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createSender.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateSender = void 0;
class CreateSender {
    static getAttributeTypeMap() {
        return CreateSender.attributeTypeMap;
    }
}
exports.CreateSender = CreateSender;
CreateSender.discriminator = undefined;
CreateSender.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "ips",
        "baseName": "ips",
        "type": "Array<CreateSenderIpsInner>"
    }
]; //# sourceMappingURL=createSender.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createSenderIpsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateSenderIpsInner = void 0;
class CreateSenderIpsInner {
    static getAttributeTypeMap() {
        return CreateSenderIpsInner.attributeTypeMap;
    }
}
exports.CreateSenderIpsInner = CreateSenderIpsInner;
CreateSenderIpsInner.discriminator = undefined;
CreateSenderIpsInner.attributeTypeMap = [
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    },
    {
        "name": "domain",
        "baseName": "domain",
        "type": "string"
    },
    {
        "name": "weight",
        "baseName": "weight",
        "type": "number"
    }
]; //# sourceMappingURL=createSenderIpsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createSenderModel.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateSenderModel = void 0;
class CreateSenderModel {
    static getAttributeTypeMap() {
        return CreateSenderModel.attributeTypeMap;
    }
}
exports.CreateSenderModel = CreateSenderModel;
CreateSenderModel.discriminator = undefined;
CreateSenderModel.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "spfError",
        "baseName": "spfError",
        "type": "boolean"
    },
    {
        "name": "dkimError",
        "baseName": "dkimError",
        "type": "boolean"
    }
]; //# sourceMappingURL=createSenderModel.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createSmsCampaign.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateSmsCampaign = void 0;
class CreateSmsCampaign {
    constructor(){
        this['unicodeEnabled'] = false;
    }
    static getAttributeTypeMap() {
        return CreateSmsCampaign.attributeTypeMap;
    }
}
exports.CreateSmsCampaign = CreateSmsCampaign;
CreateSmsCampaign.discriminator = undefined;
CreateSmsCampaign.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "sender",
        "baseName": "sender",
        "type": "string"
    },
    {
        "name": "content",
        "baseName": "content",
        "type": "string"
    },
    {
        "name": "recipients",
        "baseName": "recipients",
        "type": "CreateSmsCampaignRecipients"
    },
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "string"
    },
    {
        "name": "unicodeEnabled",
        "baseName": "unicodeEnabled",
        "type": "boolean"
    },
    {
        "name": "organisationPrefix",
        "baseName": "organisationPrefix",
        "type": "string"
    },
    {
        "name": "unsubscribeInstruction",
        "baseName": "unsubscribeInstruction",
        "type": "string"
    }
]; //# sourceMappingURL=createSmsCampaign.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createSmsCampaignRecipients.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateSmsCampaignRecipients = void 0;
class CreateSmsCampaignRecipients {
    static getAttributeTypeMap() {
        return CreateSmsCampaignRecipients.attributeTypeMap;
    }
}
exports.CreateSmsCampaignRecipients = CreateSmsCampaignRecipients;
CreateSmsCampaignRecipients.discriminator = undefined;
CreateSmsCampaignRecipients.attributeTypeMap = [
    {
        "name": "listIds",
        "baseName": "listIds",
        "type": "Array<number>"
    },
    {
        "name": "exclusionListIds",
        "baseName": "exclusionListIds",
        "type": "Array<number>"
    }
]; //# sourceMappingURL=createSmsCampaignRecipients.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createSmtpEmail.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateSmtpEmail = void 0;
class CreateSmtpEmail {
    static getAttributeTypeMap() {
        return CreateSmtpEmail.attributeTypeMap;
    }
}
exports.CreateSmtpEmail = CreateSmtpEmail;
CreateSmtpEmail.discriminator = undefined;
CreateSmtpEmail.attributeTypeMap = [
    {
        "name": "messageId",
        "baseName": "messageId",
        "type": "string"
    },
    {
        "name": "messageIds",
        "baseName": "messageIds",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=createSmtpEmail.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createSmtpTemplate.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateSmtpTemplate = void 0;
class CreateSmtpTemplate {
    static getAttributeTypeMap() {
        return CreateSmtpTemplate.attributeTypeMap;
    }
}
exports.CreateSmtpTemplate = CreateSmtpTemplate;
CreateSmtpTemplate.discriminator = undefined;
CreateSmtpTemplate.attributeTypeMap = [
    {
        "name": "tag",
        "baseName": "tag",
        "type": "string"
    },
    {
        "name": "sender",
        "baseName": "sender",
        "type": "CreateSmtpTemplateSender"
    },
    {
        "name": "templateName",
        "baseName": "templateName",
        "type": "string"
    },
    {
        "name": "htmlContent",
        "baseName": "htmlContent",
        "type": "string"
    },
    {
        "name": "htmlUrl",
        "baseName": "htmlUrl",
        "type": "string"
    },
    {
        "name": "subject",
        "baseName": "subject",
        "type": "string"
    },
    {
        "name": "replyTo",
        "baseName": "replyTo",
        "type": "string"
    },
    {
        "name": "toField",
        "baseName": "toField",
        "type": "string"
    },
    {
        "name": "attachmentUrl",
        "baseName": "attachmentUrl",
        "type": "string"
    },
    {
        "name": "isActive",
        "baseName": "isActive",
        "type": "boolean"
    }
]; //# sourceMappingURL=createSmtpTemplate.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createSmtpTemplateSender.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateSmtpTemplateSender = void 0;
class CreateSmtpTemplateSender {
    static getAttributeTypeMap() {
        return CreateSmtpTemplateSender.attributeTypeMap;
    }
}
exports.CreateSmtpTemplateSender = CreateSmtpTemplateSender;
CreateSmtpTemplateSender.discriminator = undefined;
CreateSmtpTemplateSender.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    }
]; //# sourceMappingURL=createSmtpTemplateSender.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createSubAccount.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateSubAccount = void 0;
class CreateSubAccount {
    static getAttributeTypeMap() {
        return CreateSubAccount.attributeTypeMap;
    }
}
exports.CreateSubAccount = CreateSubAccount;
CreateSubAccount.discriminator = undefined;
CreateSubAccount.attributeTypeMap = [
    {
        "name": "companyName",
        "baseName": "companyName",
        "type": "string"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "language",
        "baseName": "language",
        "type": "CreateSubAccount.LanguageEnum"
    },
    {
        "name": "timezone",
        "baseName": "timezone",
        "type": "string"
    },
    {
        "name": "groupIds",
        "baseName": "groupIds",
        "type": "Array<string>"
    }
];
(function(CreateSubAccount) {
    let LanguageEnum;
    (function(LanguageEnum) {
        LanguageEnum[LanguageEnum["En"] = 'en'] = "En";
        LanguageEnum[LanguageEnum["Fr"] = 'fr'] = "Fr";
        LanguageEnum[LanguageEnum["It"] = 'it'] = "It";
        LanguageEnum[LanguageEnum["Es"] = 'es'] = "Es";
        LanguageEnum[LanguageEnum["Pt"] = 'pt'] = "Pt";
        LanguageEnum[LanguageEnum["De"] = 'de'] = "De";
    })(LanguageEnum = CreateSubAccount.LanguageEnum || (CreateSubAccount.LanguageEnum = {}));
})(CreateSubAccount = exports.CreateSubAccount || (exports.CreateSubAccount = {})); //# sourceMappingURL=createSubAccount.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createSubAccountResponse.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateSubAccountResponse = void 0;
class CreateSubAccountResponse {
    static getAttributeTypeMap() {
        return CreateSubAccountResponse.attributeTypeMap;
    }
}
exports.CreateSubAccountResponse = CreateSubAccountResponse;
CreateSubAccountResponse.discriminator = undefined;
CreateSubAccountResponse.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    }
]; //# sourceMappingURL=createSubAccountResponse.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateBatchCategory.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateUpdateBatchCategory = void 0;
class CreateUpdateBatchCategory {
    static getAttributeTypeMap() {
        return CreateUpdateBatchCategory.attributeTypeMap;
    }
}
exports.CreateUpdateBatchCategory = CreateUpdateBatchCategory;
CreateUpdateBatchCategory.discriminator = undefined;
CreateUpdateBatchCategory.attributeTypeMap = [
    {
        "name": "categories",
        "baseName": "categories",
        "type": "Array<CreateUpdateCategories>"
    },
    {
        "name": "updateEnabled",
        "baseName": "updateEnabled",
        "type": "boolean"
    }
]; //# sourceMappingURL=createUpdateBatchCategory.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateBatchCategoryModel.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateUpdateBatchCategoryModel = void 0;
class CreateUpdateBatchCategoryModel {
    static getAttributeTypeMap() {
        return CreateUpdateBatchCategoryModel.attributeTypeMap;
    }
}
exports.CreateUpdateBatchCategoryModel = CreateUpdateBatchCategoryModel;
CreateUpdateBatchCategoryModel.discriminator = undefined;
CreateUpdateBatchCategoryModel.attributeTypeMap = [
    {
        "name": "createdCount",
        "baseName": "createdCount",
        "type": "number"
    },
    {
        "name": "updatedCount",
        "baseName": "updatedCount",
        "type": "number"
    }
]; //# sourceMappingURL=createUpdateBatchCategoryModel.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateBatchProducts.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateUpdateBatchProducts = void 0;
class CreateUpdateBatchProducts {
    static getAttributeTypeMap() {
        return CreateUpdateBatchProducts.attributeTypeMap;
    }
}
exports.CreateUpdateBatchProducts = CreateUpdateBatchProducts;
CreateUpdateBatchProducts.discriminator = undefined;
CreateUpdateBatchProducts.attributeTypeMap = [
    {
        "name": "products",
        "baseName": "products",
        "type": "Array<CreateUpdateProducts>"
    },
    {
        "name": "updateEnabled",
        "baseName": "updateEnabled",
        "type": "boolean"
    }
]; //# sourceMappingURL=createUpdateBatchProducts.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateBatchProductsModel.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateUpdateBatchProductsModel = void 0;
class CreateUpdateBatchProductsModel {
    static getAttributeTypeMap() {
        return CreateUpdateBatchProductsModel.attributeTypeMap;
    }
}
exports.CreateUpdateBatchProductsModel = CreateUpdateBatchProductsModel;
CreateUpdateBatchProductsModel.discriminator = undefined;
CreateUpdateBatchProductsModel.attributeTypeMap = [
    {
        "name": "createdCount",
        "baseName": "createdCount",
        "type": "number"
    },
    {
        "name": "updatedCount",
        "baseName": "updatedCount",
        "type": "number"
    }
]; //# sourceMappingURL=createUpdateBatchProductsModel.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateCategories.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateUpdateCategories = void 0;
class CreateUpdateCategories {
    static getAttributeTypeMap() {
        return CreateUpdateCategories.attributeTypeMap;
    }
}
exports.CreateUpdateCategories = CreateUpdateCategories;
CreateUpdateCategories.discriminator = undefined;
CreateUpdateCategories.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "deletedAt",
        "baseName": "deletedAt",
        "type": "string"
    },
    {
        "name": "isDeleted",
        "baseName": "isDeleted",
        "type": "boolean"
    }
]; //# sourceMappingURL=createUpdateCategories.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateCategory.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateUpdateCategory = void 0;
class CreateUpdateCategory {
    constructor(){
        this['updateEnabled'] = false;
    }
    static getAttributeTypeMap() {
        return CreateUpdateCategory.attributeTypeMap;
    }
}
exports.CreateUpdateCategory = CreateUpdateCategory;
CreateUpdateCategory.discriminator = undefined;
CreateUpdateCategory.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "updateEnabled",
        "baseName": "updateEnabled",
        "type": "boolean"
    },
    {
        "name": "deletedAt",
        "baseName": "deletedAt",
        "type": "string"
    },
    {
        "name": "isDeleted",
        "baseName": "isDeleted",
        "type": "boolean"
    }
]; //# sourceMappingURL=createUpdateCategory.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateContactModel.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateUpdateContactModel = void 0;
class CreateUpdateContactModel {
    static getAttributeTypeMap() {
        return CreateUpdateContactModel.attributeTypeMap;
    }
}
exports.CreateUpdateContactModel = CreateUpdateContactModel;
CreateUpdateContactModel.discriminator = undefined;
CreateUpdateContactModel.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    }
]; //# sourceMappingURL=createUpdateContactModel.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateFolder.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateUpdateFolder = void 0;
class CreateUpdateFolder {
    static getAttributeTypeMap() {
        return CreateUpdateFolder.attributeTypeMap;
    }
}
exports.CreateUpdateFolder = CreateUpdateFolder;
CreateUpdateFolder.discriminator = undefined;
CreateUpdateFolder.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=createUpdateFolder.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateProduct.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateUpdateProduct = void 0;
class CreateUpdateProduct {
    constructor(){
        this['updateEnabled'] = false;
    }
    static getAttributeTypeMap() {
        return CreateUpdateProduct.attributeTypeMap;
    }
}
exports.CreateUpdateProduct = CreateUpdateProduct;
CreateUpdateProduct.discriminator = undefined;
CreateUpdateProduct.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "imageUrl",
        "baseName": "imageUrl",
        "type": "string"
    },
    {
        "name": "sku",
        "baseName": "sku",
        "type": "string"
    },
    {
        "name": "price",
        "baseName": "price",
        "type": "number"
    },
    {
        "name": "categories",
        "baseName": "categories",
        "type": "Array<string>"
    },
    {
        "name": "parentId",
        "baseName": "parentId",
        "type": "string"
    },
    {
        "name": "metaInfo",
        "baseName": "metaInfo",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "updateEnabled",
        "baseName": "updateEnabled",
        "type": "boolean"
    },
    {
        "name": "deletedAt",
        "baseName": "deletedAt",
        "type": "string"
    },
    {
        "name": "isDeleted",
        "baseName": "isDeleted",
        "type": "boolean"
    }
]; //# sourceMappingURL=createUpdateProduct.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateProducts.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateUpdateProducts = void 0;
class CreateUpdateProducts {
    static getAttributeTypeMap() {
        return CreateUpdateProducts.attributeTypeMap;
    }
}
exports.CreateUpdateProducts = CreateUpdateProducts;
CreateUpdateProducts.discriminator = undefined;
CreateUpdateProducts.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "imageUrl",
        "baseName": "imageUrl",
        "type": "string"
    },
    {
        "name": "sku",
        "baseName": "sku",
        "type": "string"
    },
    {
        "name": "price",
        "baseName": "price",
        "type": "number"
    },
    {
        "name": "categories",
        "baseName": "categories",
        "type": "Array<string>"
    },
    {
        "name": "parentId",
        "baseName": "parentId",
        "type": "string"
    },
    {
        "name": "metaInfo",
        "baseName": "metaInfo",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "deletedAt",
        "baseName": "deletedAt",
        "type": "string"
    },
    {
        "name": "isDeleted",
        "baseName": "isDeleted",
        "type": "boolean"
    }
]; //# sourceMappingURL=createUpdateProducts.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createWebhook.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateWebhook = void 0;
class CreateWebhook {
    constructor(){
        this['type'] = CreateWebhook.TypeEnum.Transactional;
    }
    static getAttributeTypeMap() {
        return CreateWebhook.attributeTypeMap;
    }
}
exports.CreateWebhook = CreateWebhook;
CreateWebhook.discriminator = undefined;
CreateWebhook.attributeTypeMap = [
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "description",
        "baseName": "description",
        "type": "string"
    },
    {
        "name": "events",
        "baseName": "events",
        "type": "Array<CreateWebhook.EventsEnum>"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "CreateWebhook.TypeEnum"
    },
    {
        "name": "domain",
        "baseName": "domain",
        "type": "string"
    },
    {
        "name": "batched",
        "baseName": "batched",
        "type": "boolean"
    },
    {
        "name": "auth",
        "baseName": "auth",
        "type": "GetWebhookAuth"
    },
    {
        "name": "headers",
        "baseName": "headers",
        "type": "Array<GetWebhookHeadersInner>"
    }
];
(function(CreateWebhook) {
    let EventsEnum;
    (function(EventsEnum) {
        EventsEnum[EventsEnum["Sent"] = 'sent'] = "Sent";
        EventsEnum[EventsEnum["HardBounce"] = 'hardBounce'] = "HardBounce";
        EventsEnum[EventsEnum["SoftBounce"] = 'softBounce'] = "SoftBounce";
        EventsEnum[EventsEnum["Blocked"] = 'blocked'] = "Blocked";
        EventsEnum[EventsEnum["Spam"] = 'spam'] = "Spam";
        EventsEnum[EventsEnum["Delivered"] = 'delivered'] = "Delivered";
        EventsEnum[EventsEnum["Request"] = 'request'] = "Request";
        EventsEnum[EventsEnum["Click"] = 'click'] = "Click";
        EventsEnum[EventsEnum["Invalid"] = 'invalid'] = "Invalid";
        EventsEnum[EventsEnum["Deferred"] = 'deferred'] = "Deferred";
        EventsEnum[EventsEnum["Opened"] = 'opened'] = "Opened";
        EventsEnum[EventsEnum["UniqueOpened"] = 'uniqueOpened'] = "UniqueOpened";
        EventsEnum[EventsEnum["Unsubscribed"] = 'unsubscribed'] = "Unsubscribed";
        EventsEnum[EventsEnum["ListAddition"] = 'listAddition'] = "ListAddition";
        EventsEnum[EventsEnum["ContactUpdated"] = 'contactUpdated'] = "ContactUpdated";
        EventsEnum[EventsEnum["ContactDeleted"] = 'contactDeleted'] = "ContactDeleted";
        EventsEnum[EventsEnum["InboundEmailProcessed"] = 'inboundEmailProcessed'] = "InboundEmailProcessed";
    })(EventsEnum = CreateWebhook.EventsEnum || (CreateWebhook.EventsEnum = {}));
    let TypeEnum;
    (function(TypeEnum) {
        TypeEnum[TypeEnum["Transactional"] = 'transactional'] = "Transactional";
        TypeEnum[TypeEnum["Marketing"] = 'marketing'] = "Marketing";
        TypeEnum[TypeEnum["Inbound"] = 'inbound'] = "Inbound";
    })(TypeEnum = CreateWebhook.TypeEnum || (CreateWebhook.TypeEnum = {}));
})(CreateWebhook = exports.CreateWebhook || (exports.CreateWebhook = {})); //# sourceMappingURL=createWebhook.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createWhatsAppCampaign.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateWhatsAppCampaign = void 0;
class CreateWhatsAppCampaign {
    static getAttributeTypeMap() {
        return CreateWhatsAppCampaign.attributeTypeMap;
    }
}
exports.CreateWhatsAppCampaign = CreateWhatsAppCampaign;
CreateWhatsAppCampaign.discriminator = undefined;
CreateWhatsAppCampaign.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "templateId",
        "baseName": "templateId",
        "type": "number"
    },
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "string"
    },
    {
        "name": "recipients",
        "baseName": "recipients",
        "type": "CreateWhatsAppCampaignRecipients"
    }
]; //# sourceMappingURL=createWhatsAppCampaign.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createWhatsAppCampaignRecipients.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateWhatsAppCampaignRecipients = void 0;
class CreateWhatsAppCampaignRecipients {
    static getAttributeTypeMap() {
        return CreateWhatsAppCampaignRecipients.attributeTypeMap;
    }
}
exports.CreateWhatsAppCampaignRecipients = CreateWhatsAppCampaignRecipients;
CreateWhatsAppCampaignRecipients.discriminator = undefined;
CreateWhatsAppCampaignRecipients.attributeTypeMap = [
    {
        "name": "excludedListIds",
        "baseName": "excludedListIds",
        "type": "Array<number>"
    },
    {
        "name": "listIds",
        "baseName": "listIds",
        "type": "Array<number>"
    },
    {
        "name": "segments",
        "baseName": "segments",
        "type": "Array<number>"
    }
]; //# sourceMappingURL=createWhatsAppCampaignRecipients.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createWhatsAppTemplate.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateWhatsAppTemplate = void 0;
class CreateWhatsAppTemplate {
    static getAttributeTypeMap() {
        return CreateWhatsAppTemplate.attributeTypeMap;
    }
}
exports.CreateWhatsAppTemplate = CreateWhatsAppTemplate;
CreateWhatsAppTemplate.discriminator = undefined;
CreateWhatsAppTemplate.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "language",
        "baseName": "language",
        "type": "string"
    },
    {
        "name": "category",
        "baseName": "category",
        "type": "CreateWhatsAppTemplate.CategoryEnum"
    },
    {
        "name": "mediaUrl",
        "baseName": "mediaUrl",
        "type": "string"
    },
    {
        "name": "bodyText",
        "baseName": "bodyText",
        "type": "string"
    },
    {
        "name": "headerText",
        "baseName": "headerText",
        "type": "string"
    },
    {
        "name": "source",
        "baseName": "source",
        "type": "CreateWhatsAppTemplate.SourceEnum"
    }
];
(function(CreateWhatsAppTemplate) {
    let CategoryEnum;
    (function(CategoryEnum) {
        CategoryEnum[CategoryEnum["Marketing"] = 'MARKETING'] = "Marketing";
        CategoryEnum[CategoryEnum["Utility"] = 'UTILITY'] = "Utility";
    })(CategoryEnum = CreateWhatsAppTemplate.CategoryEnum || (CreateWhatsAppTemplate.CategoryEnum = {}));
    let SourceEnum;
    (function(SourceEnum) {
        SourceEnum[SourceEnum["Automation"] = 'Automation'] = "Automation";
        SourceEnum[SourceEnum["Conversations"] = 'Conversations'] = "Conversations";
    })(SourceEnum = CreateWhatsAppTemplate.SourceEnum || (CreateWhatsAppTemplate.SourceEnum = {}));
})(CreateWhatsAppTemplate = exports.CreateWhatsAppTemplate || (exports.CreateWhatsAppTemplate = {})); //# sourceMappingURL=createWhatsAppTemplate.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createdBatchId.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreatedBatchId = void 0;
class CreatedBatchId {
    static getAttributeTypeMap() {
        return CreatedBatchId.attributeTypeMap;
    }
}
exports.CreatedBatchId = CreatedBatchId;
CreatedBatchId.discriminator = undefined;
CreatedBatchId.attributeTypeMap = [
    {
        "name": "batchId",
        "baseName": "batchId",
        "type": "number"
    }
]; //# sourceMappingURL=createdBatchId.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/createdProcessId.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreatedProcessId = void 0;
class CreatedProcessId {
    static getAttributeTypeMap() {
        return CreatedProcessId.attributeTypeMap;
    }
}
exports.CreatedProcessId = CreatedProcessId;
CreatedProcessId.discriminator = undefined;
CreatedProcessId.attributeTypeMap = [
    {
        "name": "processId",
        "baseName": "processId",
        "type": "number"
    }
]; //# sourceMappingURL=createdProcessId.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/crmDealsIdPatchRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CrmDealsIdPatchRequest = void 0;
class CrmDealsIdPatchRequest {
    static getAttributeTypeMap() {
        return CrmDealsIdPatchRequest.attributeTypeMap;
    }
}
exports.CrmDealsIdPatchRequest = CrmDealsIdPatchRequest;
CrmDealsIdPatchRequest.discriminator = undefined;
CrmDealsIdPatchRequest.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "attributes",
        "baseName": "attributes",
        "type": "object"
    }
]; //# sourceMappingURL=crmDealsIdPatchRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/crmDealsLinkUnlinkIdPatchRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CrmDealsLinkUnlinkIdPatchRequest = void 0;
class CrmDealsLinkUnlinkIdPatchRequest {
    static getAttributeTypeMap() {
        return CrmDealsLinkUnlinkIdPatchRequest.attributeTypeMap;
    }
}
exports.CrmDealsLinkUnlinkIdPatchRequest = CrmDealsLinkUnlinkIdPatchRequest;
CrmDealsLinkUnlinkIdPatchRequest.discriminator = undefined;
CrmDealsLinkUnlinkIdPatchRequest.attributeTypeMap = [
    {
        "name": "linkContactIds",
        "baseName": "linkContactIds",
        "type": "Array<number>"
    },
    {
        "name": "unlinkContactIds",
        "baseName": "unlinkContactIds",
        "type": "Array<number>"
    },
    {
        "name": "linkCompanyIds",
        "baseName": "linkCompanyIds",
        "type": "Array<string>"
    },
    {
        "name": "unlinkCompanyIds",
        "baseName": "unlinkCompanyIds",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=crmDealsLinkUnlinkIdPatchRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/crmDealsPost201Response.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CrmDealsPost201Response = void 0;
class CrmDealsPost201Response {
    static getAttributeTypeMap() {
        return CrmDealsPost201Response.attributeTypeMap;
    }
}
exports.CrmDealsPost201Response = CrmDealsPost201Response;
CrmDealsPost201Response.discriminator = undefined;
CrmDealsPost201Response.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    }
]; //# sourceMappingURL=crmDealsPost201Response.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/crmDealsPostRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CrmDealsPostRequest = void 0;
class CrmDealsPostRequest {
    static getAttributeTypeMap() {
        return CrmDealsPostRequest.attributeTypeMap;
    }
}
exports.CrmDealsPostRequest = CrmDealsPostRequest;
CrmDealsPostRequest.discriminator = undefined;
CrmDealsPostRequest.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "attributes",
        "baseName": "attributes",
        "type": "object"
    },
    {
        "name": "linkedContactsIds",
        "baseName": "linkedContactsIds",
        "type": "Array<number>"
    },
    {
        "name": "linkedCompaniesIds",
        "baseName": "linkedCompaniesIds",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=crmDealsPostRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/crmTasksIdPatchRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CrmTasksIdPatchRequest = void 0;
class CrmTasksIdPatchRequest {
    static getAttributeTypeMap() {
        return CrmTasksIdPatchRequest.attributeTypeMap;
    }
}
exports.CrmTasksIdPatchRequest = CrmTasksIdPatchRequest;
CrmTasksIdPatchRequest.discriminator = undefined;
CrmTasksIdPatchRequest.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "duration",
        "baseName": "duration",
        "type": "number"
    },
    {
        "name": "taskTypeId",
        "baseName": "taskTypeId",
        "type": "string"
    },
    {
        "name": "date",
        "baseName": "date",
        "type": "Date"
    },
    {
        "name": "notes",
        "baseName": "notes",
        "type": "string"
    },
    {
        "name": "done",
        "baseName": "done",
        "type": "boolean"
    },
    {
        "name": "assignToId",
        "baseName": "assignToId",
        "type": "string"
    },
    {
        "name": "contactsIds",
        "baseName": "contactsIds",
        "type": "Array<number>"
    },
    {
        "name": "dealsIds",
        "baseName": "dealsIds",
        "type": "Array<string>"
    },
    {
        "name": "companiesIds",
        "baseName": "companiesIds",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=crmTasksIdPatchRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/crmTasksPost201Response.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CrmTasksPost201Response = void 0;
class CrmTasksPost201Response {
    static getAttributeTypeMap() {
        return CrmTasksPost201Response.attributeTypeMap;
    }
}
exports.CrmTasksPost201Response = CrmTasksPost201Response;
CrmTasksPost201Response.discriminator = undefined;
CrmTasksPost201Response.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    }
]; //# sourceMappingURL=crmTasksPost201Response.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/crmTasksPostRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CrmTasksPostRequest = void 0;
class CrmTasksPostRequest {
    static getAttributeTypeMap() {
        return CrmTasksPostRequest.attributeTypeMap;
    }
}
exports.CrmTasksPostRequest = CrmTasksPostRequest;
CrmTasksPostRequest.discriminator = undefined;
CrmTasksPostRequest.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "duration",
        "baseName": "duration",
        "type": "number"
    },
    {
        "name": "taskTypeId",
        "baseName": "taskTypeId",
        "type": "string"
    },
    {
        "name": "date",
        "baseName": "date",
        "type": "Date"
    },
    {
        "name": "notes",
        "baseName": "notes",
        "type": "string"
    },
    {
        "name": "done",
        "baseName": "done",
        "type": "boolean"
    },
    {
        "name": "assignToId",
        "baseName": "assignToId",
        "type": "string"
    },
    {
        "name": "contactsIds",
        "baseName": "contactsIds",
        "type": "Array<number>"
    },
    {
        "name": "dealsIds",
        "baseName": "dealsIds",
        "type": "Array<string>"
    },
    {
        "name": "companiesIds",
        "baseName": "companiesIds",
        "type": "Array<string>"
    },
    {
        "name": "reminder",
        "baseName": "reminder",
        "type": "TaskReminder"
    }
]; //# sourceMappingURL=crmTasksPostRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/deal.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Deal = void 0;
class Deal {
    static getAttributeTypeMap() {
        return Deal.attributeTypeMap;
    }
}
exports.Deal = Deal;
Deal.discriminator = undefined;
Deal.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "attributes",
        "baseName": "attributes",
        "type": "object"
    },
    {
        "name": "linkedContactsIds",
        "baseName": "linkedContactsIds",
        "type": "Array<number>"
    },
    {
        "name": "linkedCompaniesIds",
        "baseName": "linkedCompaniesIds",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=deal.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/dealAttributesInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DealAttributesInner = void 0;
class DealAttributesInner {
    static getAttributeTypeMap() {
        return DealAttributesInner.attributeTypeMap;
    }
}
exports.DealAttributesInner = DealAttributesInner;
DealAttributesInner.discriminator = undefined;
DealAttributesInner.attributeTypeMap = [
    {
        "name": "internalName",
        "baseName": "internalName",
        "type": "string"
    },
    {
        "name": "label",
        "baseName": "label",
        "type": "string"
    },
    {
        "name": "attributeTypeName",
        "baseName": "attributeTypeName",
        "type": "string"
    },
    {
        "name": "attributeOptions",
        "baseName": "attributeOptions",
        "type": "Array<object>"
    },
    {
        "name": "isRequired",
        "baseName": "isRequired",
        "type": "boolean"
    }
]; //# sourceMappingURL=dealAttributesInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/dealsList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DealsList = void 0;
class DealsList {
    static getAttributeTypeMap() {
        return DealsList.attributeTypeMap;
    }
}
exports.DealsList = DealsList;
DealsList.discriminator = undefined;
DealsList.attributeTypeMap = [
    {
        "name": "items",
        "baseName": "items",
        "type": "Array<Deal>"
    }
]; //# sourceMappingURL=dealsList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/deleteHardbounces.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DeleteHardbounces = void 0;
class DeleteHardbounces {
    static getAttributeTypeMap() {
        return DeleteHardbounces.attributeTypeMap;
    }
}
exports.DeleteHardbounces = DeleteHardbounces;
DeleteHardbounces.discriminator = undefined;
DeleteHardbounces.attributeTypeMap = [
    {
        "name": "startDate",
        "baseName": "startDate",
        "type": "string"
    },
    {
        "name": "endDate",
        "baseName": "endDate",
        "type": "string"
    },
    {
        "name": "contactEmail",
        "baseName": "contactEmail",
        "type": "string"
    }
]; //# sourceMappingURL=deleteHardbounces.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/ecommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response = void 0;
class EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response {
    static getAttributeTypeMap() {
        return EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response.attributeTypeMap;
    }
}
exports.EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response = EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response;
EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response.discriminator = undefined;
EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "conversionSource",
        "baseName": "conversionSource",
        "type": "EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response.ConversionSourceEnum"
    },
    {
        "name": "ordersCount",
        "baseName": "ordersCount",
        "type": "number"
    },
    {
        "name": "revenue",
        "baseName": "revenue",
        "type": "number"
    },
    {
        "name": "averageBasket",
        "baseName": "averageBasket",
        "type": "number"
    },
    {
        "name": "newCustomersCount",
        "baseName": "newCustomersCount",
        "type": "number"
    }
];
(function(EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response) {
    let ConversionSourceEnum;
    (function(ConversionSourceEnum) {
        ConversionSourceEnum[ConversionSourceEnum["EmailCampaign"] = 'email_campaign'] = "EmailCampaign";
    })(ConversionSourceEnum = EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response.ConversionSourceEnum || (EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response.ConversionSourceEnum = {}));
})(EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response = exports.EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response || (exports.EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response = {})); //# sourceMappingURL=ecommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/ecommerceAttributionMetricsGet200Response.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EcommerceAttributionMetricsGet200Response = void 0;
class EcommerceAttributionMetricsGet200Response {
    static getAttributeTypeMap() {
        return EcommerceAttributionMetricsGet200Response.attributeTypeMap;
    }
}
exports.EcommerceAttributionMetricsGet200Response = EcommerceAttributionMetricsGet200Response;
EcommerceAttributionMetricsGet200Response.discriminator = undefined;
EcommerceAttributionMetricsGet200Response.attributeTypeMap = [
    {
        "name": "results",
        "baseName": "results",
        "type": "Array<ConversionSourceMetrics>"
    },
    {
        "name": "totals",
        "baseName": "totals",
        "type": "EcommerceAttributionMetricsGet200ResponseTotals"
    }
]; //# sourceMappingURL=ecommerceAttributionMetricsGet200Response.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/ecommerceAttributionMetricsGet200ResponseTotals.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EcommerceAttributionMetricsGet200ResponseTotals = void 0;
class EcommerceAttributionMetricsGet200ResponseTotals {
    static getAttributeTypeMap() {
        return EcommerceAttributionMetricsGet200ResponseTotals.attributeTypeMap;
    }
}
exports.EcommerceAttributionMetricsGet200ResponseTotals = EcommerceAttributionMetricsGet200ResponseTotals;
EcommerceAttributionMetricsGet200ResponseTotals.discriminator = undefined;
EcommerceAttributionMetricsGet200ResponseTotals.attributeTypeMap = [
    {
        "name": "ordersCount",
        "baseName": "ordersCount",
        "type": "number"
    },
    {
        "name": "revenue",
        "baseName": "revenue",
        "type": "number"
    },
    {
        "name": "averageBasket",
        "baseName": "averageBasket",
        "type": "number"
    }
]; //# sourceMappingURL=ecommerceAttributionMetricsGet200ResponseTotals.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/ecommerceAttributionProductsConversionSourceConversionSourceIdGet200Response.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EcommerceAttributionProductsConversionSourceConversionSourceIdGet200Response = void 0;
class EcommerceAttributionProductsConversionSourceConversionSourceIdGet200Response {
    static getAttributeTypeMap() {
        return EcommerceAttributionProductsConversionSourceConversionSourceIdGet200Response.attributeTypeMap;
    }
}
exports.EcommerceAttributionProductsConversionSourceConversionSourceIdGet200Response = EcommerceAttributionProductsConversionSourceConversionSourceIdGet200Response;
EcommerceAttributionProductsConversionSourceConversionSourceIdGet200Response.discriminator = undefined;
EcommerceAttributionProductsConversionSourceConversionSourceIdGet200Response.attributeTypeMap = [
    {
        "name": "products",
        "baseName": "products",
        "type": "Array<ConversionSourceProduct>"
    }
]; //# sourceMappingURL=ecommerceAttributionProductsConversionSourceConversionSourceIdGet200Response.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/ecommerceConfigDisplayCurrencyGet200Response.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EcommerceConfigDisplayCurrencyGet200Response = void 0;
class EcommerceConfigDisplayCurrencyGet200Response {
    static getAttributeTypeMap() {
        return EcommerceConfigDisplayCurrencyGet200Response.attributeTypeMap;
    }
}
exports.EcommerceConfigDisplayCurrencyGet200Response = EcommerceConfigDisplayCurrencyGet200Response;
EcommerceConfigDisplayCurrencyGet200Response.discriminator = undefined;
EcommerceConfigDisplayCurrencyGet200Response.attributeTypeMap = [
    {
        "name": "code",
        "baseName": "code",
        "type": "string"
    }
]; //# sourceMappingURL=ecommerceConfigDisplayCurrencyGet200Response.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/emailExportRecipients.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EmailExportRecipients = void 0;
class EmailExportRecipients {
    static getAttributeTypeMap() {
        return EmailExportRecipients.attributeTypeMap;
    }
}
exports.EmailExportRecipients = EmailExportRecipients;
EmailExportRecipients.discriminator = undefined;
EmailExportRecipients.attributeTypeMap = [
    {
        "name": "notifyURL",
        "baseName": "notifyURL",
        "type": "string"
    },
    {
        "name": "recipientsType",
        "baseName": "recipientsType",
        "type": "EmailExportRecipients.RecipientsTypeEnum"
    }
];
(function(EmailExportRecipients) {
    let RecipientsTypeEnum;
    (function(RecipientsTypeEnum) {
        RecipientsTypeEnum[RecipientsTypeEnum["All"] = 'all'] = "All";
        RecipientsTypeEnum[RecipientsTypeEnum["NonClickers"] = 'nonClickers'] = "NonClickers";
        RecipientsTypeEnum[RecipientsTypeEnum["NonOpeners"] = 'nonOpeners'] = "NonOpeners";
        RecipientsTypeEnum[RecipientsTypeEnum["Clickers"] = 'clickers'] = "Clickers";
        RecipientsTypeEnum[RecipientsTypeEnum["Openers"] = 'openers'] = "Openers";
        RecipientsTypeEnum[RecipientsTypeEnum["SoftBounces"] = 'softBounces'] = "SoftBounces";
        RecipientsTypeEnum[RecipientsTypeEnum["HardBounces"] = 'hardBounces'] = "HardBounces";
        RecipientsTypeEnum[RecipientsTypeEnum["Unsubscribed"] = 'unsubscribed'] = "Unsubscribed";
    })(RecipientsTypeEnum = EmailExportRecipients.RecipientsTypeEnum || (EmailExportRecipients.RecipientsTypeEnum = {}));
})(EmailExportRecipients = exports.EmailExportRecipients || (exports.EmailExportRecipients = {})); //# sourceMappingURL=emailExportRecipients.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/errorModel.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ErrorModel = void 0;
class ErrorModel {
    static getAttributeTypeMap() {
        return ErrorModel.attributeTypeMap;
    }
}
exports.ErrorModel = ErrorModel;
ErrorModel.discriminator = undefined;
ErrorModel.attributeTypeMap = [
    {
        "name": "code",
        "baseName": "code",
        "type": "ErrorModel.CodeEnum"
    },
    {
        "name": "message",
        "baseName": "message",
        "type": "string"
    }
];
(function(ErrorModel) {
    let CodeEnum;
    (function(CodeEnum) {
        CodeEnum[CodeEnum["InvalidParameter"] = 'invalid_parameter'] = "InvalidParameter";
        CodeEnum[CodeEnum["MissingParameter"] = 'missing_parameter'] = "MissingParameter";
        CodeEnum[CodeEnum["OutOfRange"] = 'out_of_range'] = "OutOfRange";
        CodeEnum[CodeEnum["CampaignProcessing"] = 'campaign_processing'] = "CampaignProcessing";
        CodeEnum[CodeEnum["CampaignSent"] = 'campaign_sent'] = "CampaignSent";
        CodeEnum[CodeEnum["DocumentNotFound"] = 'document_not_found'] = "DocumentNotFound";
        CodeEnum[CodeEnum["ResellerPermissionDenied"] = 'reseller_permission_denied'] = "ResellerPermissionDenied";
        CodeEnum[CodeEnum["NotEnoughCredits"] = 'not_enough_credits'] = "NotEnoughCredits";
        CodeEnum[CodeEnum["PermissionDenied"] = 'permission_denied'] = "PermissionDenied";
        CodeEnum[CodeEnum["DuplicateParameter"] = 'duplicate_parameter'] = "DuplicateParameter";
        CodeEnum[CodeEnum["DuplicateRequest"] = 'duplicate_request'] = "DuplicateRequest";
        CodeEnum[CodeEnum["MethodNotAllowed"] = 'method_not_allowed'] = "MethodNotAllowed";
        CodeEnum[CodeEnum["Unauthorized"] = 'unauthorized'] = "Unauthorized";
        CodeEnum[CodeEnum["AccountUnderValidation"] = 'account_under_validation'] = "AccountUnderValidation";
        CodeEnum[CodeEnum["NotAcceptable"] = 'not_acceptable'] = "NotAcceptable";
        CodeEnum[CodeEnum["BadRequest"] = 'bad_request'] = "BadRequest";
        CodeEnum[CodeEnum["UnprocessableEntity"] = 'unprocessable_entity'] = "UnprocessableEntity";
    })(CodeEnum = ErrorModel.CodeEnum || (ErrorModel.CodeEnum = {}));
})(ErrorModel = exports.ErrorModel || (exports.ErrorModel = {})); //# sourceMappingURL=errorModel.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/event.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Event = void 0;
class Event {
    static getAttributeTypeMap() {
        return Event.attributeTypeMap;
    }
}
exports.Event = Event;
Event.discriminator = undefined;
Event.attributeTypeMap = [
    {
        "name": "eventName",
        "baseName": "event_name",
        "type": "string"
    },
    {
        "name": "eventDate",
        "baseName": "event_date",
        "type": "string"
    },
    {
        "name": "identifiers",
        "baseName": "identifiers",
        "type": "EventIdentifiers"
    },
    {
        "name": "contactProperties",
        "baseName": "contact_properties",
        "type": "object"
    },
    {
        "name": "eventProperties",
        "baseName": "event_properties",
        "type": "object"
    }
]; //# sourceMappingURL=event.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/eventIdentifiers.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EventIdentifiers = void 0;
class EventIdentifiers {
    static getAttributeTypeMap() {
        return EventIdentifiers.attributeTypeMap;
    }
}
exports.EventIdentifiers = EventIdentifiers;
EventIdentifiers.discriminator = undefined;
EventIdentifiers.attributeTypeMap = [
    {
        "name": "emailId",
        "baseName": "email_id",
        "type": "string"
    },
    {
        "name": "phoneId",
        "baseName": "phone_id",
        "type": "string"
    },
    {
        "name": "whatsappId",
        "baseName": "whatsapp_id",
        "type": "string"
    },
    {
        "name": "landlineNumberId",
        "baseName": "landline_number_id",
        "type": "string"
    },
    {
        "name": "extId",
        "baseName": "ext_id",
        "type": "string"
    }
]; //# sourceMappingURL=eventIdentifiers.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/exportWebhooksHistory.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ExportWebhooksHistory = void 0;
class ExportWebhooksHistory {
    static getAttributeTypeMap() {
        return ExportWebhooksHistory.attributeTypeMap;
    }
}
exports.ExportWebhooksHistory = ExportWebhooksHistory;
ExportWebhooksHistory.discriminator = undefined;
ExportWebhooksHistory.attributeTypeMap = [
    {
        "name": "days",
        "baseName": "days",
        "type": "number"
    },
    {
        "name": "startDate",
        "baseName": "startDate",
        "type": "string"
    },
    {
        "name": "endDate",
        "baseName": "endDate",
        "type": "string"
    },
    {
        "name": "sort",
        "baseName": "sort",
        "type": "string"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "ExportWebhooksHistory.TypeEnum"
    },
    {
        "name": "event",
        "baseName": "event",
        "type": "ExportWebhooksHistory.EventEnum"
    },
    {
        "name": "notifyURL",
        "baseName": "notifyURL",
        "type": "string"
    },
    {
        "name": "webhookId",
        "baseName": "webhookId",
        "type": "number"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "messageId",
        "baseName": "messageId",
        "type": "number"
    }
];
(function(ExportWebhooksHistory) {
    let TypeEnum;
    (function(TypeEnum) {
        TypeEnum[TypeEnum["Transactional"] = 'transactional'] = "Transactional";
        TypeEnum[TypeEnum["Marketing"] = 'marketing'] = "Marketing";
    })(TypeEnum = ExportWebhooksHistory.TypeEnum || (ExportWebhooksHistory.TypeEnum = {}));
    let EventEnum;
    (function(EventEnum) {
        EventEnum[EventEnum["InvalidParameter"] = 'invalid_parameter'] = "InvalidParameter";
        EventEnum[EventEnum["MissingParameter"] = 'missing_parameter'] = "MissingParameter";
        EventEnum[EventEnum["HardBounce"] = 'hardBounce'] = "HardBounce";
        EventEnum[EventEnum["SoftBounce"] = 'softBounce'] = "SoftBounce";
        EventEnum[EventEnum["Delivered"] = 'delivered'] = "Delivered";
        EventEnum[EventEnum["Spam"] = 'spam'] = "Spam";
        EventEnum[EventEnum["Request"] = 'request'] = "Request";
        EventEnum[EventEnum["Opened"] = 'opened'] = "Opened";
        EventEnum[EventEnum["Click"] = 'click'] = "Click";
        EventEnum[EventEnum["Invalid"] = 'invalid'] = "Invalid";
        EventEnum[EventEnum["Deferred"] = 'deferred'] = "Deferred";
        EventEnum[EventEnum["Blocked"] = 'blocked'] = "Blocked";
        EventEnum[EventEnum["Unsubscribed"] = 'unsubscribed'] = "Unsubscribed";
        EventEnum[EventEnum["Error"] = 'error'] = "Error";
        EventEnum[EventEnum["UniqueOpened"] = 'uniqueOpened'] = "UniqueOpened";
        EventEnum[EventEnum["LoadedByProxy"] = 'loadedByProxy'] = "LoadedByProxy";
        EventEnum[EventEnum["AllEvents"] = 'allEvents'] = "AllEvents";
    })(EventEnum = ExportWebhooksHistory.EventEnum || (ExportWebhooksHistory.EventEnum = {}));
})(ExportWebhooksHistory = exports.ExportWebhooksHistory || (exports.ExportWebhooksHistory = {})); //# sourceMappingURL=exportWebhooksHistory.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/fileData.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FileData = void 0;
class FileData {
    static getAttributeTypeMap() {
        return FileData.attributeTypeMap;
    }
}
exports.FileData = FileData;
FileData.discriminator = undefined;
FileData.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "authorId",
        "baseName": "authorId",
        "type": "string"
    },
    {
        "name": "contactId",
        "baseName": "contactId",
        "type": "number"
    },
    {
        "name": "dealId",
        "baseName": "dealId",
        "type": "string"
    },
    {
        "name": "companyId",
        "baseName": "companyId",
        "type": "string"
    },
    {
        "name": "size",
        "baseName": "size",
        "type": "number"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "Date"
    }
]; //# sourceMappingURL=fileData.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/fileDownloadableLink.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FileDownloadableLink = void 0;
class FileDownloadableLink {
    static getAttributeTypeMap() {
        return FileDownloadableLink.attributeTypeMap;
    }
}
exports.FileDownloadableLink = FileDownloadableLink;
FileDownloadableLink.discriminator = undefined;
FileDownloadableLink.attributeTypeMap = [
    {
        "name": "fileUrl",
        "baseName": "fileUrl",
        "type": "string"
    }
]; //# sourceMappingURL=fileDownloadableLink.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getAccount.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetAccount = void 0;
class GetAccount {
    static getAttributeTypeMap() {
        return GetAccount.attributeTypeMap;
    }
}
exports.GetAccount = GetAccount;
GetAccount.discriminator = undefined;
GetAccount.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "firstName",
        "baseName": "firstName",
        "type": "string"
    },
    {
        "name": "lastName",
        "baseName": "lastName",
        "type": "string"
    },
    {
        "name": "companyName",
        "baseName": "companyName",
        "type": "string"
    },
    {
        "name": "address",
        "baseName": "address",
        "type": "GetExtendedClientAllOfAddress"
    },
    {
        "name": "plan",
        "baseName": "plan",
        "type": "Array<GetAccountAllOfPlan>"
    },
    {
        "name": "relay",
        "baseName": "relay",
        "type": "GetAccountAllOfRelay"
    },
    {
        "name": "marketingAutomation",
        "baseName": "marketingAutomation",
        "type": "GetAccountAllOfMarketingAutomation"
    }
]; //# sourceMappingURL=getAccount.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getAccountActivity.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetAccountActivity = void 0;
class GetAccountActivity {
    static getAttributeTypeMap() {
        return GetAccountActivity.attributeTypeMap;
    }
}
exports.GetAccountActivity = GetAccountActivity;
GetAccountActivity.discriminator = undefined;
GetAccountActivity.attributeTypeMap = [
    {
        "name": "logs",
        "baseName": "logs",
        "type": "Array<GetAccountActivityLogsInner>"
    }
]; //# sourceMappingURL=getAccountActivity.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getAccountActivityLogsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetAccountActivityLogsInner = void 0;
class GetAccountActivityLogsInner {
    static getAttributeTypeMap() {
        return GetAccountActivityLogsInner.attributeTypeMap;
    }
}
exports.GetAccountActivityLogsInner = GetAccountActivityLogsInner;
GetAccountActivityLogsInner.discriminator = undefined;
GetAccountActivityLogsInner.attributeTypeMap = [
    {
        "name": "action",
        "baseName": "action",
        "type": "string"
    },
    {
        "name": "date",
        "baseName": "date",
        "type": "string"
    },
    {
        "name": "userEmail",
        "baseName": "user_email",
        "type": "string"
    },
    {
        "name": "userIp",
        "baseName": "user_ip",
        "type": "string"
    },
    {
        "name": "userAgent",
        "baseName": "user_agent",
        "type": "string"
    }
]; //# sourceMappingURL=getAccountActivityLogsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getAccountAllOfMarketingAutomation.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetAccountAllOfMarketingAutomation = void 0;
class GetAccountAllOfMarketingAutomation {
    static getAttributeTypeMap() {
        return GetAccountAllOfMarketingAutomation.attributeTypeMap;
    }
}
exports.GetAccountAllOfMarketingAutomation = GetAccountAllOfMarketingAutomation;
GetAccountAllOfMarketingAutomation.discriminator = undefined;
GetAccountAllOfMarketingAutomation.attributeTypeMap = [
    {
        "name": "key",
        "baseName": "key",
        "type": "string"
    },
    {
        "name": "enabled",
        "baseName": "enabled",
        "type": "boolean"
    }
]; //# sourceMappingURL=getAccountAllOfMarketingAutomation.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getAccountAllOfPlan.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetAccountAllOfPlan = void 0;
class GetAccountAllOfPlan {
    static getAttributeTypeMap() {
        return GetAccountAllOfPlan.attributeTypeMap;
    }
}
exports.GetAccountAllOfPlan = GetAccountAllOfPlan;
GetAccountAllOfPlan.discriminator = undefined;
GetAccountAllOfPlan.attributeTypeMap = [
    {
        "name": "type",
        "baseName": "type",
        "type": "GetAccountAllOfPlan.TypeEnum"
    },
    {
        "name": "creditsType",
        "baseName": "creditsType",
        "type": "GetAccountAllOfPlan.CreditsTypeEnum"
    },
    {
        "name": "credits",
        "baseName": "credits",
        "type": "number"
    },
    {
        "name": "startDate",
        "baseName": "startDate",
        "type": "string"
    },
    {
        "name": "endDate",
        "baseName": "endDate",
        "type": "string"
    },
    {
        "name": "userLimit",
        "baseName": "userLimit",
        "type": "number"
    }
];
(function(GetAccountAllOfPlan) {
    let TypeEnum;
    (function(TypeEnum) {
        TypeEnum[TypeEnum["PayAsYouGo"] = 'payAsYouGo'] = "PayAsYouGo";
        TypeEnum[TypeEnum["Free"] = 'free'] = "Free";
        TypeEnum[TypeEnum["Subscription"] = 'subscription'] = "Subscription";
        TypeEnum[TypeEnum["Sms"] = 'sms'] = "Sms";
        TypeEnum[TypeEnum["Reseller"] = 'reseller'] = "Reseller";
    })(TypeEnum = GetAccountAllOfPlan.TypeEnum || (GetAccountAllOfPlan.TypeEnum = {}));
    let CreditsTypeEnum;
    (function(CreditsTypeEnum) {
        CreditsTypeEnum[CreditsTypeEnum["SendLimit"] = 'sendLimit'] = "SendLimit";
    })(CreditsTypeEnum = GetAccountAllOfPlan.CreditsTypeEnum || (GetAccountAllOfPlan.CreditsTypeEnum = {}));
})(GetAccountAllOfPlan = exports.GetAccountAllOfPlan || (exports.GetAccountAllOfPlan = {})); //# sourceMappingURL=getAccountAllOfPlan.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getAccountAllOfRelay.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetAccountAllOfRelay = void 0;
class GetAccountAllOfRelay {
    static getAttributeTypeMap() {
        return GetAccountAllOfRelay.attributeTypeMap;
    }
}
exports.GetAccountAllOfRelay = GetAccountAllOfRelay;
GetAccountAllOfRelay.discriminator = undefined;
GetAccountAllOfRelay.attributeTypeMap = [
    {
        "name": "enabled",
        "baseName": "enabled",
        "type": "boolean"
    },
    {
        "name": "data",
        "baseName": "data",
        "type": "GetAccountAllOfRelayData"
    }
]; //# sourceMappingURL=getAccountAllOfRelay.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getAccountAllOfRelayData.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetAccountAllOfRelayData = void 0;
class GetAccountAllOfRelayData {
    static getAttributeTypeMap() {
        return GetAccountAllOfRelayData.attributeTypeMap;
    }
}
exports.GetAccountAllOfRelayData = GetAccountAllOfRelayData;
GetAccountAllOfRelayData.discriminator = undefined;
GetAccountAllOfRelayData.attributeTypeMap = [
    {
        "name": "userName",
        "baseName": "userName",
        "type": "string"
    },
    {
        "name": "relay",
        "baseName": "relay",
        "type": "string"
    },
    {
        "name": "port",
        "baseName": "port",
        "type": "number"
    }
]; //# sourceMappingURL=getAccountAllOfRelayData.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getAggregatedReport.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetAggregatedReport = void 0;
class GetAggregatedReport {
    static getAttributeTypeMap() {
        return GetAggregatedReport.attributeTypeMap;
    }
}
exports.GetAggregatedReport = GetAggregatedReport;
GetAggregatedReport.discriminator = undefined;
GetAggregatedReport.attributeTypeMap = [
    {
        "name": "range",
        "baseName": "range",
        "type": "string"
    },
    {
        "name": "requests",
        "baseName": "requests",
        "type": "number"
    },
    {
        "name": "delivered",
        "baseName": "delivered",
        "type": "number"
    },
    {
        "name": "hardBounces",
        "baseName": "hardBounces",
        "type": "number"
    },
    {
        "name": "softBounces",
        "baseName": "softBounces",
        "type": "number"
    },
    {
        "name": "clicks",
        "baseName": "clicks",
        "type": "number"
    },
    {
        "name": "uniqueClicks",
        "baseName": "uniqueClicks",
        "type": "number"
    },
    {
        "name": "opens",
        "baseName": "opens",
        "type": "number"
    },
    {
        "name": "uniqueOpens",
        "baseName": "uniqueOpens",
        "type": "number"
    },
    {
        "name": "spamReports",
        "baseName": "spamReports",
        "type": "number"
    },
    {
        "name": "blocked",
        "baseName": "blocked",
        "type": "number"
    },
    {
        "name": "invalid",
        "baseName": "invalid",
        "type": "number"
    },
    {
        "name": "unsubscribed",
        "baseName": "unsubscribed",
        "type": "number"
    }
]; //# sourceMappingURL=getAggregatedReport.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getAllExternalFeeds.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetAllExternalFeeds = void 0;
class GetAllExternalFeeds {
    static getAttributeTypeMap() {
        return GetAllExternalFeeds.attributeTypeMap;
    }
}
exports.GetAllExternalFeeds = GetAllExternalFeeds;
GetAllExternalFeeds.discriminator = undefined;
GetAllExternalFeeds.attributeTypeMap = [
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    },
    {
        "name": "feeds",
        "baseName": "feeds",
        "type": "Array<GetAllExternalFeedsFeedsInner>"
    }
]; //# sourceMappingURL=getAllExternalFeeds.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getAllExternalFeedsFeedsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetAllExternalFeedsFeedsInner = void 0;
class GetAllExternalFeedsFeedsInner {
    static getAttributeTypeMap() {
        return GetAllExternalFeedsFeedsInner.attributeTypeMap;
    }
}
exports.GetAllExternalFeedsFeedsInner = GetAllExternalFeedsFeedsInner;
GetAllExternalFeedsFeedsInner.discriminator = undefined;
GetAllExternalFeedsFeedsInner.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "authType",
        "baseName": "authType",
        "type": "GetAllExternalFeedsFeedsInner.AuthTypeEnum"
    },
    {
        "name": "username",
        "baseName": "username",
        "type": "string"
    },
    {
        "name": "password",
        "baseName": "password",
        "type": "string"
    },
    {
        "name": "token",
        "baseName": "token",
        "type": "string"
    },
    {
        "name": "headers",
        "baseName": "headers",
        "type": "Array<GetExternalFeedByUUIDHeadersInner>"
    },
    {
        "name": "maxRetries",
        "baseName": "maxRetries",
        "type": "number"
    },
    {
        "name": "cache",
        "baseName": "cache",
        "type": "boolean"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "Date"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "Date"
    }
];
(function(GetAllExternalFeedsFeedsInner) {
    let AuthTypeEnum;
    (function(AuthTypeEnum) {
        AuthTypeEnum[AuthTypeEnum["Basic"] = 'basic'] = "Basic";
        AuthTypeEnum[AuthTypeEnum["Token"] = 'token'] = "Token";
        AuthTypeEnum[AuthTypeEnum["NoAuth"] = 'noAuth'] = "NoAuth";
    })(AuthTypeEnum = GetAllExternalFeedsFeedsInner.AuthTypeEnum || (GetAllExternalFeedsFeedsInner.AuthTypeEnum = {}));
})(GetAllExternalFeedsFeedsInner = exports.GetAllExternalFeedsFeedsInner || (exports.GetAllExternalFeedsFeedsInner = {})); //# sourceMappingURL=getAllExternalFeedsFeedsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getAttributes.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetAttributes = void 0;
class GetAttributes {
    static getAttributeTypeMap() {
        return GetAttributes.attributeTypeMap;
    }
}
exports.GetAttributes = GetAttributes;
GetAttributes.discriminator = undefined;
GetAttributes.attributeTypeMap = [
    {
        "name": "attributes",
        "baseName": "attributes",
        "type": "Array<GetAttributesAttributesInner>"
    }
]; //# sourceMappingURL=getAttributes.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getAttributesAttributesInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetAttributesAttributesInner = void 0;
class GetAttributesAttributesInner {
    static getAttributeTypeMap() {
        return GetAttributesAttributesInner.attributeTypeMap;
    }
}
exports.GetAttributesAttributesInner = GetAttributesAttributesInner;
GetAttributesAttributesInner.discriminator = undefined;
GetAttributesAttributesInner.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "category",
        "baseName": "category",
        "type": "GetAttributesAttributesInner.CategoryEnum"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "GetAttributesAttributesInner.TypeEnum"
    },
    {
        "name": "enumeration",
        "baseName": "enumeration",
        "type": "Array<GetAttributesAttributesInnerEnumerationInner>"
    },
    {
        "name": "calculatedValue",
        "baseName": "calculatedValue",
        "type": "string"
    }
];
(function(GetAttributesAttributesInner) {
    let CategoryEnum;
    (function(CategoryEnum) {
        CategoryEnum[CategoryEnum["Normal"] = 'normal'] = "Normal";
        CategoryEnum[CategoryEnum["Transactional"] = 'transactional'] = "Transactional";
        CategoryEnum[CategoryEnum["Category"] = 'category'] = "Category";
        CategoryEnum[CategoryEnum["Calculated"] = 'calculated'] = "Calculated";
        CategoryEnum[CategoryEnum["Global"] = 'global'] = "Global";
    })(CategoryEnum = GetAttributesAttributesInner.CategoryEnum || (GetAttributesAttributesInner.CategoryEnum = {}));
    let TypeEnum;
    (function(TypeEnum) {
        TypeEnum[TypeEnum["Text"] = 'text'] = "Text";
        TypeEnum[TypeEnum["Date"] = 'date'] = "Date";
        TypeEnum[TypeEnum["Float"] = 'float'] = "Float";
        TypeEnum[TypeEnum["Id"] = 'id'] = "Id";
        TypeEnum[TypeEnum["Boolean"] = 'boolean'] = "Boolean";
    })(TypeEnum = GetAttributesAttributesInner.TypeEnum || (GetAttributesAttributesInner.TypeEnum = {}));
})(GetAttributesAttributesInner = exports.GetAttributesAttributesInner || (exports.GetAttributesAttributesInner = {})); //# sourceMappingURL=getAttributesAttributesInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getAttributesAttributesInnerEnumerationInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetAttributesAttributesInnerEnumerationInner = void 0;
class GetAttributesAttributesInnerEnumerationInner {
    static getAttributeTypeMap() {
        return GetAttributesAttributesInnerEnumerationInner.attributeTypeMap;
    }
}
exports.GetAttributesAttributesInnerEnumerationInner = GetAttributesAttributesInnerEnumerationInner;
GetAttributesAttributesInnerEnumerationInner.discriminator = undefined;
GetAttributesAttributesInnerEnumerationInner.attributeTypeMap = [
    {
        "name": "value",
        "baseName": "value",
        "type": "number"
    },
    {
        "name": "label",
        "baseName": "label",
        "type": "string"
    }
]; //# sourceMappingURL=getAttributesAttributesInnerEnumerationInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getBlockedDomains.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetBlockedDomains = void 0;
class GetBlockedDomains {
    static getAttributeTypeMap() {
        return GetBlockedDomains.attributeTypeMap;
    }
}
exports.GetBlockedDomains = GetBlockedDomains;
GetBlockedDomains.discriminator = undefined;
GetBlockedDomains.attributeTypeMap = [
    {
        "name": "domains",
        "baseName": "domains",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=getBlockedDomains.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getCampaignOverview.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetCampaignOverview = void 0;
class GetCampaignOverview {
    static getAttributeTypeMap() {
        return GetCampaignOverview.attributeTypeMap;
    }
}
exports.GetCampaignOverview = GetCampaignOverview;
GetCampaignOverview.discriminator = undefined;
GetCampaignOverview.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "subject",
        "baseName": "subject",
        "type": "string"
    },
    {
        "name": "previewText",
        "baseName": "previewText",
        "type": "string"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "GetCampaignOverview.TypeEnum"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "GetCampaignOverview.StatusEnum"
    },
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "string"
    },
    {
        "name": "abTesting",
        "baseName": "abTesting",
        "type": "boolean"
    },
    {
        "name": "subjectA",
        "baseName": "subjectA",
        "type": "string"
    },
    {
        "name": "subjectB",
        "baseName": "subjectB",
        "type": "string"
    },
    {
        "name": "splitRule",
        "baseName": "splitRule",
        "type": "number"
    },
    {
        "name": "winnerCriteria",
        "baseName": "winnerCriteria",
        "type": "string"
    },
    {
        "name": "winnerDelay",
        "baseName": "winnerDelay",
        "type": "number"
    },
    {
        "name": "sendAtBestTime",
        "baseName": "sendAtBestTime",
        "type": "boolean"
    }
];
(function(GetCampaignOverview) {
    let TypeEnum;
    (function(TypeEnum) {
        TypeEnum[TypeEnum["Classic"] = 'classic'] = "Classic";
        TypeEnum[TypeEnum["Trigger"] = 'trigger'] = "Trigger";
    })(TypeEnum = GetCampaignOverview.TypeEnum || (GetCampaignOverview.TypeEnum = {}));
    let StatusEnum;
    (function(StatusEnum) {
        StatusEnum[StatusEnum["Draft"] = 'draft'] = "Draft";
        StatusEnum[StatusEnum["Sent"] = 'sent'] = "Sent";
        StatusEnum[StatusEnum["Archive"] = 'archive'] = "Archive";
        StatusEnum[StatusEnum["Queued"] = 'queued'] = "Queued";
        StatusEnum[StatusEnum["Suspended"] = 'suspended'] = "Suspended";
        StatusEnum[StatusEnum["InProcess"] = 'in_process'] = "InProcess";
    })(StatusEnum = GetCampaignOverview.StatusEnum || (GetCampaignOverview.StatusEnum = {}));
})(GetCampaignOverview = exports.GetCampaignOverview || (exports.GetCampaignOverview = {})); //# sourceMappingURL=getCampaignOverview.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getCampaignRecipients.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetCampaignRecipients = void 0;
class GetCampaignRecipients {
    static getAttributeTypeMap() {
        return GetCampaignRecipients.attributeTypeMap;
    }
}
exports.GetCampaignRecipients = GetCampaignRecipients;
GetCampaignRecipients.discriminator = undefined;
GetCampaignRecipients.attributeTypeMap = [
    {
        "name": "lists",
        "baseName": "lists",
        "type": "Array<number>"
    },
    {
        "name": "exclusionLists",
        "baseName": "exclusionLists",
        "type": "Array<number>"
    }
]; //# sourceMappingURL=getCampaignRecipients.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getCampaignStats.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetCampaignStats = void 0;
class GetCampaignStats {
    static getAttributeTypeMap() {
        return GetCampaignStats.attributeTypeMap;
    }
}
exports.GetCampaignStats = GetCampaignStats;
GetCampaignStats.discriminator = undefined;
GetCampaignStats.attributeTypeMap = [
    {
        "name": "listId",
        "baseName": "listId",
        "type": "number"
    },
    {
        "name": "uniqueClicks",
        "baseName": "uniqueClicks",
        "type": "number"
    },
    {
        "name": "clickers",
        "baseName": "clickers",
        "type": "number"
    },
    {
        "name": "complaints",
        "baseName": "complaints",
        "type": "number"
    },
    {
        "name": "delivered",
        "baseName": "delivered",
        "type": "number"
    },
    {
        "name": "sent",
        "baseName": "sent",
        "type": "number"
    },
    {
        "name": "softBounces",
        "baseName": "softBounces",
        "type": "number"
    },
    {
        "name": "hardBounces",
        "baseName": "hardBounces",
        "type": "number"
    },
    {
        "name": "uniqueViews",
        "baseName": "uniqueViews",
        "type": "number"
    },
    {
        "name": "trackableViews",
        "baseName": "trackableViews",
        "type": "number"
    },
    {
        "name": "trackableViewsRate",
        "baseName": "trackableViewsRate",
        "type": "number"
    },
    {
        "name": "estimatedViews",
        "baseName": "estimatedViews",
        "type": "number"
    },
    {
        "name": "unsubscriptions",
        "baseName": "unsubscriptions",
        "type": "number"
    },
    {
        "name": "viewed",
        "baseName": "viewed",
        "type": "number"
    },
    {
        "name": "deferred",
        "baseName": "deferred",
        "type": "number"
    },
    {
        "name": "returnBounce",
        "baseName": "returnBounce",
        "type": "number"
    }
]; //# sourceMappingURL=getCampaignStats.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getCategories.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetCategories = void 0;
class GetCategories {
    static getAttributeTypeMap() {
        return GetCategories.attributeTypeMap;
    }
}
exports.GetCategories = GetCategories;
GetCategories.discriminator = undefined;
GetCategories.attributeTypeMap = [
    {
        "name": "categories",
        "baseName": "categories",
        "type": "Array<GetCategoryDetails>"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    }
]; //# sourceMappingURL=getCategories.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getCategoryDetails.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetCategoryDetails = void 0;
class GetCategoryDetails {
    static getAttributeTypeMap() {
        return GetCategoryDetails.attributeTypeMap;
    }
}
exports.GetCategoryDetails = GetCategoryDetails;
GetCategoryDetails.discriminator = undefined;
GetCategoryDetails.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "isDeleted",
        "baseName": "isDeleted",
        "type": "boolean"
    }
]; //# sourceMappingURL=getCategoryDetails.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getChildAccountCreationStatus.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetChildAccountCreationStatus = void 0;
class GetChildAccountCreationStatus {
    static getAttributeTypeMap() {
        return GetChildAccountCreationStatus.attributeTypeMap;
    }
}
exports.GetChildAccountCreationStatus = GetChildAccountCreationStatus;
GetChildAccountCreationStatus.discriminator = undefined;
GetChildAccountCreationStatus.attributeTypeMap = [
    {
        "name": "childAccountCreated",
        "baseName": "childAccountCreated",
        "type": "boolean"
    }
]; //# sourceMappingURL=getChildAccountCreationStatus.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getChildDomain.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetChildDomain = void 0;
class GetChildDomain {
    static getAttributeTypeMap() {
        return GetChildDomain.attributeTypeMap;
    }
}
exports.GetChildDomain = GetChildDomain;
GetChildDomain.discriminator = undefined;
GetChildDomain.attributeTypeMap = [
    {
        "name": "domain",
        "baseName": "domain",
        "type": "string"
    },
    {
        "name": "active",
        "baseName": "active",
        "type": "boolean"
    }
]; //# sourceMappingURL=getChildDomain.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfo.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetChildInfo = void 0;
class GetChildInfo {
    static getAttributeTypeMap() {
        return GetChildInfo.attributeTypeMap;
    }
}
exports.GetChildInfo = GetChildInfo;
GetChildInfo.discriminator = undefined;
GetChildInfo.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "firstName",
        "baseName": "firstName",
        "type": "string"
    },
    {
        "name": "lastName",
        "baseName": "lastName",
        "type": "string"
    },
    {
        "name": "companyName",
        "baseName": "companyName",
        "type": "string"
    },
    {
        "name": "credits",
        "baseName": "credits",
        "type": "GetChildInfoAllOfCredits"
    },
    {
        "name": "statistics",
        "baseName": "statistics",
        "type": "GetChildInfoAllOfStatistics"
    },
    {
        "name": "password",
        "baseName": "password",
        "type": "string"
    },
    {
        "name": "ips",
        "baseName": "ips",
        "type": "Array<string>"
    },
    {
        "name": "apiKeys",
        "baseName": "apiKeys",
        "type": "GetChildInfoAllOfApiKeys"
    }
]; //# sourceMappingURL=getChildInfo.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfoAllOfApiKeys.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetChildInfoAllOfApiKeys = void 0;
class GetChildInfoAllOfApiKeys {
    static getAttributeTypeMap() {
        return GetChildInfoAllOfApiKeys.attributeTypeMap;
    }
}
exports.GetChildInfoAllOfApiKeys = GetChildInfoAllOfApiKeys;
GetChildInfoAllOfApiKeys.discriminator = undefined;
GetChildInfoAllOfApiKeys.attributeTypeMap = [
    {
        "name": "v2",
        "baseName": "v2",
        "type": "Array<GetChildInfoAllOfApiKeysV2>"
    },
    {
        "name": "v3",
        "baseName": "v3",
        "type": "Array<GetChildInfoAllOfApiKeysV3>"
    }
]; //# sourceMappingURL=getChildInfoAllOfApiKeys.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfoAllOfApiKeysV2.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetChildInfoAllOfApiKeysV2 = void 0;
class GetChildInfoAllOfApiKeysV2 {
    static getAttributeTypeMap() {
        return GetChildInfoAllOfApiKeysV2.attributeTypeMap;
    }
}
exports.GetChildInfoAllOfApiKeysV2 = GetChildInfoAllOfApiKeysV2;
GetChildInfoAllOfApiKeysV2.discriminator = undefined;
GetChildInfoAllOfApiKeysV2.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "key",
        "baseName": "key",
        "type": "string"
    }
]; //# sourceMappingURL=getChildInfoAllOfApiKeysV2.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfoAllOfApiKeysV3.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetChildInfoAllOfApiKeysV3 = void 0;
class GetChildInfoAllOfApiKeysV3 {
    static getAttributeTypeMap() {
        return GetChildInfoAllOfApiKeysV3.attributeTypeMap;
    }
}
exports.GetChildInfoAllOfApiKeysV3 = GetChildInfoAllOfApiKeysV3;
GetChildInfoAllOfApiKeysV3.discriminator = undefined;
GetChildInfoAllOfApiKeysV3.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "key",
        "baseName": "key",
        "type": "string"
    }
]; //# sourceMappingURL=getChildInfoAllOfApiKeysV3.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfoAllOfCredits.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetChildInfoAllOfCredits = void 0;
class GetChildInfoAllOfCredits {
    static getAttributeTypeMap() {
        return GetChildInfoAllOfCredits.attributeTypeMap;
    }
}
exports.GetChildInfoAllOfCredits = GetChildInfoAllOfCredits;
GetChildInfoAllOfCredits.discriminator = undefined;
GetChildInfoAllOfCredits.attributeTypeMap = [
    {
        "name": "emailCredits",
        "baseName": "emailCredits",
        "type": "number"
    },
    {
        "name": "smsCredits",
        "baseName": "smsCredits",
        "type": "number"
    }
]; //# sourceMappingURL=getChildInfoAllOfCredits.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfoAllOfStatistics.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetChildInfoAllOfStatistics = void 0;
class GetChildInfoAllOfStatistics {
    static getAttributeTypeMap() {
        return GetChildInfoAllOfStatistics.attributeTypeMap;
    }
}
exports.GetChildInfoAllOfStatistics = GetChildInfoAllOfStatistics;
GetChildInfoAllOfStatistics.discriminator = undefined;
GetChildInfoAllOfStatistics.attributeTypeMap = [
    {
        "name": "previousMonthTotalSent",
        "baseName": "previousMonthTotalSent",
        "type": "number"
    },
    {
        "name": "currentMonthTotalSent",
        "baseName": "currentMonthTotalSent",
        "type": "number"
    },
    {
        "name": "totalSent",
        "baseName": "totalSent",
        "type": "number"
    }
]; //# sourceMappingURL=getChildInfoAllOfStatistics.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getChildrenList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetChildrenList = void 0;
class GetChildrenList {
    static getAttributeTypeMap() {
        return GetChildrenList.attributeTypeMap;
    }
}
exports.GetChildrenList = GetChildrenList;
GetChildrenList.discriminator = undefined;
GetChildrenList.attributeTypeMap = [
    {
        "name": "children",
        "baseName": "children",
        "type": "Array<GetChildrenListChildrenInner>"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    }
]; //# sourceMappingURL=getChildrenList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getChildrenListChildrenInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetChildrenListChildrenInner = void 0;
class GetChildrenListChildrenInner {
    static getAttributeTypeMap() {
        return GetChildrenListChildrenInner.attributeTypeMap;
    }
}
exports.GetChildrenListChildrenInner = GetChildrenListChildrenInner;
GetChildrenListChildrenInner.discriminator = undefined;
GetChildrenListChildrenInner.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "firstName",
        "baseName": "firstName",
        "type": "string"
    },
    {
        "name": "lastName",
        "baseName": "lastName",
        "type": "string"
    },
    {
        "name": "companyName",
        "baseName": "companyName",
        "type": "string"
    },
    {
        "name": "credits",
        "baseName": "credits",
        "type": "GetChildInfoAllOfCredits"
    },
    {
        "name": "statistics",
        "baseName": "statistics",
        "type": "GetChildInfoAllOfStatistics"
    },
    {
        "name": "password",
        "baseName": "password",
        "type": "string"
    },
    {
        "name": "ips",
        "baseName": "ips",
        "type": "Array<string>"
    },
    {
        "name": "apiKeys",
        "baseName": "apiKeys",
        "type": "GetChildInfoAllOfApiKeys"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    }
]; //# sourceMappingURL=getChildrenListChildrenInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getClient.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetClient = void 0;
class GetClient {
    static getAttributeTypeMap() {
        return GetClient.attributeTypeMap;
    }
}
exports.GetClient = GetClient;
GetClient.discriminator = undefined;
GetClient.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "firstName",
        "baseName": "firstName",
        "type": "string"
    },
    {
        "name": "lastName",
        "baseName": "lastName",
        "type": "string"
    },
    {
        "name": "companyName",
        "baseName": "companyName",
        "type": "string"
    }
]; //# sourceMappingURL=getClient.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStats.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetContactCampaignStats = void 0;
class GetContactCampaignStats {
    static getAttributeTypeMap() {
        return GetContactCampaignStats.attributeTypeMap;
    }
}
exports.GetContactCampaignStats = GetContactCampaignStats;
GetContactCampaignStats.discriminator = undefined;
GetContactCampaignStats.attributeTypeMap = [
    {
        "name": "messagesSent",
        "baseName": "messagesSent",
        "type": "Array<GetContactCampaignStatsMessagesSentInner>"
    },
    {
        "name": "hardBounces",
        "baseName": "hardBounces",
        "type": "Array<GetContactCampaignStatsMessagesSentInner>"
    },
    {
        "name": "softBounces",
        "baseName": "softBounces",
        "type": "Array<GetContactCampaignStatsMessagesSentInner>"
    },
    {
        "name": "complaints",
        "baseName": "complaints",
        "type": "Array<GetContactCampaignStatsMessagesSentInner>"
    },
    {
        "name": "unsubscriptions",
        "baseName": "unsubscriptions",
        "type": "GetContactCampaignStatsUnsubscriptions"
    },
    {
        "name": "opened",
        "baseName": "opened",
        "type": "Array<GetContactCampaignStatsOpenedInner>"
    },
    {
        "name": "clicked",
        "baseName": "clicked",
        "type": "Array<GetContactCampaignStatsClickedInner>"
    },
    {
        "name": "transacAttributes",
        "baseName": "transacAttributes",
        "type": "Array<GetContactCampaignStatsTransacAttributesInner>"
    },
    {
        "name": "delivered",
        "baseName": "delivered",
        "type": "Array<GetContactCampaignStatsMessagesSentInner>"
    }
]; //# sourceMappingURL=getContactCampaignStats.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsClickedInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetContactCampaignStatsClickedInner = void 0;
class GetContactCampaignStatsClickedInner {
    static getAttributeTypeMap() {
        return GetContactCampaignStatsClickedInner.attributeTypeMap;
    }
}
exports.GetContactCampaignStatsClickedInner = GetContactCampaignStatsClickedInner;
GetContactCampaignStatsClickedInner.discriminator = undefined;
GetContactCampaignStatsClickedInner.attributeTypeMap = [
    {
        "name": "campaignId",
        "baseName": "campaignId",
        "type": "number"
    },
    {
        "name": "links",
        "baseName": "links",
        "type": "Array<GetContactCampaignStatsClickedInnerLinksInner>"
    }
]; //# sourceMappingURL=getContactCampaignStatsClickedInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsClickedInnerLinksInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetContactCampaignStatsClickedInnerLinksInner = void 0;
class GetContactCampaignStatsClickedInnerLinksInner {
    static getAttributeTypeMap() {
        return GetContactCampaignStatsClickedInnerLinksInner.attributeTypeMap;
    }
}
exports.GetContactCampaignStatsClickedInnerLinksInner = GetContactCampaignStatsClickedInnerLinksInner;
GetContactCampaignStatsClickedInnerLinksInner.discriminator = undefined;
GetContactCampaignStatsClickedInnerLinksInner.attributeTypeMap = [
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    },
    {
        "name": "eventTime",
        "baseName": "eventTime",
        "type": "string"
    },
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    }
]; //# sourceMappingURL=getContactCampaignStatsClickedInnerLinksInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsMessagesSentInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetContactCampaignStatsMessagesSentInner = void 0;
class GetContactCampaignStatsMessagesSentInner {
    static getAttributeTypeMap() {
        return GetContactCampaignStatsMessagesSentInner.attributeTypeMap;
    }
}
exports.GetContactCampaignStatsMessagesSentInner = GetContactCampaignStatsMessagesSentInner;
GetContactCampaignStatsMessagesSentInner.discriminator = undefined;
GetContactCampaignStatsMessagesSentInner.attributeTypeMap = [
    {
        "name": "campaignId",
        "baseName": "campaignId",
        "type": "number"
    },
    {
        "name": "eventTime",
        "baseName": "eventTime",
        "type": "string"
    }
]; //# sourceMappingURL=getContactCampaignStatsMessagesSentInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsOpenedInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetContactCampaignStatsOpenedInner = void 0;
class GetContactCampaignStatsOpenedInner {
    static getAttributeTypeMap() {
        return GetContactCampaignStatsOpenedInner.attributeTypeMap;
    }
}
exports.GetContactCampaignStatsOpenedInner = GetContactCampaignStatsOpenedInner;
GetContactCampaignStatsOpenedInner.discriminator = undefined;
GetContactCampaignStatsOpenedInner.attributeTypeMap = [
    {
        "name": "campaignId",
        "baseName": "campaignId",
        "type": "number"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    },
    {
        "name": "eventTime",
        "baseName": "eventTime",
        "type": "string"
    },
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    }
]; //# sourceMappingURL=getContactCampaignStatsOpenedInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsTransacAttributesInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetContactCampaignStatsTransacAttributesInner = void 0;
class GetContactCampaignStatsTransacAttributesInner {
    static getAttributeTypeMap() {
        return GetContactCampaignStatsTransacAttributesInner.attributeTypeMap;
    }
}
exports.GetContactCampaignStatsTransacAttributesInner = GetContactCampaignStatsTransacAttributesInner;
GetContactCampaignStatsTransacAttributesInner.discriminator = undefined;
GetContactCampaignStatsTransacAttributesInner.attributeTypeMap = [
    {
        "name": "orderDate",
        "baseName": "orderDate",
        "type": "string"
    },
    {
        "name": "orderPrice",
        "baseName": "orderPrice",
        "type": "number"
    },
    {
        "name": "orderId",
        "baseName": "orderId",
        "type": "number"
    }
]; //# sourceMappingURL=getContactCampaignStatsTransacAttributesInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsUnsubscriptions.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetContactCampaignStatsUnsubscriptions = void 0;
class GetContactCampaignStatsUnsubscriptions {
    static getAttributeTypeMap() {
        return GetContactCampaignStatsUnsubscriptions.attributeTypeMap;
    }
}
exports.GetContactCampaignStatsUnsubscriptions = GetContactCampaignStatsUnsubscriptions;
GetContactCampaignStatsUnsubscriptions.discriminator = undefined;
GetContactCampaignStatsUnsubscriptions.attributeTypeMap = [
    {
        "name": "userUnsubscription",
        "baseName": "userUnsubscription",
        "type": "Array<GetContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner>"
    },
    {
        "name": "adminUnsubscription",
        "baseName": "adminUnsubscription",
        "type": "Array<GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner>"
    }
]; //# sourceMappingURL=getContactCampaignStatsUnsubscriptions.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner = void 0;
class GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner {
    static getAttributeTypeMap() {
        return GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner.attributeTypeMap;
    }
}
exports.GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner = GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner;
GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner.discriminator = undefined;
GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner.attributeTypeMap = [
    {
        "name": "eventTime",
        "baseName": "eventTime",
        "type": "string"
    },
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    }
]; //# sourceMappingURL=getContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner = void 0;
class GetContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner {
    static getAttributeTypeMap() {
        return GetContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner.attributeTypeMap;
    }
}
exports.GetContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner = GetContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner;
GetContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner.discriminator = undefined;
GetContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner.attributeTypeMap = [
    {
        "name": "campaignId",
        "baseName": "campaignId",
        "type": "number"
    },
    {
        "name": "eventTime",
        "baseName": "eventTime",
        "type": "string"
    },
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    }
]; //# sourceMappingURL=getContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getContactDetails.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetContactDetails = void 0;
class GetContactDetails {
    static getAttributeTypeMap() {
        return GetContactDetails.attributeTypeMap;
    }
}
exports.GetContactDetails = GetContactDetails;
GetContactDetails.discriminator = undefined;
GetContactDetails.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "emailBlacklisted",
        "baseName": "emailBlacklisted",
        "type": "boolean"
    },
    {
        "name": "smsBlacklisted",
        "baseName": "smsBlacklisted",
        "type": "boolean"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "string"
    },
    {
        "name": "listIds",
        "baseName": "listIds",
        "type": "Array<number>"
    },
    {
        "name": "listUnsubscribed",
        "baseName": "listUnsubscribed",
        "type": "Array<number>"
    },
    {
        "name": "attributes",
        "baseName": "attributes",
        "type": "object"
    }
]; //# sourceMappingURL=getContactDetails.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getContacts.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetContacts = void 0;
class GetContacts {
    static getAttributeTypeMap() {
        return GetContacts.attributeTypeMap;
    }
}
exports.GetContacts = GetContacts;
GetContacts.discriminator = undefined;
GetContacts.attributeTypeMap = [
    {
        "name": "contacts",
        "baseName": "contacts",
        "type": "Array<GetContactDetails>"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    }
]; //# sourceMappingURL=getContacts.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateInvitedUsersList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetCorporateInvitedUsersList = void 0;
class GetCorporateInvitedUsersList {
    static getAttributeTypeMap() {
        return GetCorporateInvitedUsersList.attributeTypeMap;
    }
}
exports.GetCorporateInvitedUsersList = GetCorporateInvitedUsersList;
GetCorporateInvitedUsersList.discriminator = undefined;
GetCorporateInvitedUsersList.attributeTypeMap = [
    {
        "name": "users",
        "baseName": "users",
        "type": "Array<GetCorporateInvitedUsersListUsersInner>"
    }
]; //# sourceMappingURL=getCorporateInvitedUsersList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateInvitedUsersListUsersInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetCorporateInvitedUsersListUsersInner = void 0;
class GetCorporateInvitedUsersListUsersInner {
    static getAttributeTypeMap() {
        return GetCorporateInvitedUsersListUsersInner.attributeTypeMap;
    }
}
exports.GetCorporateInvitedUsersListUsersInner = GetCorporateInvitedUsersListUsersInner;
GetCorporateInvitedUsersListUsersInner.discriminator = undefined;
GetCorporateInvitedUsersListUsersInner.attributeTypeMap = [
    {
        "name": "groups",
        "baseName": "groups",
        "type": "GetCorporateInvitedUsersListUsersInnerGroups"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "isOwner",
        "baseName": "is_owner",
        "type": "string"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "string"
    },
    {
        "name": "featureAccess",
        "baseName": "feature_access",
        "type": "GetCorporateInvitedUsersListUsersInnerFeatureAccess"
    }
]; //# sourceMappingURL=getCorporateInvitedUsersListUsersInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateInvitedUsersListUsersInnerFeatureAccess.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetCorporateInvitedUsersListUsersInnerFeatureAccess = void 0;
class GetCorporateInvitedUsersListUsersInnerFeatureAccess {
    static getAttributeTypeMap() {
        return GetCorporateInvitedUsersListUsersInnerFeatureAccess.attributeTypeMap;
    }
}
exports.GetCorporateInvitedUsersListUsersInnerFeatureAccess = GetCorporateInvitedUsersListUsersInnerFeatureAccess;
GetCorporateInvitedUsersListUsersInnerFeatureAccess.discriminator = undefined;
GetCorporateInvitedUsersListUsersInnerFeatureAccess.attributeTypeMap = [
    {
        "name": "userManagement",
        "baseName": "user_management",
        "type": "Array<string>"
    },
    {
        "name": "apiKeys",
        "baseName": "api_keys",
        "type": "Array<string>"
    },
    {
        "name": "myPlan",
        "baseName": "my_plan",
        "type": "Array<string>"
    },
    {
        "name": "appsManagement",
        "baseName": "apps_management",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=getCorporateInvitedUsersListUsersInnerFeatureAccess.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateInvitedUsersListUsersInnerGroups.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetCorporateInvitedUsersListUsersInnerGroups = void 0;
class GetCorporateInvitedUsersListUsersInnerGroups {
    static getAttributeTypeMap() {
        return GetCorporateInvitedUsersListUsersInnerGroups.attributeTypeMap;
    }
}
exports.GetCorporateInvitedUsersListUsersInnerGroups = GetCorporateInvitedUsersListUsersInnerGroups;
GetCorporateInvitedUsersListUsersInnerGroups.discriminator = undefined;
GetCorporateInvitedUsersListUsersInnerGroups.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=getCorporateInvitedUsersListUsersInnerGroups.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateUserPermission.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetCorporateUserPermission = void 0;
class GetCorporateUserPermission {
    static getAttributeTypeMap() {
        return GetCorporateUserPermission.attributeTypeMap;
    }
}
exports.GetCorporateUserPermission = GetCorporateUserPermission;
GetCorporateUserPermission.discriminator = undefined;
GetCorporateUserPermission.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "string"
    },
    {
        "name": "groups",
        "baseName": "groups",
        "type": "Array<GetCorporateUserPermissionGroupsInner>"
    },
    {
        "name": "featureAccess",
        "baseName": "feature_access",
        "type": "GetCorporateUserPermissionFeatureAccess"
    }
]; //# sourceMappingURL=getCorporateUserPermission.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateUserPermissionFeatureAccess.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetCorporateUserPermissionFeatureAccess = void 0;
class GetCorporateUserPermissionFeatureAccess {
    static getAttributeTypeMap() {
        return GetCorporateUserPermissionFeatureAccess.attributeTypeMap;
    }
}
exports.GetCorporateUserPermissionFeatureAccess = GetCorporateUserPermissionFeatureAccess;
GetCorporateUserPermissionFeatureAccess.discriminator = undefined;
GetCorporateUserPermissionFeatureAccess.attributeTypeMap = [
    {
        "name": "apiKeys",
        "baseName": "api_keys",
        "type": "Array<string>"
    },
    {
        "name": "myPlan",
        "baseName": "my_plan",
        "type": "Array<string>"
    },
    {
        "name": "userManagement",
        "baseName": "user_management",
        "type": "Array<string>"
    },
    {
        "name": "appsManagement",
        "baseName": "apps_management",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=getCorporateUserPermissionFeatureAccess.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateUserPermissionGroupsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetCorporateUserPermissionGroupsInner = void 0;
class GetCorporateUserPermissionGroupsInner {
    static getAttributeTypeMap() {
        return GetCorporateUserPermissionGroupsInner.attributeTypeMap;
    }
}
exports.GetCorporateUserPermissionGroupsInner = GetCorporateUserPermissionGroupsInner;
GetCorporateUserPermissionGroupsInner.discriminator = undefined;
GetCorporateUserPermissionGroupsInner.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=getCorporateUserPermissionGroupsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getCouponCollection.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetCouponCollection = void 0;
class GetCouponCollection {
    static getAttributeTypeMap() {
        return GetCouponCollection.attributeTypeMap;
    }
}
exports.GetCouponCollection = GetCouponCollection;
GetCouponCollection.discriminator = undefined;
GetCouponCollection.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "defaultCoupon",
        "baseName": "defaultCoupon",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "Date"
    },
    {
        "name": "totalCoupons",
        "baseName": "totalCoupons",
        "type": "number"
    },
    {
        "name": "remainingCoupons",
        "baseName": "remainingCoupons",
        "type": "number"
    },
    {
        "name": "expirationDate",
        "baseName": "expirationDate",
        "type": "Date"
    },
    {
        "name": "remainingDaysAlert",
        "baseName": "remainingDaysAlert",
        "type": "number"
    },
    {
        "name": "remainingCouponsAlert",
        "baseName": "remainingCouponsAlert",
        "type": "number"
    }
]; //# sourceMappingURL=getCouponCollection.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getDeviceBrowserStats.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetDeviceBrowserStats = void 0;
class GetDeviceBrowserStats {
    static getAttributeTypeMap() {
        return GetDeviceBrowserStats.attributeTypeMap;
    }
}
exports.GetDeviceBrowserStats = GetDeviceBrowserStats;
GetDeviceBrowserStats.discriminator = undefined;
GetDeviceBrowserStats.attributeTypeMap = [
    {
        "name": "clickers",
        "baseName": "clickers",
        "type": "number"
    },
    {
        "name": "uniqueClicks",
        "baseName": "uniqueClicks",
        "type": "number"
    },
    {
        "name": "viewed",
        "baseName": "viewed",
        "type": "number"
    },
    {
        "name": "uniqueViews",
        "baseName": "uniqueViews",
        "type": "number"
    }
]; //# sourceMappingURL=getDeviceBrowserStats.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getDomainConfigurationModel.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetDomainConfigurationModel = void 0;
class GetDomainConfigurationModel {
    static getAttributeTypeMap() {
        return GetDomainConfigurationModel.attributeTypeMap;
    }
}
exports.GetDomainConfigurationModel = GetDomainConfigurationModel;
GetDomainConfigurationModel.discriminator = undefined;
GetDomainConfigurationModel.attributeTypeMap = [
    {
        "name": "domain",
        "baseName": "domain",
        "type": "string"
    },
    {
        "name": "verified",
        "baseName": "verified",
        "type": "boolean"
    },
    {
        "name": "authenticated",
        "baseName": "authenticated",
        "type": "boolean"
    },
    {
        "name": "dnsRecords",
        "baseName": "dns_records",
        "type": "CreateDomainModelDnsRecords"
    }
]; //# sourceMappingURL=getDomainConfigurationModel.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getDomainsList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetDomainsList = void 0;
class GetDomainsList {
    static getAttributeTypeMap() {
        return GetDomainsList.attributeTypeMap;
    }
}
exports.GetDomainsList = GetDomainsList;
GetDomainsList.discriminator = undefined;
GetDomainsList.attributeTypeMap = [
    {
        "name": "domains",
        "baseName": "domains",
        "type": "Array<GetDomainsListDomainsInner>"
    }
]; //# sourceMappingURL=getDomainsList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getDomainsListDomainsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetDomainsListDomainsInner = void 0;
class GetDomainsListDomainsInner {
    static getAttributeTypeMap() {
        return GetDomainsListDomainsInner.attributeTypeMap;
    }
}
exports.GetDomainsListDomainsInner = GetDomainsListDomainsInner;
GetDomainsListDomainsInner.discriminator = undefined;
GetDomainsListDomainsInner.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "domainName",
        "baseName": "domain_name",
        "type": "string"
    },
    {
        "name": "authenticated",
        "baseName": "authenticated",
        "type": "boolean"
    },
    {
        "name": "verified",
        "baseName": "verified",
        "type": "boolean"
    },
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    }
]; //# sourceMappingURL=getDomainsListDomainsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getEmailCampaign.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetEmailCampaign = void 0;
class GetEmailCampaign {
    static getAttributeTypeMap() {
        return GetEmailCampaign.attributeTypeMap;
    }
}
exports.GetEmailCampaign = GetEmailCampaign;
GetEmailCampaign.discriminator = undefined;
GetEmailCampaign.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "subject",
        "baseName": "subject",
        "type": "string"
    },
    {
        "name": "previewText",
        "baseName": "previewText",
        "type": "string"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "GetEmailCampaign.TypeEnum"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "GetEmailCampaign.StatusEnum"
    },
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "string"
    },
    {
        "name": "abTesting",
        "baseName": "abTesting",
        "type": "boolean"
    },
    {
        "name": "subjectA",
        "baseName": "subjectA",
        "type": "string"
    },
    {
        "name": "subjectB",
        "baseName": "subjectB",
        "type": "string"
    },
    {
        "name": "splitRule",
        "baseName": "splitRule",
        "type": "number"
    },
    {
        "name": "winnerCriteria",
        "baseName": "winnerCriteria",
        "type": "string"
    },
    {
        "name": "winnerDelay",
        "baseName": "winnerDelay",
        "type": "number"
    },
    {
        "name": "sendAtBestTime",
        "baseName": "sendAtBestTime",
        "type": "boolean"
    },
    {
        "name": "utmCampaignValue",
        "baseName": "utmCampaignValue",
        "type": "string"
    },
    {
        "name": "utmSource",
        "baseName": "utmSource",
        "type": "string"
    },
    {
        "name": "utmMedium",
        "baseName": "utmMedium",
        "type": "string"
    },
    {
        "name": "utmID",
        "baseName": "utmID",
        "type": "number"
    },
    {
        "name": "testSent",
        "baseName": "testSent",
        "type": "boolean"
    },
    {
        "name": "header",
        "baseName": "header",
        "type": "string"
    },
    {
        "name": "footer",
        "baseName": "footer",
        "type": "string"
    },
    {
        "name": "sender",
        "baseName": "sender",
        "type": "GetExtendedCampaignOverviewAllOfSender"
    },
    {
        "name": "replyTo",
        "baseName": "replyTo",
        "type": "string"
    },
    {
        "name": "toField",
        "baseName": "toField",
        "type": "string"
    },
    {
        "name": "htmlContent",
        "baseName": "htmlContent",
        "type": "string"
    },
    {
        "name": "shareLink",
        "baseName": "shareLink",
        "type": "string"
    },
    {
        "name": "tag",
        "baseName": "tag",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "string"
    },
    {
        "name": "inlineImageActivation",
        "baseName": "inlineImageActivation",
        "type": "boolean"
    },
    {
        "name": "mirrorActive",
        "baseName": "mirrorActive",
        "type": "boolean"
    },
    {
        "name": "recurring",
        "baseName": "recurring",
        "type": "boolean"
    },
    {
        "name": "sentDate",
        "baseName": "sentDate",
        "type": "string"
    },
    {
        "name": "returnBounce",
        "baseName": "returnBounce",
        "type": "number"
    },
    {
        "name": "recipients",
        "baseName": "recipients",
        "type": "GetCampaignRecipients"
    },
    {
        "name": "statistics",
        "baseName": "statistics",
        "type": "GetExtendedCampaignStats"
    }
];
(function(GetEmailCampaign) {
    let TypeEnum;
    (function(TypeEnum) {
        TypeEnum[TypeEnum["Classic"] = 'classic'] = "Classic";
        TypeEnum[TypeEnum["Trigger"] = 'trigger'] = "Trigger";
    })(TypeEnum = GetEmailCampaign.TypeEnum || (GetEmailCampaign.TypeEnum = {}));
    let StatusEnum;
    (function(StatusEnum) {
        StatusEnum[StatusEnum["Draft"] = 'draft'] = "Draft";
        StatusEnum[StatusEnum["Sent"] = 'sent'] = "Sent";
        StatusEnum[StatusEnum["Archive"] = 'archive'] = "Archive";
        StatusEnum[StatusEnum["Queued"] = 'queued'] = "Queued";
        StatusEnum[StatusEnum["Suspended"] = 'suspended'] = "Suspended";
        StatusEnum[StatusEnum["InProcess"] = 'in_process'] = "InProcess";
    })(StatusEnum = GetEmailCampaign.StatusEnum || (GetEmailCampaign.StatusEnum = {}));
})(GetEmailCampaign = exports.GetEmailCampaign || (exports.GetEmailCampaign = {})); //# sourceMappingURL=getEmailCampaign.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getEmailCampaigns.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetEmailCampaigns = void 0;
class GetEmailCampaigns {
    static getAttributeTypeMap() {
        return GetEmailCampaigns.attributeTypeMap;
    }
}
exports.GetEmailCampaigns = GetEmailCampaigns;
GetEmailCampaigns.discriminator = undefined;
GetEmailCampaigns.attributeTypeMap = [
    {
        "name": "campaigns",
        "baseName": "campaigns",
        "type": "Array<GetEmailCampaignsCampaignsInner>"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    }
]; //# sourceMappingURL=getEmailCampaigns.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getEmailCampaignsCampaignsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetEmailCampaignsCampaignsInner = void 0;
class GetEmailCampaignsCampaignsInner {
    static getAttributeTypeMap() {
        return GetEmailCampaignsCampaignsInner.attributeTypeMap;
    }
}
exports.GetEmailCampaignsCampaignsInner = GetEmailCampaignsCampaignsInner;
GetEmailCampaignsCampaignsInner.discriminator = undefined;
GetEmailCampaignsCampaignsInner.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "subject",
        "baseName": "subject",
        "type": "string"
    },
    {
        "name": "previewText",
        "baseName": "previewText",
        "type": "string"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "GetEmailCampaignsCampaignsInner.TypeEnum"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "GetEmailCampaignsCampaignsInner.StatusEnum"
    },
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "string"
    },
    {
        "name": "abTesting",
        "baseName": "abTesting",
        "type": "boolean"
    },
    {
        "name": "subjectA",
        "baseName": "subjectA",
        "type": "string"
    },
    {
        "name": "subjectB",
        "baseName": "subjectB",
        "type": "string"
    },
    {
        "name": "splitRule",
        "baseName": "splitRule",
        "type": "number"
    },
    {
        "name": "winnerCriteria",
        "baseName": "winnerCriteria",
        "type": "string"
    },
    {
        "name": "winnerDelay",
        "baseName": "winnerDelay",
        "type": "number"
    },
    {
        "name": "sendAtBestTime",
        "baseName": "sendAtBestTime",
        "type": "boolean"
    },
    {
        "name": "utmCampaignValue",
        "baseName": "utmCampaignValue",
        "type": "string"
    },
    {
        "name": "utmSource",
        "baseName": "utmSource",
        "type": "string"
    },
    {
        "name": "utmMedium",
        "baseName": "utmMedium",
        "type": "string"
    },
    {
        "name": "utmID",
        "baseName": "utmID",
        "type": "number"
    },
    {
        "name": "testSent",
        "baseName": "testSent",
        "type": "boolean"
    },
    {
        "name": "header",
        "baseName": "header",
        "type": "string"
    },
    {
        "name": "footer",
        "baseName": "footer",
        "type": "string"
    },
    {
        "name": "sender",
        "baseName": "sender",
        "type": "GetExtendedCampaignOverviewAllOfSender"
    },
    {
        "name": "replyTo",
        "baseName": "replyTo",
        "type": "string"
    },
    {
        "name": "toField",
        "baseName": "toField",
        "type": "string"
    },
    {
        "name": "htmlContent",
        "baseName": "htmlContent",
        "type": "string"
    },
    {
        "name": "shareLink",
        "baseName": "shareLink",
        "type": "string"
    },
    {
        "name": "tag",
        "baseName": "tag",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "string"
    },
    {
        "name": "inlineImageActivation",
        "baseName": "inlineImageActivation",
        "type": "boolean"
    },
    {
        "name": "mirrorActive",
        "baseName": "mirrorActive",
        "type": "boolean"
    },
    {
        "name": "recurring",
        "baseName": "recurring",
        "type": "boolean"
    },
    {
        "name": "sentDate",
        "baseName": "sentDate",
        "type": "string"
    },
    {
        "name": "returnBounce",
        "baseName": "returnBounce",
        "type": "number"
    },
    {
        "name": "recipients",
        "baseName": "recipients",
        "type": "GetCampaignRecipients"
    },
    {
        "name": "statistics",
        "baseName": "statistics",
        "type": "GetExtendedCampaignStats"
    }
];
(function(GetEmailCampaignsCampaignsInner) {
    let TypeEnum;
    (function(TypeEnum) {
        TypeEnum[TypeEnum["Classic"] = 'classic'] = "Classic";
        TypeEnum[TypeEnum["Trigger"] = 'trigger'] = "Trigger";
    })(TypeEnum = GetEmailCampaignsCampaignsInner.TypeEnum || (GetEmailCampaignsCampaignsInner.TypeEnum = {}));
    let StatusEnum;
    (function(StatusEnum) {
        StatusEnum[StatusEnum["Draft"] = 'draft'] = "Draft";
        StatusEnum[StatusEnum["Sent"] = 'sent'] = "Sent";
        StatusEnum[StatusEnum["Archive"] = 'archive'] = "Archive";
        StatusEnum[StatusEnum["Queued"] = 'queued'] = "Queued";
        StatusEnum[StatusEnum["Suspended"] = 'suspended'] = "Suspended";
        StatusEnum[StatusEnum["InProcess"] = 'in_process'] = "InProcess";
    })(StatusEnum = GetEmailCampaignsCampaignsInner.StatusEnum || (GetEmailCampaignsCampaignsInner.StatusEnum = {}));
})(GetEmailCampaignsCampaignsInner = exports.GetEmailCampaignsCampaignsInner || (exports.GetEmailCampaignsCampaignsInner = {})); //# sourceMappingURL=getEmailCampaignsCampaignsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getEmailEventReport.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetEmailEventReport = void 0;
class GetEmailEventReport {
    static getAttributeTypeMap() {
        return GetEmailEventReport.attributeTypeMap;
    }
}
exports.GetEmailEventReport = GetEmailEventReport;
GetEmailEventReport.discriminator = undefined;
GetEmailEventReport.attributeTypeMap = [
    {
        "name": "events",
        "baseName": "events",
        "type": "Array<GetEmailEventReportEventsInner>"
    }
]; //# sourceMappingURL=getEmailEventReport.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getEmailEventReportEventsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetEmailEventReportEventsInner = void 0;
class GetEmailEventReportEventsInner {
    static getAttributeTypeMap() {
        return GetEmailEventReportEventsInner.attributeTypeMap;
    }
}
exports.GetEmailEventReportEventsInner = GetEmailEventReportEventsInner;
GetEmailEventReportEventsInner.discriminator = undefined;
GetEmailEventReportEventsInner.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "date",
        "baseName": "date",
        "type": "string"
    },
    {
        "name": "subject",
        "baseName": "subject",
        "type": "string"
    },
    {
        "name": "messageId",
        "baseName": "messageId",
        "type": "string"
    },
    {
        "name": "event",
        "baseName": "event",
        "type": "GetEmailEventReportEventsInner.EventEnum"
    },
    {
        "name": "reason",
        "baseName": "reason",
        "type": "string"
    },
    {
        "name": "tag",
        "baseName": "tag",
        "type": "string"
    },
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    },
    {
        "name": "link",
        "baseName": "link",
        "type": "string"
    },
    {
        "name": "from",
        "baseName": "from",
        "type": "string"
    },
    {
        "name": "templateId",
        "baseName": "templateId",
        "type": "number"
    }
];
(function(GetEmailEventReportEventsInner) {
    let EventEnum;
    (function(EventEnum) {
        EventEnum[EventEnum["Bounces"] = 'bounces'] = "Bounces";
        EventEnum[EventEnum["HardBounces"] = 'hardBounces'] = "HardBounces";
        EventEnum[EventEnum["SoftBounces"] = 'softBounces'] = "SoftBounces";
        EventEnum[EventEnum["Delivered"] = 'delivered'] = "Delivered";
        EventEnum[EventEnum["Spam"] = 'spam'] = "Spam";
        EventEnum[EventEnum["Requests"] = 'requests'] = "Requests";
        EventEnum[EventEnum["Opened"] = 'opened'] = "Opened";
        EventEnum[EventEnum["Clicks"] = 'clicks'] = "Clicks";
        EventEnum[EventEnum["Invalid"] = 'invalid'] = "Invalid";
        EventEnum[EventEnum["Deferred"] = 'deferred'] = "Deferred";
        EventEnum[EventEnum["Blocked"] = 'blocked'] = "Blocked";
        EventEnum[EventEnum["Unsubscribed"] = 'unsubscribed'] = "Unsubscribed";
        EventEnum[EventEnum["Error"] = 'error'] = "Error";
        EventEnum[EventEnum["LoadedByProxy"] = 'loadedByProxy'] = "LoadedByProxy";
    })(EventEnum = GetEmailEventReportEventsInner.EventEnum || (GetEmailEventReportEventsInner.EventEnum = {}));
})(GetEmailEventReportEventsInner = exports.GetEmailEventReportEventsInner || (exports.GetEmailEventReportEventsInner = {})); //# sourceMappingURL=getEmailEventReportEventsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedCampaignOverview.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedCampaignOverview = void 0;
class GetExtendedCampaignOverview {
    static getAttributeTypeMap() {
        return GetExtendedCampaignOverview.attributeTypeMap;
    }
}
exports.GetExtendedCampaignOverview = GetExtendedCampaignOverview;
GetExtendedCampaignOverview.discriminator = undefined;
GetExtendedCampaignOverview.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "subject",
        "baseName": "subject",
        "type": "string"
    },
    {
        "name": "previewText",
        "baseName": "previewText",
        "type": "string"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "GetExtendedCampaignOverview.TypeEnum"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "GetExtendedCampaignOverview.StatusEnum"
    },
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "string"
    },
    {
        "name": "abTesting",
        "baseName": "abTesting",
        "type": "boolean"
    },
    {
        "name": "subjectA",
        "baseName": "subjectA",
        "type": "string"
    },
    {
        "name": "subjectB",
        "baseName": "subjectB",
        "type": "string"
    },
    {
        "name": "splitRule",
        "baseName": "splitRule",
        "type": "number"
    },
    {
        "name": "winnerCriteria",
        "baseName": "winnerCriteria",
        "type": "string"
    },
    {
        "name": "winnerDelay",
        "baseName": "winnerDelay",
        "type": "number"
    },
    {
        "name": "sendAtBestTime",
        "baseName": "sendAtBestTime",
        "type": "boolean"
    },
    {
        "name": "utmCampaignValue",
        "baseName": "utmCampaignValue",
        "type": "string"
    },
    {
        "name": "utmSource",
        "baseName": "utmSource",
        "type": "string"
    },
    {
        "name": "utmMedium",
        "baseName": "utmMedium",
        "type": "string"
    },
    {
        "name": "utmID",
        "baseName": "utmID",
        "type": "number"
    },
    {
        "name": "testSent",
        "baseName": "testSent",
        "type": "boolean"
    },
    {
        "name": "header",
        "baseName": "header",
        "type": "string"
    },
    {
        "name": "footer",
        "baseName": "footer",
        "type": "string"
    },
    {
        "name": "sender",
        "baseName": "sender",
        "type": "GetExtendedCampaignOverviewAllOfSender"
    },
    {
        "name": "replyTo",
        "baseName": "replyTo",
        "type": "string"
    },
    {
        "name": "toField",
        "baseName": "toField",
        "type": "string"
    },
    {
        "name": "htmlContent",
        "baseName": "htmlContent",
        "type": "string"
    },
    {
        "name": "shareLink",
        "baseName": "shareLink",
        "type": "string"
    },
    {
        "name": "tag",
        "baseName": "tag",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "string"
    },
    {
        "name": "inlineImageActivation",
        "baseName": "inlineImageActivation",
        "type": "boolean"
    },
    {
        "name": "mirrorActive",
        "baseName": "mirrorActive",
        "type": "boolean"
    },
    {
        "name": "recurring",
        "baseName": "recurring",
        "type": "boolean"
    },
    {
        "name": "sentDate",
        "baseName": "sentDate",
        "type": "string"
    },
    {
        "name": "returnBounce",
        "baseName": "returnBounce",
        "type": "number"
    }
];
(function(GetExtendedCampaignOverview) {
    let TypeEnum;
    (function(TypeEnum) {
        TypeEnum[TypeEnum["Classic"] = 'classic'] = "Classic";
        TypeEnum[TypeEnum["Trigger"] = 'trigger'] = "Trigger";
    })(TypeEnum = GetExtendedCampaignOverview.TypeEnum || (GetExtendedCampaignOverview.TypeEnum = {}));
    let StatusEnum;
    (function(StatusEnum) {
        StatusEnum[StatusEnum["Draft"] = 'draft'] = "Draft";
        StatusEnum[StatusEnum["Sent"] = 'sent'] = "Sent";
        StatusEnum[StatusEnum["Archive"] = 'archive'] = "Archive";
        StatusEnum[StatusEnum["Queued"] = 'queued'] = "Queued";
        StatusEnum[StatusEnum["Suspended"] = 'suspended'] = "Suspended";
        StatusEnum[StatusEnum["InProcess"] = 'in_process'] = "InProcess";
    })(StatusEnum = GetExtendedCampaignOverview.StatusEnum || (GetExtendedCampaignOverview.StatusEnum = {}));
})(GetExtendedCampaignOverview = exports.GetExtendedCampaignOverview || (exports.GetExtendedCampaignOverview = {})); //# sourceMappingURL=getExtendedCampaignOverview.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedCampaignOverviewAllOfSender.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedCampaignOverviewAllOfSender = void 0;
class GetExtendedCampaignOverviewAllOfSender {
    static getAttributeTypeMap() {
        return GetExtendedCampaignOverviewAllOfSender.attributeTypeMap;
    }
}
exports.GetExtendedCampaignOverviewAllOfSender = GetExtendedCampaignOverviewAllOfSender;
GetExtendedCampaignOverviewAllOfSender.discriminator = undefined;
GetExtendedCampaignOverviewAllOfSender.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    }
]; //# sourceMappingURL=getExtendedCampaignOverviewAllOfSender.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedCampaignStats.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedCampaignStats = void 0;
class GetExtendedCampaignStats {
    static getAttributeTypeMap() {
        return GetExtendedCampaignStats.attributeTypeMap;
    }
}
exports.GetExtendedCampaignStats = GetExtendedCampaignStats;
GetExtendedCampaignStats.discriminator = undefined;
GetExtendedCampaignStats.attributeTypeMap = [
    {
        "name": "globalStats",
        "baseName": "globalStats",
        "type": "GetCampaignStats"
    },
    {
        "name": "campaignStats",
        "baseName": "campaignStats",
        "type": "Array<GetCampaignStats>"
    },
    {
        "name": "mirrorClick",
        "baseName": "mirrorClick",
        "type": "number"
    },
    {
        "name": "remaining",
        "baseName": "remaining",
        "type": "number"
    },
    {
        "name": "linksStats",
        "baseName": "linksStats",
        "type": "object"
    },
    {
        "name": "statsByDomain",
        "baseName": "statsByDomain",
        "type": "{ [key: string]: GetCampaignStats; }"
    },
    {
        "name": "statsByDevice",
        "baseName": "statsByDevice",
        "type": "GetStatsByDevice"
    },
    {
        "name": "statsByBrowser",
        "baseName": "statsByBrowser",
        "type": "{ [key: string]: GetDeviceBrowserStats; }"
    }
]; //# sourceMappingURL=getExtendedCampaignStats.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedClient.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedClient = void 0;
class GetExtendedClient {
    static getAttributeTypeMap() {
        return GetExtendedClient.attributeTypeMap;
    }
}
exports.GetExtendedClient = GetExtendedClient;
GetExtendedClient.discriminator = undefined;
GetExtendedClient.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "firstName",
        "baseName": "firstName",
        "type": "string"
    },
    {
        "name": "lastName",
        "baseName": "lastName",
        "type": "string"
    },
    {
        "name": "companyName",
        "baseName": "companyName",
        "type": "string"
    },
    {
        "name": "address",
        "baseName": "address",
        "type": "GetExtendedClientAllOfAddress"
    }
]; //# sourceMappingURL=getExtendedClient.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedClientAllOfAddress.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedClientAllOfAddress = void 0;
class GetExtendedClientAllOfAddress {
    static getAttributeTypeMap() {
        return GetExtendedClientAllOfAddress.attributeTypeMap;
    }
}
exports.GetExtendedClientAllOfAddress = GetExtendedClientAllOfAddress;
GetExtendedClientAllOfAddress.discriminator = undefined;
GetExtendedClientAllOfAddress.attributeTypeMap = [
    {
        "name": "street",
        "baseName": "street",
        "type": "string"
    },
    {
        "name": "city",
        "baseName": "city",
        "type": "string"
    },
    {
        "name": "zipCode",
        "baseName": "zipCode",
        "type": "string"
    },
    {
        "name": "country",
        "baseName": "country",
        "type": "string"
    }
]; //# sourceMappingURL=getExtendedClientAllOfAddress.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetails.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedContactDetails = void 0;
class GetExtendedContactDetails {
    static getAttributeTypeMap() {
        return GetExtendedContactDetails.attributeTypeMap;
    }
}
exports.GetExtendedContactDetails = GetExtendedContactDetails;
GetExtendedContactDetails.discriminator = undefined;
GetExtendedContactDetails.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "emailBlacklisted",
        "baseName": "emailBlacklisted",
        "type": "boolean"
    },
    {
        "name": "smsBlacklisted",
        "baseName": "smsBlacklisted",
        "type": "boolean"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "string"
    },
    {
        "name": "listIds",
        "baseName": "listIds",
        "type": "Array<number>"
    },
    {
        "name": "listUnsubscribed",
        "baseName": "listUnsubscribed",
        "type": "Array<number>"
    },
    {
        "name": "attributes",
        "baseName": "attributes",
        "type": "object"
    },
    {
        "name": "statistics",
        "baseName": "statistics",
        "type": "GetExtendedContactDetailsAllOfStatistics"
    }
]; //# sourceMappingURL=getExtendedContactDetails.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatistics.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedContactDetailsAllOfStatistics = void 0;
class GetExtendedContactDetailsAllOfStatistics {
    static getAttributeTypeMap() {
        return GetExtendedContactDetailsAllOfStatistics.attributeTypeMap;
    }
}
exports.GetExtendedContactDetailsAllOfStatistics = GetExtendedContactDetailsAllOfStatistics;
GetExtendedContactDetailsAllOfStatistics.discriminator = undefined;
GetExtendedContactDetailsAllOfStatistics.attributeTypeMap = [
    {
        "name": "messagesSent",
        "baseName": "messagesSent",
        "type": "Array<GetExtendedContactDetailsAllOfStatisticsMessagesSent>"
    },
    {
        "name": "hardBounces",
        "baseName": "hardBounces",
        "type": "Array<GetExtendedContactDetailsAllOfStatisticsMessagesSent>"
    },
    {
        "name": "softBounces",
        "baseName": "softBounces",
        "type": "Array<GetExtendedContactDetailsAllOfStatisticsMessagesSent>"
    },
    {
        "name": "complaints",
        "baseName": "complaints",
        "type": "Array<GetExtendedContactDetailsAllOfStatisticsMessagesSent>"
    },
    {
        "name": "unsubscriptions",
        "baseName": "unsubscriptions",
        "type": "GetExtendedContactDetailsAllOfStatisticsUnsubscriptions"
    },
    {
        "name": "opened",
        "baseName": "opened",
        "type": "Array<GetExtendedContactDetailsAllOfStatisticsOpened>"
    },
    {
        "name": "clicked",
        "baseName": "clicked",
        "type": "Array<GetExtendedContactDetailsAllOfStatisticsClicked>"
    },
    {
        "name": "transacAttributes",
        "baseName": "transacAttributes",
        "type": "Array<object>"
    },
    {
        "name": "delivered",
        "baseName": "delivered",
        "type": "Array<GetExtendedContactDetailsAllOfStatisticsMessagesSent>"
    }
]; //# sourceMappingURL=getExtendedContactDetailsAllOfStatistics.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsClicked.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedContactDetailsAllOfStatisticsClicked = void 0;
class GetExtendedContactDetailsAllOfStatisticsClicked {
    static getAttributeTypeMap() {
        return GetExtendedContactDetailsAllOfStatisticsClicked.attributeTypeMap;
    }
}
exports.GetExtendedContactDetailsAllOfStatisticsClicked = GetExtendedContactDetailsAllOfStatisticsClicked;
GetExtendedContactDetailsAllOfStatisticsClicked.discriminator = undefined;
GetExtendedContactDetailsAllOfStatisticsClicked.attributeTypeMap = [
    {
        "name": "campaignId",
        "baseName": "campaignId",
        "type": "number"
    },
    {
        "name": "links",
        "baseName": "links",
        "type": "Array<GetExtendedContactDetailsAllOfStatisticsLinks>"
    }
]; //# sourceMappingURL=getExtendedContactDetailsAllOfStatisticsClicked.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsLinks.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedContactDetailsAllOfStatisticsLinks = void 0;
class GetExtendedContactDetailsAllOfStatisticsLinks {
    static getAttributeTypeMap() {
        return GetExtendedContactDetailsAllOfStatisticsLinks.attributeTypeMap;
    }
}
exports.GetExtendedContactDetailsAllOfStatisticsLinks = GetExtendedContactDetailsAllOfStatisticsLinks;
GetExtendedContactDetailsAllOfStatisticsLinks.discriminator = undefined;
GetExtendedContactDetailsAllOfStatisticsLinks.attributeTypeMap = [
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    },
    {
        "name": "eventTime",
        "baseName": "eventTime",
        "type": "string"
    },
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    }
]; //# sourceMappingURL=getExtendedContactDetailsAllOfStatisticsLinks.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsMessagesSent.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedContactDetailsAllOfStatisticsMessagesSent = void 0;
class GetExtendedContactDetailsAllOfStatisticsMessagesSent {
    static getAttributeTypeMap() {
        return GetExtendedContactDetailsAllOfStatisticsMessagesSent.attributeTypeMap;
    }
}
exports.GetExtendedContactDetailsAllOfStatisticsMessagesSent = GetExtendedContactDetailsAllOfStatisticsMessagesSent;
GetExtendedContactDetailsAllOfStatisticsMessagesSent.discriminator = undefined;
GetExtendedContactDetailsAllOfStatisticsMessagesSent.attributeTypeMap = [
    {
        "name": "campaignId",
        "baseName": "campaignId",
        "type": "number"
    },
    {
        "name": "eventTime",
        "baseName": "eventTime",
        "type": "string"
    }
]; //# sourceMappingURL=getExtendedContactDetailsAllOfStatisticsMessagesSent.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsOpened.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedContactDetailsAllOfStatisticsOpened = void 0;
class GetExtendedContactDetailsAllOfStatisticsOpened {
    static getAttributeTypeMap() {
        return GetExtendedContactDetailsAllOfStatisticsOpened.attributeTypeMap;
    }
}
exports.GetExtendedContactDetailsAllOfStatisticsOpened = GetExtendedContactDetailsAllOfStatisticsOpened;
GetExtendedContactDetailsAllOfStatisticsOpened.discriminator = undefined;
GetExtendedContactDetailsAllOfStatisticsOpened.attributeTypeMap = [
    {
        "name": "campaignId",
        "baseName": "campaignId",
        "type": "number"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    },
    {
        "name": "eventTime",
        "baseName": "eventTime",
        "type": "string"
    },
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    }
]; //# sourceMappingURL=getExtendedContactDetailsAllOfStatisticsOpened.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsUnsubscriptions.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedContactDetailsAllOfStatisticsUnsubscriptions = void 0;
class GetExtendedContactDetailsAllOfStatisticsUnsubscriptions {
    static getAttributeTypeMap() {
        return GetExtendedContactDetailsAllOfStatisticsUnsubscriptions.attributeTypeMap;
    }
}
exports.GetExtendedContactDetailsAllOfStatisticsUnsubscriptions = GetExtendedContactDetailsAllOfStatisticsUnsubscriptions;
GetExtendedContactDetailsAllOfStatisticsUnsubscriptions.discriminator = undefined;
GetExtendedContactDetailsAllOfStatisticsUnsubscriptions.attributeTypeMap = [
    {
        "name": "userUnsubscription",
        "baseName": "userUnsubscription",
        "type": "Array<GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription>"
    },
    {
        "name": "adminUnsubscription",
        "baseName": "adminUnsubscription",
        "type": "Array<GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription>"
    }
]; //# sourceMappingURL=getExtendedContactDetailsAllOfStatisticsUnsubscriptions.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription = void 0;
class GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription {
    static getAttributeTypeMap() {
        return GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription.attributeTypeMap;
    }
}
exports.GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription = GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription;
GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription.discriminator = undefined;
GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription.attributeTypeMap = [
    {
        "name": "eventTime",
        "baseName": "eventTime",
        "type": "string"
    },
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    }
]; //# sourceMappingURL=getExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription = void 0;
class GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription {
    static getAttributeTypeMap() {
        return GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription.attributeTypeMap;
    }
}
exports.GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription = GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription;
GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription.discriminator = undefined;
GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription.attributeTypeMap = [
    {
        "name": "campaignId",
        "baseName": "campaignId",
        "type": "number"
    },
    {
        "name": "eventTime",
        "baseName": "eventTime",
        "type": "string"
    },
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    }
]; //# sourceMappingURL=getExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedList = void 0;
class GetExtendedList {
    static getAttributeTypeMap() {
        return GetExtendedList.attributeTypeMap;
    }
}
exports.GetExtendedList = GetExtendedList;
GetExtendedList.discriminator = undefined;
GetExtendedList.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "totalBlacklisted",
        "baseName": "totalBlacklisted",
        "type": "number"
    },
    {
        "name": "totalSubscribers",
        "baseName": "totalSubscribers",
        "type": "number"
    },
    {
        "name": "uniqueSubscribers",
        "baseName": "uniqueSubscribers",
        "type": "number"
    },
    {
        "name": "folderId",
        "baseName": "folderId",
        "type": "number"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "campaignStats",
        "baseName": "campaignStats",
        "type": "Array<GetExtendedListAllOfCampaignStats>"
    },
    {
        "name": "dynamicList",
        "baseName": "dynamicList",
        "type": "boolean"
    }
]; //# sourceMappingURL=getExtendedList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedListAllOfCampaignStats.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExtendedListAllOfCampaignStats = void 0;
class GetExtendedListAllOfCampaignStats {
    static getAttributeTypeMap() {
        return GetExtendedListAllOfCampaignStats.attributeTypeMap;
    }
}
exports.GetExtendedListAllOfCampaignStats = GetExtendedListAllOfCampaignStats;
GetExtendedListAllOfCampaignStats.discriminator = undefined;
GetExtendedListAllOfCampaignStats.attributeTypeMap = [
    {
        "name": "campaignId",
        "baseName": "campaignId",
        "type": "number"
    },
    {
        "name": "stats",
        "baseName": "stats",
        "type": "GetCampaignStats"
    }
]; //# sourceMappingURL=getExtendedListAllOfCampaignStats.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExternalFeedByUUID.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExternalFeedByUUID = void 0;
class GetExternalFeedByUUID {
    static getAttributeTypeMap() {
        return GetExternalFeedByUUID.attributeTypeMap;
    }
}
exports.GetExternalFeedByUUID = GetExternalFeedByUUID;
GetExternalFeedByUUID.discriminator = undefined;
GetExternalFeedByUUID.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "authType",
        "baseName": "authType",
        "type": "GetExternalFeedByUUID.AuthTypeEnum"
    },
    {
        "name": "username",
        "baseName": "username",
        "type": "string"
    },
    {
        "name": "password",
        "baseName": "password",
        "type": "string"
    },
    {
        "name": "token",
        "baseName": "token",
        "type": "string"
    },
    {
        "name": "headers",
        "baseName": "headers",
        "type": "Array<GetExternalFeedByUUIDHeadersInner>"
    },
    {
        "name": "maxRetries",
        "baseName": "maxRetries",
        "type": "number"
    },
    {
        "name": "cache",
        "baseName": "cache",
        "type": "boolean"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "Date"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "Date"
    }
];
(function(GetExternalFeedByUUID) {
    let AuthTypeEnum;
    (function(AuthTypeEnum) {
        AuthTypeEnum[AuthTypeEnum["Basic"] = 'basic'] = "Basic";
        AuthTypeEnum[AuthTypeEnum["Token"] = 'token'] = "Token";
        AuthTypeEnum[AuthTypeEnum["NoAuth"] = 'noAuth'] = "NoAuth";
    })(AuthTypeEnum = GetExternalFeedByUUID.AuthTypeEnum || (GetExternalFeedByUUID.AuthTypeEnum = {}));
})(GetExternalFeedByUUID = exports.GetExternalFeedByUUID || (exports.GetExternalFeedByUUID = {})); //# sourceMappingURL=getExternalFeedByUUID.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getExternalFeedByUUIDHeadersInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetExternalFeedByUUIDHeadersInner = void 0;
class GetExternalFeedByUUIDHeadersInner {
    static getAttributeTypeMap() {
        return GetExternalFeedByUUIDHeadersInner.attributeTypeMap;
    }
}
exports.GetExternalFeedByUUIDHeadersInner = GetExternalFeedByUUIDHeadersInner;
GetExternalFeedByUUIDHeadersInner.discriminator = undefined;
GetExternalFeedByUUIDHeadersInner.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "value",
        "baseName": "value",
        "type": "string"
    }
]; //# sourceMappingURL=getExternalFeedByUUIDHeadersInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getFolder.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetFolder = void 0;
class GetFolder {
    static getAttributeTypeMap() {
        return GetFolder.attributeTypeMap;
    }
}
exports.GetFolder = GetFolder;
GetFolder.discriminator = undefined;
GetFolder.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "totalBlacklisted",
        "baseName": "totalBlacklisted",
        "type": "number"
    },
    {
        "name": "totalSubscribers",
        "baseName": "totalSubscribers",
        "type": "number"
    },
    {
        "name": "uniqueSubscribers",
        "baseName": "uniqueSubscribers",
        "type": "number"
    }
]; //# sourceMappingURL=getFolder.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getFolderLists.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetFolderLists = void 0;
class GetFolderLists {
    static getAttributeTypeMap() {
        return GetFolderLists.attributeTypeMap;
    }
}
exports.GetFolderLists = GetFolderLists;
GetFolderLists.discriminator = undefined;
GetFolderLists.attributeTypeMap = [
    {
        "name": "lists",
        "baseName": "lists",
        "type": "Array<GetList>"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    }
]; //# sourceMappingURL=getFolderLists.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getFolders.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetFolders = void 0;
class GetFolders {
    static getAttributeTypeMap() {
        return GetFolders.attributeTypeMap;
    }
}
exports.GetFolders = GetFolders;
GetFolders.discriminator = undefined;
GetFolders.attributeTypeMap = [
    {
        "name": "folders",
        "baseName": "folders",
        "type": "Array<GetFolder>"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    }
]; //# sourceMappingURL=getFolders.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getInboundEmailEvents.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetInboundEmailEvents = void 0;
class GetInboundEmailEvents {
    static getAttributeTypeMap() {
        return GetInboundEmailEvents.attributeTypeMap;
    }
}
exports.GetInboundEmailEvents = GetInboundEmailEvents;
GetInboundEmailEvents.discriminator = undefined;
GetInboundEmailEvents.attributeTypeMap = [
    {
        "name": "events",
        "baseName": "events",
        "type": "Array<GetInboundEmailEventsEventsInner>"
    }
]; //# sourceMappingURL=getInboundEmailEvents.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getInboundEmailEventsByUuid.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetInboundEmailEventsByUuid = void 0;
class GetInboundEmailEventsByUuid {
    static getAttributeTypeMap() {
        return GetInboundEmailEventsByUuid.attributeTypeMap;
    }
}
exports.GetInboundEmailEventsByUuid = GetInboundEmailEventsByUuid;
GetInboundEmailEventsByUuid.discriminator = undefined;
GetInboundEmailEventsByUuid.attributeTypeMap = [
    {
        "name": "receivedAt",
        "baseName": "receivedAt",
        "type": "Date"
    },
    {
        "name": "deliveredAt",
        "baseName": "deliveredAt",
        "type": "Date"
    },
    {
        "name": "recipient",
        "baseName": "recipient",
        "type": "string"
    },
    {
        "name": "sender",
        "baseName": "sender",
        "type": "string"
    },
    {
        "name": "messageId",
        "baseName": "messageId",
        "type": "string"
    },
    {
        "name": "subject",
        "baseName": "subject",
        "type": "string"
    },
    {
        "name": "attachments",
        "baseName": "attachments",
        "type": "Array<GetInboundEmailEventsByUuidAttachmentsInner>"
    },
    {
        "name": "logs",
        "baseName": "logs",
        "type": "Array<GetInboundEmailEventsByUuidLogsInner>"
    }
]; //# sourceMappingURL=getInboundEmailEventsByUuid.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getInboundEmailEventsByUuidAttachmentsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetInboundEmailEventsByUuidAttachmentsInner = void 0;
class GetInboundEmailEventsByUuidAttachmentsInner {
    static getAttributeTypeMap() {
        return GetInboundEmailEventsByUuidAttachmentsInner.attributeTypeMap;
    }
}
exports.GetInboundEmailEventsByUuidAttachmentsInner = GetInboundEmailEventsByUuidAttachmentsInner;
GetInboundEmailEventsByUuidAttachmentsInner.discriminator = undefined;
GetInboundEmailEventsByUuidAttachmentsInner.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "contentType",
        "baseName": "contentType",
        "type": "string"
    },
    {
        "name": "contentId",
        "baseName": "contentId",
        "type": "string"
    },
    {
        "name": "contentLength",
        "baseName": "contentLength",
        "type": "number"
    }
]; //# sourceMappingURL=getInboundEmailEventsByUuidAttachmentsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getInboundEmailEventsByUuidLogsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetInboundEmailEventsByUuidLogsInner = void 0;
class GetInboundEmailEventsByUuidLogsInner {
    static getAttributeTypeMap() {
        return GetInboundEmailEventsByUuidLogsInner.attributeTypeMap;
    }
}
exports.GetInboundEmailEventsByUuidLogsInner = GetInboundEmailEventsByUuidLogsInner;
GetInboundEmailEventsByUuidLogsInner.discriminator = undefined;
GetInboundEmailEventsByUuidLogsInner.attributeTypeMap = [
    {
        "name": "date",
        "baseName": "date",
        "type": "Date"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "GetInboundEmailEventsByUuidLogsInner.TypeEnum"
    }
];
(function(GetInboundEmailEventsByUuidLogsInner) {
    let TypeEnum;
    (function(TypeEnum) {
        TypeEnum[TypeEnum["Received"] = 'received'] = "Received";
        TypeEnum[TypeEnum["Processed"] = 'processed'] = "Processed";
        TypeEnum[TypeEnum["WebhookFailed"] = 'webhookFailed'] = "WebhookFailed";
        TypeEnum[TypeEnum["WebhookDelivered"] = 'webhookDelivered'] = "WebhookDelivered";
    })(TypeEnum = GetInboundEmailEventsByUuidLogsInner.TypeEnum || (GetInboundEmailEventsByUuidLogsInner.TypeEnum = {}));
})(GetInboundEmailEventsByUuidLogsInner = exports.GetInboundEmailEventsByUuidLogsInner || (exports.GetInboundEmailEventsByUuidLogsInner = {})); //# sourceMappingURL=getInboundEmailEventsByUuidLogsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getInboundEmailEventsEventsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetInboundEmailEventsEventsInner = void 0;
class GetInboundEmailEventsEventsInner {
    static getAttributeTypeMap() {
        return GetInboundEmailEventsEventsInner.attributeTypeMap;
    }
}
exports.GetInboundEmailEventsEventsInner = GetInboundEmailEventsEventsInner;
GetInboundEmailEventsEventsInner.discriminator = undefined;
GetInboundEmailEventsEventsInner.attributeTypeMap = [
    {
        "name": "uuid",
        "baseName": "uuid",
        "type": "string"
    },
    {
        "name": "date",
        "baseName": "date",
        "type": "Date"
    },
    {
        "name": "sender",
        "baseName": "sender",
        "type": "string"
    },
    {
        "name": "recipient",
        "baseName": "recipient",
        "type": "string"
    }
]; //# sourceMappingURL=getInboundEmailEventsEventsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getInvitedUsersList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetInvitedUsersList = void 0;
class GetInvitedUsersList {
    static getAttributeTypeMap() {
        return GetInvitedUsersList.attributeTypeMap;
    }
}
exports.GetInvitedUsersList = GetInvitedUsersList;
GetInvitedUsersList.discriminator = undefined;
GetInvitedUsersList.attributeTypeMap = [
    {
        "name": "users",
        "baseName": "users",
        "type": "Array<GetInvitedUsersListUsersInner>"
    }
]; //# sourceMappingURL=getInvitedUsersList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getInvitedUsersListUsersInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetInvitedUsersListUsersInner = void 0;
class GetInvitedUsersListUsersInner {
    static getAttributeTypeMap() {
        return GetInvitedUsersListUsersInner.attributeTypeMap;
    }
}
exports.GetInvitedUsersListUsersInner = GetInvitedUsersListUsersInner;
GetInvitedUsersListUsersInner.discriminator = undefined;
GetInvitedUsersListUsersInner.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "isOwner",
        "baseName": "is_owner",
        "type": "string"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "string"
    },
    {
        "name": "featureAccess",
        "baseName": "feature_access",
        "type": "GetInvitedUsersListUsersInnerFeatureAccess"
    }
]; //# sourceMappingURL=getInvitedUsersListUsersInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getInvitedUsersListUsersInnerFeatureAccess.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetInvitedUsersListUsersInnerFeatureAccess = void 0;
class GetInvitedUsersListUsersInnerFeatureAccess {
    static getAttributeTypeMap() {
        return GetInvitedUsersListUsersInnerFeatureAccess.attributeTypeMap;
    }
}
exports.GetInvitedUsersListUsersInnerFeatureAccess = GetInvitedUsersListUsersInnerFeatureAccess;
GetInvitedUsersListUsersInnerFeatureAccess.discriminator = undefined;
GetInvitedUsersListUsersInnerFeatureAccess.attributeTypeMap = [
    {
        "name": "marketing",
        "baseName": "marketing",
        "type": "object"
    },
    {
        "name": "conversations",
        "baseName": "conversations",
        "type": "object"
    },
    {
        "name": "crm",
        "baseName": "crm",
        "type": "object"
    }
]; //# sourceMappingURL=getInvitedUsersListUsersInnerFeatureAccess.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getIp.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetIp = void 0;
class GetIp {
    static getAttributeTypeMap() {
        return GetIp.attributeTypeMap;
    }
}
exports.GetIp = GetIp;
GetIp.discriminator = undefined;
GetIp.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    },
    {
        "name": "active",
        "baseName": "active",
        "type": "boolean"
    },
    {
        "name": "domain",
        "baseName": "domain",
        "type": "string"
    }
]; //# sourceMappingURL=getIp.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getIpFromSender.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetIpFromSender = void 0;
class GetIpFromSender {
    static getAttributeTypeMap() {
        return GetIpFromSender.attributeTypeMap;
    }
}
exports.GetIpFromSender = GetIpFromSender;
GetIpFromSender.discriminator = undefined;
GetIpFromSender.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    },
    {
        "name": "domain",
        "baseName": "domain",
        "type": "string"
    },
    {
        "name": "weight",
        "baseName": "weight",
        "type": "number"
    }
]; //# sourceMappingURL=getIpFromSender.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getIps.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetIps = void 0;
class GetIps {
    static getAttributeTypeMap() {
        return GetIps.attributeTypeMap;
    }
}
exports.GetIps = GetIps;
GetIps.discriminator = undefined;
GetIps.attributeTypeMap = [
    {
        "name": "ips",
        "baseName": "ips",
        "type": "Array<GetIp>"
    }
]; //# sourceMappingURL=getIps.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getIpsFromSender.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetIpsFromSender = void 0;
class GetIpsFromSender {
    static getAttributeTypeMap() {
        return GetIpsFromSender.attributeTypeMap;
    }
}
exports.GetIpsFromSender = GetIpsFromSender;
GetIpsFromSender.discriminator = undefined;
GetIpsFromSender.attributeTypeMap = [
    {
        "name": "ips",
        "baseName": "ips",
        "type": "Array<GetIpFromSender>"
    }
]; //# sourceMappingURL=getIpsFromSender.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetList = void 0;
class GetList {
    static getAttributeTypeMap() {
        return GetList.attributeTypeMap;
    }
}
exports.GetList = GetList;
GetList.discriminator = undefined;
GetList.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "totalBlacklisted",
        "baseName": "totalBlacklisted",
        "type": "number"
    },
    {
        "name": "totalSubscribers",
        "baseName": "totalSubscribers",
        "type": "number"
    },
    {
        "name": "uniqueSubscribers",
        "baseName": "uniqueSubscribers",
        "type": "number"
    }
]; //# sourceMappingURL=getList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getLists.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetLists = void 0;
class GetLists {
    static getAttributeTypeMap() {
        return GetLists.attributeTypeMap;
    }
}
exports.GetLists = GetLists;
GetLists.discriminator = undefined;
GetLists.attributeTypeMap = [
    {
        "name": "lists",
        "baseName": "lists",
        "type": "Array<GetListsListsInner>"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    }
]; //# sourceMappingURL=getLists.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getListsListsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetListsListsInner = void 0;
class GetListsListsInner {
    static getAttributeTypeMap() {
        return GetListsListsInner.attributeTypeMap;
    }
}
exports.GetListsListsInner = GetListsListsInner;
GetListsListsInner.discriminator = undefined;
GetListsListsInner.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "totalBlacklisted",
        "baseName": "totalBlacklisted",
        "type": "number"
    },
    {
        "name": "totalSubscribers",
        "baseName": "totalSubscribers",
        "type": "number"
    },
    {
        "name": "uniqueSubscribers",
        "baseName": "uniqueSubscribers",
        "type": "number"
    },
    {
        "name": "folderId",
        "baseName": "folderId",
        "type": "number"
    }
]; //# sourceMappingURL=getListsListsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getOrders.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetOrders = void 0;
class GetOrders {
    static getAttributeTypeMap() {
        return GetOrders.attributeTypeMap;
    }
}
exports.GetOrders = GetOrders;
GetOrders.discriminator = undefined;
GetOrders.attributeTypeMap = [
    {
        "name": "orders",
        "baseName": "orders",
        "type": "Array<GetOrdersOrdersInner>"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    }
]; //# sourceMappingURL=getOrders.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getOrdersOrdersInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetOrdersOrdersInner = void 0;
class GetOrdersOrdersInner {
    static getAttributeTypeMap() {
        return GetOrdersOrdersInner.attributeTypeMap;
    }
}
exports.GetOrdersOrdersInner = GetOrdersOrdersInner;
GetOrdersOrdersInner.discriminator = undefined;
GetOrdersOrdersInner.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "updatedAt",
        "baseName": "updatedAt",
        "type": "string"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "string"
    },
    {
        "name": "amount",
        "baseName": "amount",
        "type": "number"
    },
    {
        "name": "products",
        "baseName": "products",
        "type": "Array<OrderProductsInner>"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "billing",
        "baseName": "billing",
        "type": "OrderBilling"
    },
    {
        "name": "coupons",
        "baseName": "coupons",
        "type": "Array<string>"
    },
    {
        "name": "contactId",
        "baseName": "contact_id",
        "type": "number"
    }
]; //# sourceMappingURL=getOrdersOrdersInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getPaymentRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetPaymentRequest = void 0;
class GetPaymentRequest {
    static getAttributeTypeMap() {
        return GetPaymentRequest.attributeTypeMap;
    }
}
exports.GetPaymentRequest = GetPaymentRequest;
GetPaymentRequest.discriminator = undefined;
GetPaymentRequest.attributeTypeMap = [
    {
        "name": "reference",
        "baseName": "reference",
        "type": "string"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "GetPaymentRequest.StatusEnum"
    },
    {
        "name": "configuration",
        "baseName": "configuration",
        "type": "Configuration"
    },
    {
        "name": "contactId",
        "baseName": "contactId",
        "type": "number"
    },
    {
        "name": "numberOfRemindersSent",
        "baseName": "numberOfRemindersSent",
        "type": "number"
    },
    {
        "name": "cart",
        "baseName": "cart",
        "type": "Cart"
    },
    {
        "name": "notification",
        "baseName": "notification",
        "type": "Notification"
    }
];
(function(GetPaymentRequest) {
    let StatusEnum;
    (function(StatusEnum) {
        StatusEnum[StatusEnum["Created"] = 'created'] = "Created";
        StatusEnum[StatusEnum["Sent"] = 'sent'] = "Sent";
        StatusEnum[StatusEnum["ReminderSentPaid"] = 'reminderSent - paid'] = "ReminderSentPaid";
    })(StatusEnum = GetPaymentRequest.StatusEnum || (GetPaymentRequest.StatusEnum = {}));
})(GetPaymentRequest = exports.GetPaymentRequest || (exports.GetPaymentRequest = {})); //# sourceMappingURL=getPaymentRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getProcess.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetProcess = void 0;
class GetProcess {
    static getAttributeTypeMap() {
        return GetProcess.attributeTypeMap;
    }
}
exports.GetProcess = GetProcess;
GetProcess.discriminator = undefined;
GetProcess.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "GetProcess.StatusEnum"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "exportUrl",
        "baseName": "export_url",
        "type": "string"
    }
];
(function(GetProcess) {
    let StatusEnum;
    (function(StatusEnum) {
        StatusEnum[StatusEnum["Queued"] = 'queued'] = "Queued";
        StatusEnum[StatusEnum["InProcess"] = 'in_process'] = "InProcess";
        StatusEnum[StatusEnum["Completed"] = 'completed'] = "Completed";
    })(StatusEnum = GetProcess.StatusEnum || (GetProcess.StatusEnum = {}));
})(GetProcess = exports.GetProcess || (exports.GetProcess = {})); //# sourceMappingURL=getProcess.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getProcesses.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetProcesses = void 0;
class GetProcesses {
    static getAttributeTypeMap() {
        return GetProcesses.attributeTypeMap;
    }
}
exports.GetProcesses = GetProcesses;
GetProcesses.discriminator = undefined;
GetProcesses.attributeTypeMap = [
    {
        "name": "processes",
        "baseName": "processes",
        "type": "Array<GetProcess>"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    }
]; //# sourceMappingURL=getProcesses.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getProductDetails.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetProductDetails = void 0;
class GetProductDetails {
    static getAttributeTypeMap() {
        return GetProductDetails.attributeTypeMap;
    }
}
exports.GetProductDetails = GetProductDetails;
GetProductDetails.discriminator = undefined;
GetProductDetails.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "imageUrl",
        "baseName": "imageUrl",
        "type": "string"
    },
    {
        "name": "sku",
        "baseName": "sku",
        "type": "string"
    },
    {
        "name": "price",
        "baseName": "price",
        "type": "number"
    },
    {
        "name": "categories",
        "baseName": "categories",
        "type": "Array<string>"
    },
    {
        "name": "parentId",
        "baseName": "parentId",
        "type": "string"
    },
    {
        "name": "s3Original",
        "baseName": "s3Original",
        "type": "string"
    },
    {
        "name": "s3ThumbAnalytics",
        "baseName": "s3ThumbAnalytics",
        "type": "string"
    },
    {
        "name": "metaInfo",
        "baseName": "metaInfo",
        "type": "object"
    },
    {
        "name": "s3ThumbEditor",
        "baseName": "s3ThumbEditor",
        "type": "string"
    },
    {
        "name": "isDeleted",
        "baseName": "isDeleted",
        "type": "boolean"
    }
]; //# sourceMappingURL=getProductDetails.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getProducts.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetProducts = void 0;
class GetProducts {
    static getAttributeTypeMap() {
        return GetProducts.attributeTypeMap;
    }
}
exports.GetProducts = GetProducts;
GetProducts.discriminator = undefined;
GetProducts.attributeTypeMap = [
    {
        "name": "products",
        "baseName": "products",
        "type": "Array<GetProductDetails>"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    }
]; //# sourceMappingURL=getProducts.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getReports.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetReports = void 0;
class GetReports {
    static getAttributeTypeMap() {
        return GetReports.attributeTypeMap;
    }
}
exports.GetReports = GetReports;
GetReports.discriminator = undefined;
GetReports.attributeTypeMap = [
    {
        "name": "reports",
        "baseName": "reports",
        "type": "Array<GetReportsReportsInner>"
    }
]; //# sourceMappingURL=getReports.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getReportsReportsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetReportsReportsInner = void 0;
class GetReportsReportsInner {
    static getAttributeTypeMap() {
        return GetReportsReportsInner.attributeTypeMap;
    }
}
exports.GetReportsReportsInner = GetReportsReportsInner;
GetReportsReportsInner.discriminator = undefined;
GetReportsReportsInner.attributeTypeMap = [
    {
        "name": "date",
        "baseName": "date",
        "type": "string"
    },
    {
        "name": "requests",
        "baseName": "requests",
        "type": "number"
    },
    {
        "name": "delivered",
        "baseName": "delivered",
        "type": "number"
    },
    {
        "name": "hardBounces",
        "baseName": "hardBounces",
        "type": "number"
    },
    {
        "name": "softBounces",
        "baseName": "softBounces",
        "type": "number"
    },
    {
        "name": "clicks",
        "baseName": "clicks",
        "type": "number"
    },
    {
        "name": "uniqueClicks",
        "baseName": "uniqueClicks",
        "type": "number"
    },
    {
        "name": "opens",
        "baseName": "opens",
        "type": "number"
    },
    {
        "name": "uniqueOpens",
        "baseName": "uniqueOpens",
        "type": "number"
    },
    {
        "name": "spamReports",
        "baseName": "spamReports",
        "type": "number"
    },
    {
        "name": "blocked",
        "baseName": "blocked",
        "type": "number"
    },
    {
        "name": "invalid",
        "baseName": "invalid",
        "type": "number"
    },
    {
        "name": "unsubscribed",
        "baseName": "unsubscribed",
        "type": "number"
    }
]; //# sourceMappingURL=getReportsReportsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getScheduledEmailByBatchId.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetScheduledEmailByBatchId = void 0;
class GetScheduledEmailByBatchId {
    static getAttributeTypeMap() {
        return GetScheduledEmailByBatchId.attributeTypeMap;
    }
}
exports.GetScheduledEmailByBatchId = GetScheduledEmailByBatchId;
GetScheduledEmailByBatchId.discriminator = undefined;
GetScheduledEmailByBatchId.attributeTypeMap = [
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    },
    {
        "name": "batches",
        "baseName": "batches",
        "type": "Array<GetScheduledEmailByBatchIdBatchesInner>"
    }
]; //# sourceMappingURL=getScheduledEmailByBatchId.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getScheduledEmailByBatchIdBatchesInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetScheduledEmailByBatchIdBatchesInner = void 0;
class GetScheduledEmailByBatchIdBatchesInner {
    static getAttributeTypeMap() {
        return GetScheduledEmailByBatchIdBatchesInner.attributeTypeMap;
    }
}
exports.GetScheduledEmailByBatchIdBatchesInner = GetScheduledEmailByBatchIdBatchesInner;
GetScheduledEmailByBatchIdBatchesInner.discriminator = undefined;
GetScheduledEmailByBatchIdBatchesInner.attributeTypeMap = [
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "Date"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "Date"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "GetScheduledEmailByBatchIdBatchesInner.StatusEnum"
    }
];
(function(GetScheduledEmailByBatchIdBatchesInner) {
    let StatusEnum;
    (function(StatusEnum) {
        StatusEnum[StatusEnum["InProgress"] = 'inProgress'] = "InProgress";
        StatusEnum[StatusEnum["Queued"] = 'queued'] = "Queued";
        StatusEnum[StatusEnum["Processed"] = 'processed'] = "Processed";
        StatusEnum[StatusEnum["Error"] = 'error'] = "Error";
    })(StatusEnum = GetScheduledEmailByBatchIdBatchesInner.StatusEnum || (GetScheduledEmailByBatchIdBatchesInner.StatusEnum = {}));
})(GetScheduledEmailByBatchIdBatchesInner = exports.GetScheduledEmailByBatchIdBatchesInner || (exports.GetScheduledEmailByBatchIdBatchesInner = {})); //# sourceMappingURL=getScheduledEmailByBatchIdBatchesInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getScheduledEmailByMessageId.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetScheduledEmailByMessageId = void 0;
class GetScheduledEmailByMessageId {
    static getAttributeTypeMap() {
        return GetScheduledEmailByMessageId.attributeTypeMap;
    }
}
exports.GetScheduledEmailByMessageId = GetScheduledEmailByMessageId;
GetScheduledEmailByMessageId.discriminator = undefined;
GetScheduledEmailByMessageId.attributeTypeMap = [
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "Date"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "Date"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "GetScheduledEmailByMessageId.StatusEnum"
    }
];
(function(GetScheduledEmailByMessageId) {
    let StatusEnum;
    (function(StatusEnum) {
        StatusEnum[StatusEnum["InProgress"] = 'inProgress'] = "InProgress";
        StatusEnum[StatusEnum["Queued"] = 'queued'] = "Queued";
        StatusEnum[StatusEnum["Processed"] = 'processed'] = "Processed";
        StatusEnum[StatusEnum["Error"] = 'error'] = "Error";
    })(StatusEnum = GetScheduledEmailByMessageId.StatusEnum || (GetScheduledEmailByMessageId.StatusEnum = {}));
})(GetScheduledEmailByMessageId = exports.GetScheduledEmailByMessageId || (exports.GetScheduledEmailByMessageId = {})); //# sourceMappingURL=getScheduledEmailByMessageId.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSegments.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSegments = void 0;
class GetSegments {
    static getAttributeTypeMap() {
        return GetSegments.attributeTypeMap;
    }
}
exports.GetSegments = GetSegments;
GetSegments.discriminator = undefined;
GetSegments.attributeTypeMap = [
    {
        "name": "segments",
        "baseName": "segments",
        "type": "GetSegmentsSegments"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    }
]; //# sourceMappingURL=getSegments.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSegmentsSegments.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSegmentsSegments = void 0;
class GetSegmentsSegments {
    static getAttributeTypeMap() {
        return GetSegmentsSegments.attributeTypeMap;
    }
}
exports.GetSegmentsSegments = GetSegmentsSegments;
GetSegmentsSegments.discriminator = undefined;
GetSegmentsSegments.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "segmentName",
        "baseName": "segmentName",
        "type": "string"
    },
    {
        "name": "categoryName",
        "baseName": "categoryName",
        "type": "string"
    },
    {
        "name": "updatedAt",
        "baseName": "updatedAt",
        "type": "string"
    }
]; //# sourceMappingURL=getSegmentsSegments.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSendersList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSendersList = void 0;
class GetSendersList {
    static getAttributeTypeMap() {
        return GetSendersList.attributeTypeMap;
    }
}
exports.GetSendersList = GetSendersList;
GetSendersList.discriminator = undefined;
GetSendersList.attributeTypeMap = [
    {
        "name": "senders",
        "baseName": "senders",
        "type": "Array<GetSendersListSendersInner>"
    }
]; //# sourceMappingURL=getSendersList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSendersListSendersInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSendersListSendersInner = void 0;
class GetSendersListSendersInner {
    static getAttributeTypeMap() {
        return GetSendersListSendersInner.attributeTypeMap;
    }
}
exports.GetSendersListSendersInner = GetSendersListSendersInner;
GetSendersListSendersInner.discriminator = undefined;
GetSendersListSendersInner.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "active",
        "baseName": "active",
        "type": "boolean"
    },
    {
        "name": "ips",
        "baseName": "ips",
        "type": "Array<GetSendersListSendersInnerIpsInner>"
    }
]; //# sourceMappingURL=getSendersListSendersInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSendersListSendersInnerIpsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSendersListSendersInnerIpsInner = void 0;
class GetSendersListSendersInnerIpsInner {
    static getAttributeTypeMap() {
        return GetSendersListSendersInnerIpsInner.attributeTypeMap;
    }
}
exports.GetSendersListSendersInnerIpsInner = GetSendersListSendersInnerIpsInner;
GetSendersListSendersInnerIpsInner.discriminator = undefined;
GetSendersListSendersInnerIpsInner.attributeTypeMap = [
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    },
    {
        "name": "domain",
        "baseName": "domain",
        "type": "string"
    },
    {
        "name": "weight",
        "baseName": "weight",
        "type": "number"
    }
]; //# sourceMappingURL=getSendersListSendersInnerIpsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSharedTemplateUrl.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSharedTemplateUrl = void 0;
class GetSharedTemplateUrl {
    static getAttributeTypeMap() {
        return GetSharedTemplateUrl.attributeTypeMap;
    }
}
exports.GetSharedTemplateUrl = GetSharedTemplateUrl;
GetSharedTemplateUrl.discriminator = undefined;
GetSharedTemplateUrl.attributeTypeMap = [
    {
        "name": "sharedUrl",
        "baseName": "sharedUrl",
        "type": "string"
    }
]; //# sourceMappingURL=getSharedTemplateUrl.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSmsCampaign.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSmsCampaign = void 0;
class GetSmsCampaign {
    static getAttributeTypeMap() {
        return GetSmsCampaign.attributeTypeMap;
    }
}
exports.GetSmsCampaign = GetSmsCampaign;
GetSmsCampaign.discriminator = undefined;
GetSmsCampaign.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "GetSmsCampaign.StatusEnum"
    },
    {
        "name": "content",
        "baseName": "content",
        "type": "string"
    },
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "string"
    },
    {
        "name": "sender",
        "baseName": "sender",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "string"
    },
    {
        "name": "recipients",
        "baseName": "recipients",
        "type": "GetCampaignRecipients"
    },
    {
        "name": "statistics",
        "baseName": "statistics",
        "type": "GetSmsCampaignStats"
    }
];
(function(GetSmsCampaign) {
    let StatusEnum;
    (function(StatusEnum) {
        StatusEnum[StatusEnum["Draft"] = 'draft'] = "Draft";
        StatusEnum[StatusEnum["Sent"] = 'sent'] = "Sent";
        StatusEnum[StatusEnum["Archive"] = 'archive'] = "Archive";
        StatusEnum[StatusEnum["Queued"] = 'queued'] = "Queued";
        StatusEnum[StatusEnum["Suspended"] = 'suspended'] = "Suspended";
        StatusEnum[StatusEnum["InProcess"] = 'inProcess'] = "InProcess";
    })(StatusEnum = GetSmsCampaign.StatusEnum || (GetSmsCampaign.StatusEnum = {}));
})(GetSmsCampaign = exports.GetSmsCampaign || (exports.GetSmsCampaign = {})); //# sourceMappingURL=getSmsCampaign.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSmsCampaignOverview.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSmsCampaignOverview = void 0;
class GetSmsCampaignOverview {
    static getAttributeTypeMap() {
        return GetSmsCampaignOverview.attributeTypeMap;
    }
}
exports.GetSmsCampaignOverview = GetSmsCampaignOverview;
GetSmsCampaignOverview.discriminator = undefined;
GetSmsCampaignOverview.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "GetSmsCampaignOverview.StatusEnum"
    },
    {
        "name": "content",
        "baseName": "content",
        "type": "string"
    },
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "string"
    },
    {
        "name": "sender",
        "baseName": "sender",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "string"
    }
];
(function(GetSmsCampaignOverview) {
    let StatusEnum;
    (function(StatusEnum) {
        StatusEnum[StatusEnum["Draft"] = 'draft'] = "Draft";
        StatusEnum[StatusEnum["Sent"] = 'sent'] = "Sent";
        StatusEnum[StatusEnum["Archive"] = 'archive'] = "Archive";
        StatusEnum[StatusEnum["Queued"] = 'queued'] = "Queued";
        StatusEnum[StatusEnum["Suspended"] = 'suspended'] = "Suspended";
        StatusEnum[StatusEnum["InProcess"] = 'inProcess'] = "InProcess";
    })(StatusEnum = GetSmsCampaignOverview.StatusEnum || (GetSmsCampaignOverview.StatusEnum = {}));
})(GetSmsCampaignOverview = exports.GetSmsCampaignOverview || (exports.GetSmsCampaignOverview = {})); //# sourceMappingURL=getSmsCampaignOverview.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSmsCampaignStats.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSmsCampaignStats = void 0;
class GetSmsCampaignStats {
    static getAttributeTypeMap() {
        return GetSmsCampaignStats.attributeTypeMap;
    }
}
exports.GetSmsCampaignStats = GetSmsCampaignStats;
GetSmsCampaignStats.discriminator = undefined;
GetSmsCampaignStats.attributeTypeMap = [
    {
        "name": "delivered",
        "baseName": "delivered",
        "type": "number"
    },
    {
        "name": "sent",
        "baseName": "sent",
        "type": "number"
    },
    {
        "name": "processing",
        "baseName": "processing",
        "type": "number"
    },
    {
        "name": "softBounces",
        "baseName": "softBounces",
        "type": "number"
    },
    {
        "name": "hardBounces",
        "baseName": "hardBounces",
        "type": "number"
    },
    {
        "name": "unsubscriptions",
        "baseName": "unsubscriptions",
        "type": "number"
    },
    {
        "name": "answered",
        "baseName": "answered",
        "type": "number"
    }
]; //# sourceMappingURL=getSmsCampaignStats.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSmsCampaigns.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSmsCampaigns = void 0;
class GetSmsCampaigns {
    static getAttributeTypeMap() {
        return GetSmsCampaigns.attributeTypeMap;
    }
}
exports.GetSmsCampaigns = GetSmsCampaigns;
GetSmsCampaigns.discriminator = undefined;
GetSmsCampaigns.attributeTypeMap = [
    {
        "name": "campaigns",
        "baseName": "campaigns",
        "type": "Array<GetSmsCampaignsCampaignsInner>"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    }
]; //# sourceMappingURL=getSmsCampaigns.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSmsCampaignsCampaignsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSmsCampaignsCampaignsInner = void 0;
class GetSmsCampaignsCampaignsInner {
    static getAttributeTypeMap() {
        return GetSmsCampaignsCampaignsInner.attributeTypeMap;
    }
}
exports.GetSmsCampaignsCampaignsInner = GetSmsCampaignsCampaignsInner;
GetSmsCampaignsCampaignsInner.discriminator = undefined;
GetSmsCampaignsCampaignsInner.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "GetSmsCampaignsCampaignsInner.StatusEnum"
    },
    {
        "name": "content",
        "baseName": "content",
        "type": "string"
    },
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "string"
    },
    {
        "name": "sender",
        "baseName": "sender",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "string"
    },
    {
        "name": "recipients",
        "baseName": "recipients",
        "type": "GetCampaignRecipients"
    },
    {
        "name": "statistics",
        "baseName": "statistics",
        "type": "GetSmsCampaignStats"
    }
];
(function(GetSmsCampaignsCampaignsInner) {
    let StatusEnum;
    (function(StatusEnum) {
        StatusEnum[StatusEnum["Draft"] = 'draft'] = "Draft";
        StatusEnum[StatusEnum["Sent"] = 'sent'] = "Sent";
        StatusEnum[StatusEnum["Archive"] = 'archive'] = "Archive";
        StatusEnum[StatusEnum["Queued"] = 'queued'] = "Queued";
        StatusEnum[StatusEnum["Suspended"] = 'suspended'] = "Suspended";
        StatusEnum[StatusEnum["InProcess"] = 'inProcess'] = "InProcess";
    })(StatusEnum = GetSmsCampaignsCampaignsInner.StatusEnum || (GetSmsCampaignsCampaignsInner.StatusEnum = {}));
})(GetSmsCampaignsCampaignsInner = exports.GetSmsCampaignsCampaignsInner || (exports.GetSmsCampaignsCampaignsInner = {})); //# sourceMappingURL=getSmsCampaignsCampaignsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSmsEventReport.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSmsEventReport = void 0;
class GetSmsEventReport {
    static getAttributeTypeMap() {
        return GetSmsEventReport.attributeTypeMap;
    }
}
exports.GetSmsEventReport = GetSmsEventReport;
GetSmsEventReport.discriminator = undefined;
GetSmsEventReport.attributeTypeMap = [
    {
        "name": "events",
        "baseName": "events",
        "type": "Array<GetSmsEventReportEventsInner>"
    }
]; //# sourceMappingURL=getSmsEventReport.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSmsEventReportEventsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSmsEventReportEventsInner = void 0;
class GetSmsEventReportEventsInner {
    static getAttributeTypeMap() {
        return GetSmsEventReportEventsInner.attributeTypeMap;
    }
}
exports.GetSmsEventReportEventsInner = GetSmsEventReportEventsInner;
GetSmsEventReportEventsInner.discriminator = undefined;
GetSmsEventReportEventsInner.attributeTypeMap = [
    {
        "name": "phoneNumber",
        "baseName": "phoneNumber",
        "type": "string"
    },
    {
        "name": "date",
        "baseName": "date",
        "type": "string"
    },
    {
        "name": "messageId",
        "baseName": "messageId",
        "type": "string"
    },
    {
        "name": "event",
        "baseName": "event",
        "type": "GetSmsEventReportEventsInner.EventEnum"
    },
    {
        "name": "reason",
        "baseName": "reason",
        "type": "string"
    },
    {
        "name": "reply",
        "baseName": "reply",
        "type": "string"
    },
    {
        "name": "tag",
        "baseName": "tag",
        "type": "string"
    }
];
(function(GetSmsEventReportEventsInner) {
    let EventEnum;
    (function(EventEnum) {
        EventEnum[EventEnum["Bounces"] = 'bounces'] = "Bounces";
        EventEnum[EventEnum["HardBounces"] = 'hardBounces'] = "HardBounces";
        EventEnum[EventEnum["SoftBounces"] = 'softBounces'] = "SoftBounces";
        EventEnum[EventEnum["Delivered"] = 'delivered'] = "Delivered";
        EventEnum[EventEnum["Sent"] = 'sent'] = "Sent";
        EventEnum[EventEnum["Accepted"] = 'accepted'] = "Accepted";
        EventEnum[EventEnum["Unsubscription"] = 'unsubscription'] = "Unsubscription";
        EventEnum[EventEnum["Replies"] = 'replies'] = "Replies";
        EventEnum[EventEnum["Blocked"] = 'blocked'] = "Blocked";
        EventEnum[EventEnum["Rejected"] = 'rejected'] = "Rejected";
        EventEnum[EventEnum["Skipped"] = 'skipped'] = "Skipped";
    })(EventEnum = GetSmsEventReportEventsInner.EventEnum || (GetSmsEventReportEventsInner.EventEnum = {}));
})(GetSmsEventReportEventsInner = exports.GetSmsEventReportEventsInner || (exports.GetSmsEventReportEventsInner = {})); //# sourceMappingURL=getSmsEventReportEventsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSmtpTemplateOverview.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSmtpTemplateOverview = void 0;
class GetSmtpTemplateOverview {
    static getAttributeTypeMap() {
        return GetSmtpTemplateOverview.attributeTypeMap;
    }
}
exports.GetSmtpTemplateOverview = GetSmtpTemplateOverview;
GetSmtpTemplateOverview.discriminator = undefined;
GetSmtpTemplateOverview.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "subject",
        "baseName": "subject",
        "type": "string"
    },
    {
        "name": "isActive",
        "baseName": "isActive",
        "type": "boolean"
    },
    {
        "name": "testSent",
        "baseName": "testSent",
        "type": "boolean"
    },
    {
        "name": "sender",
        "baseName": "sender",
        "type": "GetSmtpTemplateOverviewSender"
    },
    {
        "name": "replyTo",
        "baseName": "replyTo",
        "type": "string"
    },
    {
        "name": "toField",
        "baseName": "toField",
        "type": "string"
    },
    {
        "name": "tag",
        "baseName": "tag",
        "type": "string"
    },
    {
        "name": "htmlContent",
        "baseName": "htmlContent",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "string"
    },
    {
        "name": "doiTemplate",
        "baseName": "doiTemplate",
        "type": "boolean"
    }
]; //# sourceMappingURL=getSmtpTemplateOverview.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSmtpTemplateOverviewSender.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSmtpTemplateOverviewSender = void 0;
class GetSmtpTemplateOverviewSender {
    static getAttributeTypeMap() {
        return GetSmtpTemplateOverviewSender.attributeTypeMap;
    }
}
exports.GetSmtpTemplateOverviewSender = GetSmtpTemplateOverviewSender;
GetSmtpTemplateOverviewSender.discriminator = undefined;
GetSmtpTemplateOverviewSender.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    }
]; //# sourceMappingURL=getSmtpTemplateOverviewSender.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSmtpTemplates.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSmtpTemplates = void 0;
class GetSmtpTemplates {
    static getAttributeTypeMap() {
        return GetSmtpTemplates.attributeTypeMap;
    }
}
exports.GetSmtpTemplates = GetSmtpTemplates;
GetSmtpTemplates.discriminator = undefined;
GetSmtpTemplates.attributeTypeMap = [
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    },
    {
        "name": "templates",
        "baseName": "templates",
        "type": "Array<GetSmtpTemplateOverview>"
    }
]; //# sourceMappingURL=getSmtpTemplates.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSsoToken.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSsoToken = void 0;
class GetSsoToken {
    static getAttributeTypeMap() {
        return GetSsoToken.attributeTypeMap;
    }
}
exports.GetSsoToken = GetSsoToken;
GetSsoToken.discriminator = undefined;
GetSsoToken.attributeTypeMap = [
    {
        "name": "token",
        "baseName": "token",
        "type": "string"
    }
]; //# sourceMappingURL=getSsoToken.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getStatsByDevice.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetStatsByDevice = void 0;
class GetStatsByDevice {
    static getAttributeTypeMap() {
        return GetStatsByDevice.attributeTypeMap;
    }
}
exports.GetStatsByDevice = GetStatsByDevice;
GetStatsByDevice.discriminator = undefined;
GetStatsByDevice.attributeTypeMap = [
    {
        "name": "desktop",
        "baseName": "desktop",
        "type": "{ [key: string]: GetDeviceBrowserStats; }"
    },
    {
        "name": "mobile",
        "baseName": "mobile",
        "type": "{ [key: string]: GetDeviceBrowserStats; }"
    },
    {
        "name": "tablet",
        "baseName": "tablet",
        "type": "{ [key: string]: GetDeviceBrowserStats; }"
    },
    {
        "name": "unknown",
        "baseName": "unknown",
        "type": "{ [key: string]: GetDeviceBrowserStats; }"
    }
]; //# sourceMappingURL=getStatsByDevice.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getSubAccountGroups200ResponseInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetSubAccountGroups200ResponseInner = void 0;
class GetSubAccountGroups200ResponseInner {
    static getAttributeTypeMap() {
        return GetSubAccountGroups200ResponseInner.attributeTypeMap;
    }
}
exports.GetSubAccountGroups200ResponseInner = GetSubAccountGroups200ResponseInner;
GetSubAccountGroups200ResponseInner.discriminator = undefined;
GetSubAccountGroups200ResponseInner.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "groupName",
        "baseName": "groupName",
        "type": "string"
    }
]; //# sourceMappingURL=getSubAccountGroups200ResponseInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getTransacAggregatedSmsReport.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetTransacAggregatedSmsReport = void 0;
class GetTransacAggregatedSmsReport {
    static getAttributeTypeMap() {
        return GetTransacAggregatedSmsReport.attributeTypeMap;
    }
}
exports.GetTransacAggregatedSmsReport = GetTransacAggregatedSmsReport;
GetTransacAggregatedSmsReport.discriminator = undefined;
GetTransacAggregatedSmsReport.attributeTypeMap = [
    {
        "name": "range",
        "baseName": "range",
        "type": "string"
    },
    {
        "name": "requests",
        "baseName": "requests",
        "type": "number"
    },
    {
        "name": "delivered",
        "baseName": "delivered",
        "type": "number"
    },
    {
        "name": "hardBounces",
        "baseName": "hardBounces",
        "type": "number"
    },
    {
        "name": "softBounces",
        "baseName": "softBounces",
        "type": "number"
    },
    {
        "name": "blocked",
        "baseName": "blocked",
        "type": "number"
    },
    {
        "name": "unsubscribed",
        "baseName": "unsubscribed",
        "type": "number"
    },
    {
        "name": "replied",
        "baseName": "replied",
        "type": "number"
    },
    {
        "name": "accepted",
        "baseName": "accepted",
        "type": "number"
    },
    {
        "name": "rejected",
        "baseName": "rejected",
        "type": "number"
    },
    {
        "name": "skipped",
        "baseName": "skipped",
        "type": "number"
    }
]; //# sourceMappingURL=getTransacAggregatedSmsReport.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getTransacBlockedContacts.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetTransacBlockedContacts = void 0;
class GetTransacBlockedContacts {
    static getAttributeTypeMap() {
        return GetTransacBlockedContacts.attributeTypeMap;
    }
}
exports.GetTransacBlockedContacts = GetTransacBlockedContacts;
GetTransacBlockedContacts.discriminator = undefined;
GetTransacBlockedContacts.attributeTypeMap = [
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    },
    {
        "name": "contacts",
        "baseName": "contacts",
        "type": "Array<GetTransacBlockedContactsContactsInner>"
    }
]; //# sourceMappingURL=getTransacBlockedContacts.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getTransacBlockedContactsContactsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetTransacBlockedContactsContactsInner = void 0;
class GetTransacBlockedContactsContactsInner {
    static getAttributeTypeMap() {
        return GetTransacBlockedContactsContactsInner.attributeTypeMap;
    }
}
exports.GetTransacBlockedContactsContactsInner = GetTransacBlockedContactsContactsInner;
GetTransacBlockedContactsContactsInner.discriminator = undefined;
GetTransacBlockedContactsContactsInner.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "senderEmail",
        "baseName": "senderEmail",
        "type": "string"
    },
    {
        "name": "reason",
        "baseName": "reason",
        "type": "GetTransacBlockedContactsContactsInnerReason"
    },
    {
        "name": "blockedAt",
        "baseName": "blockedAt",
        "type": "string"
    }
]; //# sourceMappingURL=getTransacBlockedContactsContactsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getTransacBlockedContactsContactsInnerReason.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetTransacBlockedContactsContactsInnerReason = void 0;
class GetTransacBlockedContactsContactsInnerReason {
    static getAttributeTypeMap() {
        return GetTransacBlockedContactsContactsInnerReason.attributeTypeMap;
    }
}
exports.GetTransacBlockedContactsContactsInnerReason = GetTransacBlockedContactsContactsInnerReason;
GetTransacBlockedContactsContactsInnerReason.discriminator = undefined;
GetTransacBlockedContactsContactsInnerReason.attributeTypeMap = [
    {
        "name": "code",
        "baseName": "code",
        "type": "GetTransacBlockedContactsContactsInnerReason.CodeEnum"
    },
    {
        "name": "message",
        "baseName": "message",
        "type": "string"
    }
];
(function(GetTransacBlockedContactsContactsInnerReason) {
    let CodeEnum;
    (function(CodeEnum) {
        CodeEnum[CodeEnum["UnsubscribedViaMa"] = 'unsubscribedViaMA'] = "UnsubscribedViaMa";
        CodeEnum[CodeEnum["UnsubscribedViaEmail"] = 'unsubscribedViaEmail'] = "UnsubscribedViaEmail";
        CodeEnum[CodeEnum["AdminBlocked"] = 'adminBlocked'] = "AdminBlocked";
        CodeEnum[CodeEnum["UnsubscribedViaApi"] = 'unsubscribedViaApi'] = "UnsubscribedViaApi";
        CodeEnum[CodeEnum["HardBounce"] = 'hardBounce'] = "HardBounce";
        CodeEnum[CodeEnum["ContactFlaggedAsSpam"] = 'contactFlaggedAsSpam'] = "ContactFlaggedAsSpam";
    })(CodeEnum = GetTransacBlockedContactsContactsInnerReason.CodeEnum || (GetTransacBlockedContactsContactsInnerReason.CodeEnum = {}));
})(GetTransacBlockedContactsContactsInnerReason = exports.GetTransacBlockedContactsContactsInnerReason || (exports.GetTransacBlockedContactsContactsInnerReason = {})); //# sourceMappingURL=getTransacBlockedContactsContactsInnerReason.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getTransacEmailContent.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetTransacEmailContent = void 0;
class GetTransacEmailContent {
    static getAttributeTypeMap() {
        return GetTransacEmailContent.attributeTypeMap;
    }
}
exports.GetTransacEmailContent = GetTransacEmailContent;
GetTransacEmailContent.discriminator = undefined;
GetTransacEmailContent.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "subject",
        "baseName": "subject",
        "type": "string"
    },
    {
        "name": "templateId",
        "baseName": "templateId",
        "type": "number"
    },
    {
        "name": "date",
        "baseName": "date",
        "type": "string"
    },
    {
        "name": "events",
        "baseName": "events",
        "type": "Array<GetTransacEmailContentEventsInner>"
    },
    {
        "name": "body",
        "baseName": "body",
        "type": "string"
    },
    {
        "name": "attachmentCount",
        "baseName": "attachmentCount",
        "type": "number"
    }
]; //# sourceMappingURL=getTransacEmailContent.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getTransacEmailContentEventsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetTransacEmailContentEventsInner = void 0;
class GetTransacEmailContentEventsInner {
    static getAttributeTypeMap() {
        return GetTransacEmailContentEventsInner.attributeTypeMap;
    }
}
exports.GetTransacEmailContentEventsInner = GetTransacEmailContentEventsInner;
GetTransacEmailContentEventsInner.discriminator = undefined;
GetTransacEmailContentEventsInner.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "time",
        "baseName": "time",
        "type": "string"
    }
]; //# sourceMappingURL=getTransacEmailContentEventsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getTransacEmailsList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetTransacEmailsList = void 0;
class GetTransacEmailsList {
    static getAttributeTypeMap() {
        return GetTransacEmailsList.attributeTypeMap;
    }
}
exports.GetTransacEmailsList = GetTransacEmailsList;
GetTransacEmailsList.discriminator = undefined;
GetTransacEmailsList.attributeTypeMap = [
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    },
    {
        "name": "transactionalEmails",
        "baseName": "transactionalEmails",
        "type": "Array<GetTransacEmailsListTransactionalEmailsInner>"
    }
]; //# sourceMappingURL=getTransacEmailsList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getTransacEmailsListTransactionalEmailsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetTransacEmailsListTransactionalEmailsInner = void 0;
class GetTransacEmailsListTransactionalEmailsInner {
    static getAttributeTypeMap() {
        return GetTransacEmailsListTransactionalEmailsInner.attributeTypeMap;
    }
}
exports.GetTransacEmailsListTransactionalEmailsInner = GetTransacEmailsListTransactionalEmailsInner;
GetTransacEmailsListTransactionalEmailsInner.discriminator = undefined;
GetTransacEmailsListTransactionalEmailsInner.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "subject",
        "baseName": "subject",
        "type": "string"
    },
    {
        "name": "templateId",
        "baseName": "templateId",
        "type": "number"
    },
    {
        "name": "messageId",
        "baseName": "messageId",
        "type": "string"
    },
    {
        "name": "uuid",
        "baseName": "uuid",
        "type": "string"
    },
    {
        "name": "date",
        "baseName": "date",
        "type": "string"
    },
    {
        "name": "from",
        "baseName": "from",
        "type": "string"
    },
    {
        "name": "tags",
        "baseName": "tags",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=getTransacEmailsListTransactionalEmailsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getTransacSmsReport.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetTransacSmsReport = void 0;
class GetTransacSmsReport {
    static getAttributeTypeMap() {
        return GetTransacSmsReport.attributeTypeMap;
    }
}
exports.GetTransacSmsReport = GetTransacSmsReport;
GetTransacSmsReport.discriminator = undefined;
GetTransacSmsReport.attributeTypeMap = [
    {
        "name": "reports",
        "baseName": "reports",
        "type": "Array<GetTransacSmsReportReportsInner>"
    }
]; //# sourceMappingURL=getTransacSmsReport.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getTransacSmsReportReportsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetTransacSmsReportReportsInner = void 0;
class GetTransacSmsReportReportsInner {
    static getAttributeTypeMap() {
        return GetTransacSmsReportReportsInner.attributeTypeMap;
    }
}
exports.GetTransacSmsReportReportsInner = GetTransacSmsReportReportsInner;
GetTransacSmsReportReportsInner.discriminator = undefined;
GetTransacSmsReportReportsInner.attributeTypeMap = [
    {
        "name": "date",
        "baseName": "date",
        "type": "string"
    },
    {
        "name": "requests",
        "baseName": "requests",
        "type": "number"
    },
    {
        "name": "delivered",
        "baseName": "delivered",
        "type": "number"
    },
    {
        "name": "hardBounces",
        "baseName": "hardBounces",
        "type": "number"
    },
    {
        "name": "softBounces",
        "baseName": "softBounces",
        "type": "number"
    },
    {
        "name": "blocked",
        "baseName": "blocked",
        "type": "number"
    },
    {
        "name": "unsubscribed",
        "baseName": "unsubscribed",
        "type": "number"
    },
    {
        "name": "replied",
        "baseName": "replied",
        "type": "number"
    },
    {
        "name": "accepted",
        "baseName": "accepted",
        "type": "number"
    },
    {
        "name": "rejected",
        "baseName": "rejected",
        "type": "number"
    },
    {
        "name": "skipped",
        "baseName": "skipped",
        "type": "number"
    }
]; //# sourceMappingURL=getTransacSmsReportReportsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getUserPermission.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetUserPermission = void 0;
class GetUserPermission {
    static getAttributeTypeMap() {
        return GetUserPermission.attributeTypeMap;
    }
}
exports.GetUserPermission = GetUserPermission;
GetUserPermission.discriminator = undefined;
GetUserPermission.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "string"
    },
    {
        "name": "privileges",
        "baseName": "privileges",
        "type": "Array<GetUserPermissionPrivilegesInner>"
    }
]; //# sourceMappingURL=getUserPermission.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getUserPermissionPrivilegesInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetUserPermissionPrivilegesInner = void 0;
class GetUserPermissionPrivilegesInner {
    static getAttributeTypeMap() {
        return GetUserPermissionPrivilegesInner.attributeTypeMap;
    }
}
exports.GetUserPermissionPrivilegesInner = GetUserPermissionPrivilegesInner;
GetUserPermissionPrivilegesInner.discriminator = undefined;
GetUserPermissionPrivilegesInner.attributeTypeMap = [
    {
        "name": "feature",
        "baseName": "feature",
        "type": "string"
    },
    {
        "name": "permissions",
        "baseName": "permissions",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=getUserPermissionPrivilegesInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getWATemplates.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetWATemplates = void 0;
class GetWATemplates {
    static getAttributeTypeMap() {
        return GetWATemplates.attributeTypeMap;
    }
}
exports.GetWATemplates = GetWATemplates;
GetWATemplates.discriminator = undefined;
GetWATemplates.attributeTypeMap = [
    {
        "name": "templates",
        "baseName": "templates",
        "type": "Array<GetWATemplatesTemplatesInner>"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    }
]; //# sourceMappingURL=getWATemplates.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getWATemplatesTemplatesInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetWATemplatesTemplatesInner = void 0;
class GetWATemplatesTemplatesInner {
    static getAttributeTypeMap() {
        return GetWATemplatesTemplatesInner.attributeTypeMap;
    }
}
exports.GetWATemplatesTemplatesInner = GetWATemplatesTemplatesInner;
GetWATemplatesTemplatesInner.discriminator = undefined;
GetWATemplatesTemplatesInner.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "string"
    },
    {
        "name": "language",
        "baseName": "language",
        "type": "string"
    },
    {
        "name": "category",
        "baseName": "category",
        "type": "string"
    },
    {
        "name": "errorReason",
        "baseName": "errorReason",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "string"
    }
]; //# sourceMappingURL=getWATemplatesTemplatesInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getWebhook.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetWebhook = void 0;
class GetWebhook {
    static getAttributeTypeMap() {
        return GetWebhook.attributeTypeMap;
    }
}
exports.GetWebhook = GetWebhook;
GetWebhook.discriminator = undefined;
GetWebhook.attributeTypeMap = [
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "description",
        "baseName": "description",
        "type": "string"
    },
    {
        "name": "events",
        "baseName": "events",
        "type": "Array<string>"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "GetWebhook.TypeEnum"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "string"
    },
    {
        "name": "batched",
        "baseName": "batched",
        "type": "boolean"
    },
    {
        "name": "auth",
        "baseName": "auth",
        "type": "GetWebhookAuth"
    },
    {
        "name": "headers",
        "baseName": "headers",
        "type": "Array<GetWebhookHeadersInner>"
    }
];
(function(GetWebhook) {
    let TypeEnum;
    (function(TypeEnum) {
        TypeEnum[TypeEnum["Marketing"] = 'marketing'] = "Marketing";
        TypeEnum[TypeEnum["Transactional"] = 'transactional'] = "Transactional";
    })(TypeEnum = GetWebhook.TypeEnum || (GetWebhook.TypeEnum = {}));
})(GetWebhook = exports.GetWebhook || (exports.GetWebhook = {})); //# sourceMappingURL=getWebhook.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getWebhookAuth.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetWebhookAuth = void 0;
class GetWebhookAuth {
    static getAttributeTypeMap() {
        return GetWebhookAuth.attributeTypeMap;
    }
}
exports.GetWebhookAuth = GetWebhookAuth;
GetWebhookAuth.discriminator = undefined;
GetWebhookAuth.attributeTypeMap = [
    {
        "name": "type",
        "baseName": "type",
        "type": "string"
    },
    {
        "name": "token",
        "baseName": "token",
        "type": "string"
    }
]; //# sourceMappingURL=getWebhookAuth.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getWebhookHeadersInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetWebhookHeadersInner = void 0;
class GetWebhookHeadersInner {
    static getAttributeTypeMap() {
        return GetWebhookHeadersInner.attributeTypeMap;
    }
}
exports.GetWebhookHeadersInner = GetWebhookHeadersInner;
GetWebhookHeadersInner.discriminator = undefined;
GetWebhookHeadersInner.attributeTypeMap = [
    {
        "name": "key",
        "baseName": "key",
        "type": "string"
    },
    {
        "name": "value",
        "baseName": "value",
        "type": "string"
    }
]; //# sourceMappingURL=getWebhookHeadersInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getWebhooks.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetWebhooks = void 0;
class GetWebhooks {
    static getAttributeTypeMap() {
        return GetWebhooks.attributeTypeMap;
    }
}
exports.GetWebhooks = GetWebhooks;
GetWebhooks.discriminator = undefined;
GetWebhooks.attributeTypeMap = [
    {
        "name": "webhooks",
        "baseName": "webhooks",
        "type": "Array<GetWebhook>"
    }
]; //# sourceMappingURL=getWebhooks.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsAppConfig.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetWhatsAppConfig = void 0;
class GetWhatsAppConfig {
    static getAttributeTypeMap() {
        return GetWhatsAppConfig.attributeTypeMap;
    }
}
exports.GetWhatsAppConfig = GetWhatsAppConfig;
GetWhatsAppConfig.discriminator = undefined;
GetWhatsAppConfig.attributeTypeMap = [
    {
        "name": "whatsappBusinessAccountId",
        "baseName": "whatsappBusinessAccountId",
        "type": "string"
    },
    {
        "name": "sendingLimit",
        "baseName": "sendingLimit",
        "type": "string"
    },
    {
        "name": "phoneNumberQuality",
        "baseName": "phoneNumberQuality",
        "type": "GetWhatsAppConfig.PhoneNumberQualityEnum"
    },
    {
        "name": "whatsappBusinessAccountStatus",
        "baseName": "whatsappBusinessAccountStatus",
        "type": "string"
    },
    {
        "name": "businessStatus",
        "baseName": "businessStatus",
        "type": "string"
    },
    {
        "name": "phoneNumberNameStatus",
        "baseName": "phoneNumberNameStatus",
        "type": "GetWhatsAppConfig.PhoneNumberNameStatusEnum"
    }
];
(function(GetWhatsAppConfig) {
    let PhoneNumberQualityEnum;
    (function(PhoneNumberQualityEnum) {
        PhoneNumberQualityEnum[PhoneNumberQualityEnum["Green"] = 'GREEN'] = "Green";
        PhoneNumberQualityEnum[PhoneNumberQualityEnum["Yellow"] = 'YELLOW'] = "Yellow";
        PhoneNumberQualityEnum[PhoneNumberQualityEnum["Red"] = 'RED'] = "Red";
    })(PhoneNumberQualityEnum = GetWhatsAppConfig.PhoneNumberQualityEnum || (GetWhatsAppConfig.PhoneNumberQualityEnum = {}));
    let PhoneNumberNameStatusEnum;
    (function(PhoneNumberNameStatusEnum) {
        PhoneNumberNameStatusEnum[PhoneNumberNameStatusEnum["Approved"] = 'APPROVED'] = "Approved";
        PhoneNumberNameStatusEnum[PhoneNumberNameStatusEnum["Pending"] = 'PENDING'] = "Pending";
        PhoneNumberNameStatusEnum[PhoneNumberNameStatusEnum["Rejected"] = 'REJECTED'] = "Rejected";
    })(PhoneNumberNameStatusEnum = GetWhatsAppConfig.PhoneNumberNameStatusEnum || (GetWhatsAppConfig.PhoneNumberNameStatusEnum = {}));
})(GetWhatsAppConfig = exports.GetWhatsAppConfig || (exports.GetWhatsAppConfig = {})); //# sourceMappingURL=getWhatsAppConfig.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsappCampaignOverview.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetWhatsappCampaignOverview = void 0;
class GetWhatsappCampaignOverview {
    static getAttributeTypeMap() {
        return GetWhatsappCampaignOverview.attributeTypeMap;
    }
}
exports.GetWhatsappCampaignOverview = GetWhatsappCampaignOverview;
GetWhatsappCampaignOverview.discriminator = undefined;
GetWhatsappCampaignOverview.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "campaignName",
        "baseName": "campaignName",
        "type": "string"
    },
    {
        "name": "campaignStatus",
        "baseName": "campaignStatus",
        "type": "GetWhatsappCampaignOverview.CampaignStatusEnum"
    },
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "string"
    },
    {
        "name": "senderNumber",
        "baseName": "senderNumber",
        "type": "string"
    },
    {
        "name": "stats",
        "baseName": "stats",
        "type": "WhatsappCampStats"
    },
    {
        "name": "template",
        "baseName": "template",
        "type": "WhatsappCampTemplate"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "string"
    }
];
(function(GetWhatsappCampaignOverview) {
    let CampaignStatusEnum;
    (function(CampaignStatusEnum) {
        CampaignStatusEnum[CampaignStatusEnum["Draft"] = 'draft'] = "Draft";
        CampaignStatusEnum[CampaignStatusEnum["Scheduled"] = 'scheduled'] = "Scheduled";
        CampaignStatusEnum[CampaignStatusEnum["Pending"] = 'pending'] = "Pending";
        CampaignStatusEnum[CampaignStatusEnum["Approved"] = 'approved'] = "Approved";
        CampaignStatusEnum[CampaignStatusEnum["Running"] = 'running'] = "Running";
        CampaignStatusEnum[CampaignStatusEnum["Suspended"] = 'suspended'] = "Suspended";
        CampaignStatusEnum[CampaignStatusEnum["Rejected"] = 'rejected'] = "Rejected";
        CampaignStatusEnum[CampaignStatusEnum["Sent"] = 'sent'] = "Sent";
    })(CampaignStatusEnum = GetWhatsappCampaignOverview.CampaignStatusEnum || (GetWhatsappCampaignOverview.CampaignStatusEnum = {}));
})(GetWhatsappCampaignOverview = exports.GetWhatsappCampaignOverview || (exports.GetWhatsappCampaignOverview = {})); //# sourceMappingURL=getWhatsappCampaignOverview.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsappCampaigns.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetWhatsappCampaigns = void 0;
class GetWhatsappCampaigns {
    static getAttributeTypeMap() {
        return GetWhatsappCampaigns.attributeTypeMap;
    }
}
exports.GetWhatsappCampaigns = GetWhatsappCampaigns;
GetWhatsappCampaigns.discriminator = undefined;
GetWhatsappCampaigns.attributeTypeMap = [
    {
        "name": "campaigns",
        "baseName": "campaigns",
        "type": "Array<GetWhatsappCampaignsCampaignsInner>"
    },
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    }
]; //# sourceMappingURL=getWhatsappCampaigns.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsappCampaignsCampaignsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetWhatsappCampaignsCampaignsInner = void 0;
class GetWhatsappCampaignsCampaignsInner {
    static getAttributeTypeMap() {
        return GetWhatsappCampaignsCampaignsInner.attributeTypeMap;
    }
}
exports.GetWhatsappCampaignsCampaignsInner = GetWhatsappCampaignsCampaignsInner;
GetWhatsappCampaignsCampaignsInner.discriminator = undefined;
GetWhatsappCampaignsCampaignsInner.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "campaignName",
        "baseName": "campaignName",
        "type": "string"
    },
    {
        "name": "templateId",
        "baseName": "templateId",
        "type": "string"
    },
    {
        "name": "campaignStatus",
        "baseName": "campaignStatus",
        "type": "GetWhatsappCampaignsCampaignsInner.CampaignStatusEnum"
    },
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "string"
    },
    {
        "name": "errorReason",
        "baseName": "errorReason",
        "type": "string"
    },
    {
        "name": "invalidatedContacts",
        "baseName": "invalidatedContacts",
        "type": "number"
    },
    {
        "name": "readPercentage",
        "baseName": "readPercentage",
        "type": "number"
    },
    {
        "name": "stats",
        "baseName": "stats",
        "type": "WhatsappCampStats"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "modifiedAt",
        "baseName": "modifiedAt",
        "type": "string"
    }
];
(function(GetWhatsappCampaignsCampaignsInner) {
    let CampaignStatusEnum;
    (function(CampaignStatusEnum) {
        CampaignStatusEnum[CampaignStatusEnum["Draft"] = 'draft'] = "Draft";
        CampaignStatusEnum[CampaignStatusEnum["Scheduled"] = 'scheduled'] = "Scheduled";
        CampaignStatusEnum[CampaignStatusEnum["Pending"] = 'pending'] = "Pending";
        CampaignStatusEnum[CampaignStatusEnum["Approved"] = 'approved'] = "Approved";
        CampaignStatusEnum[CampaignStatusEnum["Running"] = 'running'] = "Running";
        CampaignStatusEnum[CampaignStatusEnum["Suspended"] = 'suspended'] = "Suspended";
        CampaignStatusEnum[CampaignStatusEnum["Rejected"] = 'rejected'] = "Rejected";
        CampaignStatusEnum[CampaignStatusEnum["Sent"] = 'sent'] = "Sent";
    })(CampaignStatusEnum = GetWhatsappCampaignsCampaignsInner.CampaignStatusEnum || (GetWhatsappCampaignsCampaignsInner.CampaignStatusEnum = {}));
})(GetWhatsappCampaignsCampaignsInner = exports.GetWhatsappCampaignsCampaignsInner || (exports.GetWhatsappCampaignsCampaignsInner = {})); //# sourceMappingURL=getWhatsappCampaignsCampaignsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsappEventReport.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetWhatsappEventReport = void 0;
class GetWhatsappEventReport {
    static getAttributeTypeMap() {
        return GetWhatsappEventReport.attributeTypeMap;
    }
}
exports.GetWhatsappEventReport = GetWhatsappEventReport;
GetWhatsappEventReport.discriminator = undefined;
GetWhatsappEventReport.attributeTypeMap = [
    {
        "name": "events",
        "baseName": "events",
        "type": "Array<GetWhatsappEventReportEventsInner>"
    }
]; //# sourceMappingURL=getWhatsappEventReport.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsappEventReportEventsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetWhatsappEventReportEventsInner = void 0;
class GetWhatsappEventReportEventsInner {
    static getAttributeTypeMap() {
        return GetWhatsappEventReportEventsInner.attributeTypeMap;
    }
}
exports.GetWhatsappEventReportEventsInner = GetWhatsappEventReportEventsInner;
GetWhatsappEventReportEventsInner.discriminator = undefined;
GetWhatsappEventReportEventsInner.attributeTypeMap = [
    {
        "name": "contactNumber",
        "baseName": "contactNumber",
        "type": "string"
    },
    {
        "name": "date",
        "baseName": "date",
        "type": "string"
    },
    {
        "name": "messageId",
        "baseName": "messageId",
        "type": "string"
    },
    {
        "name": "event",
        "baseName": "event",
        "type": "GetWhatsappEventReportEventsInner.EventEnum"
    },
    {
        "name": "reason",
        "baseName": "reason",
        "type": "string"
    },
    {
        "name": "body",
        "baseName": "body",
        "type": "string"
    },
    {
        "name": "mediaUrl",
        "baseName": "mediaUrl",
        "type": "string"
    },
    {
        "name": "senderNumber",
        "baseName": "senderNumber",
        "type": "string"
    }
];
(function(GetWhatsappEventReportEventsInner) {
    let EventEnum;
    (function(EventEnum) {
        EventEnum[EventEnum["Sent"] = 'sent'] = "Sent";
        EventEnum[EventEnum["Delivered"] = 'delivered'] = "Delivered";
        EventEnum[EventEnum["Read"] = 'read'] = "Read";
        EventEnum[EventEnum["Error"] = 'error'] = "Error";
        EventEnum[EventEnum["Unsubscribe"] = 'unsubscribe'] = "Unsubscribe";
        EventEnum[EventEnum["Reply"] = 'reply'] = "Reply";
        EventEnum[EventEnum["SoftBounce"] = 'soft-bounce'] = "SoftBounce";
    })(EventEnum = GetWhatsappEventReportEventsInner.EventEnum || (GetWhatsappEventReportEventsInner.EventEnum = {}));
})(GetWhatsappEventReportEventsInner = exports.GetWhatsappEventReportEventsInner || (exports.GetWhatsappEventReportEventsInner = {})); //# sourceMappingURL=getWhatsappEventReportEventsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/inviteAdminUser.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.InviteAdminUser = void 0;
class InviteAdminUser {
    static getAttributeTypeMap() {
        return InviteAdminUser.attributeTypeMap;
    }
}
exports.InviteAdminUser = InviteAdminUser;
InviteAdminUser.discriminator = undefined;
InviteAdminUser.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "allFeaturesAccess",
        "baseName": "all_features_access",
        "type": "boolean"
    },
    {
        "name": "groupIds",
        "baseName": "groupIds",
        "type": "Array<string>"
    },
    {
        "name": "privileges",
        "baseName": "privileges",
        "type": "Array<InviteAdminUserPrivilegesInner>"
    }
]; //# sourceMappingURL=inviteAdminUser.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/inviteAdminUserPrivilegesInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.InviteAdminUserPrivilegesInner = void 0;
class InviteAdminUserPrivilegesInner {
    static getAttributeTypeMap() {
        return InviteAdminUserPrivilegesInner.attributeTypeMap;
    }
}
exports.InviteAdminUserPrivilegesInner = InviteAdminUserPrivilegesInner;
InviteAdminUserPrivilegesInner.discriminator = undefined;
InviteAdminUserPrivilegesInner.attributeTypeMap = [
    {
        "name": "feature",
        "baseName": "feature",
        "type": "InviteAdminUserPrivilegesInner.FeatureEnum"
    },
    {
        "name": "permissions",
        "baseName": "permissions",
        "type": "Array<InviteAdminUserPrivilegesInner.PermissionsEnum>"
    }
];
(function(InviteAdminUserPrivilegesInner) {
    let FeatureEnum;
    (function(FeatureEnum) {
        FeatureEnum[FeatureEnum["MyPlan"] = 'my_plan'] = "MyPlan";
        FeatureEnum[FeatureEnum["Api"] = 'api'] = "Api";
        FeatureEnum[FeatureEnum["UserManagement"] = 'user_management'] = "UserManagement";
        FeatureEnum[FeatureEnum["AppManagement"] = 'app_management'] = "AppManagement";
    })(FeatureEnum = InviteAdminUserPrivilegesInner.FeatureEnum || (InviteAdminUserPrivilegesInner.FeatureEnum = {}));
    let PermissionsEnum;
    (function(PermissionsEnum) {
        PermissionsEnum[PermissionsEnum["All"] = 'all'] = "All";
        PermissionsEnum[PermissionsEnum["None"] = 'none'] = "None";
    })(PermissionsEnum = InviteAdminUserPrivilegesInner.PermissionsEnum || (InviteAdminUserPrivilegesInner.PermissionsEnum = {}));
})(InviteAdminUserPrivilegesInner = exports.InviteAdminUserPrivilegesInner || (exports.InviteAdminUserPrivilegesInner = {})); //# sourceMappingURL=inviteAdminUserPrivilegesInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/inviteuser.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Inviteuser = void 0;
class Inviteuser {
    static getAttributeTypeMap() {
        return Inviteuser.attributeTypeMap;
    }
}
exports.Inviteuser = Inviteuser;
Inviteuser.discriminator = undefined;
Inviteuser.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "allFeaturesAccess",
        "baseName": "all_features_access",
        "type": "boolean"
    },
    {
        "name": "privileges",
        "baseName": "privileges",
        "type": "Array<InviteuserPrivilegesInner>"
    }
]; //# sourceMappingURL=inviteuser.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/inviteuserPrivilegesInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.InviteuserPrivilegesInner = void 0;
class InviteuserPrivilegesInner {
    static getAttributeTypeMap() {
        return InviteuserPrivilegesInner.attributeTypeMap;
    }
}
exports.InviteuserPrivilegesInner = InviteuserPrivilegesInner;
InviteuserPrivilegesInner.discriminator = undefined;
InviteuserPrivilegesInner.attributeTypeMap = [
    {
        "name": "feature",
        "baseName": "feature",
        "type": "InviteuserPrivilegesInner.FeatureEnum"
    },
    {
        "name": "permissions",
        "baseName": "permissions",
        "type": "Array<InviteuserPrivilegesInner.PermissionsEnum>"
    }
];
(function(InviteuserPrivilegesInner) {
    let FeatureEnum;
    (function(FeatureEnum) {
        FeatureEnum[FeatureEnum["EmailCampaigns"] = 'email_campaigns'] = "EmailCampaigns";
        FeatureEnum[FeatureEnum["SmsCampaigns"] = 'sms_campaigns'] = "SmsCampaigns";
        FeatureEnum[FeatureEnum["Contacts"] = 'contacts'] = "Contacts";
        FeatureEnum[FeatureEnum["Templates"] = 'templates'] = "Templates";
        FeatureEnum[FeatureEnum["Workflows"] = 'workflows'] = "Workflows";
        FeatureEnum[FeatureEnum["FacebookAds"] = 'facebook_ads'] = "FacebookAds";
        FeatureEnum[FeatureEnum["LandingPages"] = 'landing_pages'] = "LandingPages";
        FeatureEnum[FeatureEnum["TransactionalEmails"] = 'transactional_emails'] = "TransactionalEmails";
        FeatureEnum[FeatureEnum["SmtpApi"] = 'smtp_api'] = "SmtpApi";
        FeatureEnum[FeatureEnum["UserManagement"] = 'user_management'] = "UserManagement";
        FeatureEnum[FeatureEnum["SalesPlatform"] = 'sales_platform'] = "SalesPlatform";
        FeatureEnum[FeatureEnum["Phone"] = 'phone'] = "Phone";
        FeatureEnum[FeatureEnum["Conversations"] = 'conversations'] = "Conversations";
        FeatureEnum[FeatureEnum["SendersDomainsDedicatedIps"] = 'senders_domains_dedicated_ips'] = "SendersDomainsDedicatedIps";
        FeatureEnum[FeatureEnum["PushNotifications"] = 'push_notifications'] = "PushNotifications";
    })(FeatureEnum = InviteuserPrivilegesInner.FeatureEnum || (InviteuserPrivilegesInner.FeatureEnum = {}));
    let PermissionsEnum;
    (function(PermissionsEnum) {
        PermissionsEnum[PermissionsEnum["CreateEditDelete"] = 'create_edit_delete'] = "CreateEditDelete";
        PermissionsEnum[PermissionsEnum["SendScheduleSuspend"] = 'send_schedule_suspend'] = "SendScheduleSuspend";
        PermissionsEnum[PermissionsEnum["View"] = 'view'] = "View";
        PermissionsEnum[PermissionsEnum["Import"] = 'import'] = "Import";
        PermissionsEnum[PermissionsEnum["Export"] = 'export'] = "Export";
        PermissionsEnum[PermissionsEnum["ListAndAttributes"] = 'list_and_attributes'] = "ListAndAttributes";
        PermissionsEnum[PermissionsEnum["Forms"] = 'forms'] = "Forms";
        PermissionsEnum[PermissionsEnum["ActivateDeactivate"] = 'activate_deactivate'] = "ActivateDeactivate";
        PermissionsEnum[PermissionsEnum["ActivateDeactivatePause"] = 'activate_deactivate_pause'] = "ActivateDeactivatePause";
        PermissionsEnum[PermissionsEnum["Settings"] = 'settings'] = "Settings";
        PermissionsEnum[PermissionsEnum["SchedulePause"] = 'schedule_pause'] = "SchedulePause";
        PermissionsEnum[PermissionsEnum["All"] = 'all'] = "All";
        PermissionsEnum[PermissionsEnum["Logs"] = 'logs'] = "Logs";
        PermissionsEnum[PermissionsEnum["Access"] = 'access'] = "Access";
        PermissionsEnum[PermissionsEnum["Assign"] = 'assign'] = "Assign";
        PermissionsEnum[PermissionsEnum["Configure"] = 'configure'] = "Configure";
        PermissionsEnum[PermissionsEnum["ManageOwnedDealsTasksCompanies"] = 'manage_owned_deals_tasks_companies'] = "ManageOwnedDealsTasksCompanies";
        PermissionsEnum[PermissionsEnum["ManageOthersDealsTasksCompanies"] = 'manage_others_deals_tasks_companies'] = "ManageOthersDealsTasksCompanies";
        PermissionsEnum[PermissionsEnum["Reports"] = 'reports'] = "Reports";
        PermissionsEnum[PermissionsEnum["SendersManagement"] = 'senders_management'] = "SendersManagement";
        PermissionsEnum[PermissionsEnum["DomainsManagement"] = 'domains_management'] = "DomainsManagement";
        PermissionsEnum[PermissionsEnum["DedicatedIpsManagement"] = 'dedicated_ips_management'] = "DedicatedIpsManagement";
        PermissionsEnum[PermissionsEnum["Send"] = 'send'] = "Send";
        PermissionsEnum[PermissionsEnum["Smtp"] = 'smtp'] = "Smtp";
        PermissionsEnum[PermissionsEnum["ApiKeys"] = 'api_keys'] = "ApiKeys";
        PermissionsEnum[PermissionsEnum["AuthorizedIps"] = 'authorized_ips'] = "AuthorizedIps";
        PermissionsEnum[PermissionsEnum["None"] = 'none'] = "None";
    })(PermissionsEnum = InviteuserPrivilegesInner.PermissionsEnum || (InviteuserPrivilegesInner.PermissionsEnum = {}));
})(InviteuserPrivilegesInner = exports.InviteuserPrivilegesInner || (exports.InviteuserPrivilegesInner = {})); //# sourceMappingURL=inviteuserPrivilegesInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/manageIp.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ManageIp = void 0;
class ManageIp {
    static getAttributeTypeMap() {
        return ManageIp.attributeTypeMap;
    }
}
exports.ManageIp = ManageIp;
ManageIp.discriminator = undefined;
ManageIp.attributeTypeMap = [
    {
        "name": "ip",
        "baseName": "ip",
        "type": "string"
    }
]; //# sourceMappingURL=manageIp.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponse.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MasterDetailsResponse = void 0;
class MasterDetailsResponse {
    static getAttributeTypeMap() {
        return MasterDetailsResponse.attributeTypeMap;
    }
}
exports.MasterDetailsResponse = MasterDetailsResponse;
MasterDetailsResponse.discriminator = undefined;
MasterDetailsResponse.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "companyName",
        "baseName": "companyName",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "currencyCode",
        "baseName": "currencyCode",
        "type": "string"
    },
    {
        "name": "timezone",
        "baseName": "timezone",
        "type": "string"
    },
    {
        "name": "billingInfo",
        "baseName": "billingInfo",
        "type": "MasterDetailsResponseBillingInfo"
    },
    {
        "name": "planInfo",
        "baseName": "planInfo",
        "type": "MasterDetailsResponsePlanInfo"
    }
]; //# sourceMappingURL=masterDetailsResponse.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponseBillingInfo.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MasterDetailsResponseBillingInfo = void 0;
class MasterDetailsResponseBillingInfo {
    static getAttributeTypeMap() {
        return MasterDetailsResponseBillingInfo.attributeTypeMap;
    }
}
exports.MasterDetailsResponseBillingInfo = MasterDetailsResponseBillingInfo;
MasterDetailsResponseBillingInfo.discriminator = undefined;
MasterDetailsResponseBillingInfo.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "companyName",
        "baseName": "companyName",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "MasterDetailsResponseBillingInfoName"
    },
    {
        "name": "address",
        "baseName": "address",
        "type": "MasterDetailsResponseBillingInfoAddress"
    }
]; //# sourceMappingURL=masterDetailsResponseBillingInfo.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponseBillingInfoAddress.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MasterDetailsResponseBillingInfoAddress = void 0;
class MasterDetailsResponseBillingInfoAddress {
    static getAttributeTypeMap() {
        return MasterDetailsResponseBillingInfoAddress.attributeTypeMap;
    }
}
exports.MasterDetailsResponseBillingInfoAddress = MasterDetailsResponseBillingInfoAddress;
MasterDetailsResponseBillingInfoAddress.discriminator = undefined;
MasterDetailsResponseBillingInfoAddress.attributeTypeMap = [
    {
        "name": "streetAddress",
        "baseName": "streetAddress",
        "type": "string"
    },
    {
        "name": "locality",
        "baseName": "locality",
        "type": "string"
    },
    {
        "name": "postalCode",
        "baseName": "postalCode",
        "type": "string"
    },
    {
        "name": "stateCode",
        "baseName": "stateCode",
        "type": "string"
    },
    {
        "name": "countryCode",
        "baseName": "countryCode",
        "type": "string"
    }
]; //# sourceMappingURL=masterDetailsResponseBillingInfoAddress.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponseBillingInfoName.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MasterDetailsResponseBillingInfoName = void 0;
class MasterDetailsResponseBillingInfoName {
    static getAttributeTypeMap() {
        return MasterDetailsResponseBillingInfoName.attributeTypeMap;
    }
}
exports.MasterDetailsResponseBillingInfoName = MasterDetailsResponseBillingInfoName;
MasterDetailsResponseBillingInfoName.discriminator = undefined;
MasterDetailsResponseBillingInfoName.attributeTypeMap = [
    {
        "name": "givenName",
        "baseName": "givenName",
        "type": "string"
    },
    {
        "name": "familyName",
        "baseName": "familyName",
        "type": "string"
    }
]; //# sourceMappingURL=masterDetailsResponseBillingInfoName.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponsePlanInfo.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MasterDetailsResponsePlanInfo = void 0;
class MasterDetailsResponsePlanInfo {
    static getAttributeTypeMap() {
        return MasterDetailsResponsePlanInfo.attributeTypeMap;
    }
}
exports.MasterDetailsResponsePlanInfo = MasterDetailsResponsePlanInfo;
MasterDetailsResponsePlanInfo.discriminator = undefined;
MasterDetailsResponsePlanInfo.attributeTypeMap = [
    {
        "name": "currencyCode",
        "baseName": "currencyCode",
        "type": "string"
    },
    {
        "name": "nextBillingAt",
        "baseName": "nextBillingAt",
        "type": "number"
    },
    {
        "name": "price",
        "baseName": "price",
        "type": "number"
    },
    {
        "name": "planPeriod",
        "baseName": "planPeriod",
        "type": "MasterDetailsResponsePlanInfo.PlanPeriodEnum"
    },
    {
        "name": "subAccounts",
        "baseName": "subAccounts",
        "type": "number"
    },
    {
        "name": "features",
        "baseName": "features",
        "type": "Array<MasterDetailsResponsePlanInfoFeaturesInner>"
    }
];
(function(MasterDetailsResponsePlanInfo) {
    let PlanPeriodEnum;
    (function(PlanPeriodEnum) {
        PlanPeriodEnum[PlanPeriodEnum["Month"] = 'month'] = "Month";
        PlanPeriodEnum[PlanPeriodEnum["Year"] = 'year'] = "Year";
    })(PlanPeriodEnum = MasterDetailsResponsePlanInfo.PlanPeriodEnum || (MasterDetailsResponsePlanInfo.PlanPeriodEnum = {}));
})(MasterDetailsResponsePlanInfo = exports.MasterDetailsResponsePlanInfo || (exports.MasterDetailsResponsePlanInfo = {})); //# sourceMappingURL=masterDetailsResponsePlanInfo.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponsePlanInfoFeaturesInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MasterDetailsResponsePlanInfoFeaturesInner = void 0;
class MasterDetailsResponsePlanInfoFeaturesInner {
    static getAttributeTypeMap() {
        return MasterDetailsResponsePlanInfoFeaturesInner.attributeTypeMap;
    }
}
exports.MasterDetailsResponsePlanInfoFeaturesInner = MasterDetailsResponsePlanInfoFeaturesInner;
MasterDetailsResponsePlanInfoFeaturesInner.discriminator = undefined;
MasterDetailsResponsePlanInfoFeaturesInner.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "unitValue",
        "baseName": "unitValue",
        "type": "string"
    },
    {
        "name": "quantity",
        "baseName": "quantity",
        "type": "number"
    },
    {
        "name": "quantityWithOverages",
        "baseName": "quantityWithOverages",
        "type": "number"
    },
    {
        "name": "used",
        "baseName": "used",
        "type": "number"
    },
    {
        "name": "usedOverages",
        "baseName": "usedOverages",
        "type": "number"
    },
    {
        "name": "remaining",
        "baseName": "remaining",
        "type": "number"
    }
]; //# sourceMappingURL=masterDetailsResponsePlanInfoFeaturesInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/note.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Note = void 0;
class Note {
    static getAttributeTypeMap() {
        return Note.attributeTypeMap;
    }
}
exports.Note = Note;
Note.discriminator = undefined;
Note.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "text",
        "baseName": "text",
        "type": "string"
    },
    {
        "name": "contactIds",
        "baseName": "contactIds",
        "type": "Array<number>"
    },
    {
        "name": "dealIds",
        "baseName": "dealIds",
        "type": "Array<string>"
    },
    {
        "name": "authorId",
        "baseName": "authorId",
        "type": "object"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "Date"
    },
    {
        "name": "updatedAt",
        "baseName": "updatedAt",
        "type": "Date"
    }
]; //# sourceMappingURL=note.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/noteData.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NoteData = void 0;
class NoteData {
    static getAttributeTypeMap() {
        return NoteData.attributeTypeMap;
    }
}
exports.NoteData = NoteData;
NoteData.discriminator = undefined;
NoteData.attributeTypeMap = [
    {
        "name": "text",
        "baseName": "text",
        "type": "string"
    },
    {
        "name": "contactIds",
        "baseName": "contactIds",
        "type": "Array<number>"
    },
    {
        "name": "dealIds",
        "baseName": "dealIds",
        "type": "Array<string>"
    },
    {
        "name": "companyIds",
        "baseName": "companyIds",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=noteData.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/noteId.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NoteId = void 0;
class NoteId {
    static getAttributeTypeMap() {
        return NoteId.attributeTypeMap;
    }
}
exports.NoteId = NoteId;
NoteId.discriminator = undefined;
NoteId.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    }
]; //# sourceMappingURL=noteId.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/notification.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Notification = void 0;
class Notification {
    static getAttributeTypeMap() {
        return Notification.attributeTypeMap;
    }
}
exports.Notification = Notification;
Notification.discriminator = undefined;
Notification.attributeTypeMap = [
    {
        "name": "channel",
        "baseName": "channel",
        "type": "Notification.ChannelEnum"
    },
    {
        "name": "text",
        "baseName": "text",
        "type": "string"
    }
];
(function(Notification) {
    let ChannelEnum;
    (function(ChannelEnum) {
        ChannelEnum[ChannelEnum["Email"] = 'email'] = "Email";
    })(ChannelEnum = Notification.ChannelEnum || (Notification.ChannelEnum = {}));
})(Notification = exports.Notification || (exports.Notification = {})); //# sourceMappingURL=notification.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/order.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Order = void 0;
class Order {
    static getAttributeTypeMap() {
        return Order.attributeTypeMap;
    }
}
exports.Order = Order;
Order.discriminator = undefined;
Order.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "string"
    },
    {
        "name": "updatedAt",
        "baseName": "updatedAt",
        "type": "string"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "string"
    },
    {
        "name": "amount",
        "baseName": "amount",
        "type": "number"
    },
    {
        "name": "products",
        "baseName": "products",
        "type": "Array<OrderProductsInner>"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "billing",
        "baseName": "billing",
        "type": "OrderBilling"
    },
    {
        "name": "coupons",
        "baseName": "coupons",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=order.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/orderBatch.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.OrderBatch = void 0;
class OrderBatch {
    constructor(){
        this['historical'] = true;
    }
    static getAttributeTypeMap() {
        return OrderBatch.attributeTypeMap;
    }
}
exports.OrderBatch = OrderBatch;
OrderBatch.discriminator = undefined;
OrderBatch.attributeTypeMap = [
    {
        "name": "orders",
        "baseName": "orders",
        "type": "Array<Order>"
    },
    {
        "name": "notifyUrl",
        "baseName": "notifyUrl",
        "type": "string"
    },
    {
        "name": "historical",
        "baseName": "historical",
        "type": "boolean"
    }
]; //# sourceMappingURL=orderBatch.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/orderBilling.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.OrderBilling = void 0;
class OrderBilling {
    static getAttributeTypeMap() {
        return OrderBilling.attributeTypeMap;
    }
}
exports.OrderBilling = OrderBilling;
OrderBilling.discriminator = undefined;
OrderBilling.attributeTypeMap = [
    {
        "name": "address",
        "baseName": "address",
        "type": "string"
    },
    {
        "name": "city",
        "baseName": "city",
        "type": "string"
    },
    {
        "name": "countryCode",
        "baseName": "countryCode",
        "type": "string"
    },
    {
        "name": "country",
        "baseName": "country",
        "type": "string"
    },
    {
        "name": "phone",
        "baseName": "phone",
        "type": "string"
    },
    {
        "name": "postCode",
        "baseName": "postCode",
        "type": "string"
    },
    {
        "name": "paymentMethod",
        "baseName": "paymentMethod",
        "type": "string"
    },
    {
        "name": "region",
        "baseName": "region",
        "type": "string"
    }
]; //# sourceMappingURL=orderBilling.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/orderProductsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.OrderProductsInner = void 0;
class OrderProductsInner {
    static getAttributeTypeMap() {
        return OrderProductsInner.attributeTypeMap;
    }
}
exports.OrderProductsInner = OrderProductsInner;
OrderProductsInner.discriminator = undefined;
OrderProductsInner.attributeTypeMap = [
    {
        "name": "productId",
        "baseName": "productId",
        "type": "string"
    },
    {
        "name": "quantity",
        "baseName": "quantity",
        "type": "number"
    },
    {
        "name": "variantId",
        "baseName": "variantId",
        "type": "string"
    },
    {
        "name": "price",
        "baseName": "price",
        "type": "number"
    }
]; //# sourceMappingURL=orderProductsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/otp.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Otp = void 0;
class Otp {
    static getAttributeTypeMap() {
        return Otp.attributeTypeMap;
    }
}
exports.Otp = Otp;
Otp.discriminator = undefined;
Otp.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "number"
    }
]; //# sourceMappingURL=otp.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/pipeline.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Pipeline = void 0;
class Pipeline {
    static getAttributeTypeMap() {
        return Pipeline.attributeTypeMap;
    }
}
exports.Pipeline = Pipeline;
Pipeline.discriminator = undefined;
Pipeline.attributeTypeMap = [
    {
        "name": "pipeline",
        "baseName": "pipeline",
        "type": "string"
    },
    {
        "name": "pipelineName",
        "baseName": "pipeline_name",
        "type": "string"
    },
    {
        "name": "stages",
        "baseName": "stages",
        "type": "Array<PipelineStage>"
    }
]; //# sourceMappingURL=pipeline.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/pipelineStage.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PipelineStage = void 0;
class PipelineStage {
    static getAttributeTypeMap() {
        return PipelineStage.attributeTypeMap;
    }
}
exports.PipelineStage = PipelineStage;
PipelineStage.discriminator = undefined;
PipelineStage.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=pipelineStage.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/postContactInfo.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PostContactInfo = void 0;
class PostContactInfo {
    static getAttributeTypeMap() {
        return PostContactInfo.attributeTypeMap;
    }
}
exports.PostContactInfo = PostContactInfo;
PostContactInfo.discriminator = undefined;
PostContactInfo.attributeTypeMap = [
    {
        "name": "contacts",
        "baseName": "contacts",
        "type": "PostContactInfoContacts"
    }
]; //# sourceMappingURL=postContactInfo.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/postContactInfoContacts.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PostContactInfoContacts = void 0;
class PostContactInfoContacts {
    static getAttributeTypeMap() {
        return PostContactInfoContacts.attributeTypeMap;
    }
}
exports.PostContactInfoContacts = PostContactInfoContacts;
PostContactInfoContacts.discriminator = undefined;
PostContactInfoContacts.attributeTypeMap = [
    {
        "name": "success",
        "baseName": "success",
        "type": "Array<string>"
    },
    {
        "name": "failure",
        "baseName": "failure",
        "type": "Array<string>"
    },
    {
        "name": "total",
        "baseName": "total",
        "type": "number"
    },
    {
        "name": "processId",
        "baseName": "processId",
        "type": "number"
    }
]; //# sourceMappingURL=postContactInfoContacts.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/postSendFailed.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PostSendFailed = void 0;
class PostSendFailed {
    static getAttributeTypeMap() {
        return PostSendFailed.attributeTypeMap;
    }
}
exports.PostSendFailed = PostSendFailed;
PostSendFailed.discriminator = undefined;
PostSendFailed.attributeTypeMap = [
    {
        "name": "code",
        "baseName": "code",
        "type": "number"
    },
    {
        "name": "message",
        "baseName": "message",
        "type": "string"
    },
    {
        "name": "unexistingEmails",
        "baseName": "unexistingEmails",
        "type": "Array<string>"
    },
    {
        "name": "withoutListEmails",
        "baseName": "withoutListEmails",
        "type": "Array<string>"
    },
    {
        "name": "blackListedEmails",
        "baseName": "blackListedEmails",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=postSendFailed.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/postSendSmsTestFailed.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PostSendSmsTestFailed = void 0;
class PostSendSmsTestFailed {
    static getAttributeTypeMap() {
        return PostSendSmsTestFailed.attributeTypeMap;
    }
}
exports.PostSendSmsTestFailed = PostSendSmsTestFailed;
PostSendSmsTestFailed.discriminator = undefined;
PostSendSmsTestFailed.attributeTypeMap = [
    {
        "name": "code",
        "baseName": "code",
        "type": "number"
    },
    {
        "name": "message",
        "baseName": "message",
        "type": "string"
    },
    {
        "name": "unexistingSms",
        "baseName": "unexistingSms",
        "type": "Array<string>"
    },
    {
        "name": "withoutListSms",
        "baseName": "withoutListSms",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=postSendSmsTestFailed.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/putRevokeUserPermission.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PutRevokeUserPermission = void 0;
class PutRevokeUserPermission {
    static getAttributeTypeMap() {
        return PutRevokeUserPermission.attributeTypeMap;
    }
}
exports.PutRevokeUserPermission = PutRevokeUserPermission;
PutRevokeUserPermission.discriminator = undefined;
PutRevokeUserPermission.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    }
]; //# sourceMappingURL=putRevokeUserPermission.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/putresendcancelinvitation.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Putresendcancelinvitation = void 0;
class Putresendcancelinvitation {
    static getAttributeTypeMap() {
        return Putresendcancelinvitation.attributeTypeMap;
    }
}
exports.Putresendcancelinvitation = Putresendcancelinvitation;
Putresendcancelinvitation.discriminator = undefined;
Putresendcancelinvitation.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    }
]; //# sourceMappingURL=putresendcancelinvitation.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/remainingCreditModel.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RemainingCreditModel = void 0;
class RemainingCreditModel {
    static getAttributeTypeMap() {
        return RemainingCreditModel.attributeTypeMap;
    }
}
exports.RemainingCreditModel = RemainingCreditModel;
RemainingCreditModel.discriminator = undefined;
RemainingCreditModel.attributeTypeMap = [
    {
        "name": "child",
        "baseName": "child",
        "type": "RemainingCreditModelChild"
    },
    {
        "name": "reseller",
        "baseName": "reseller",
        "type": "RemainingCreditModelReseller"
    }
]; //# sourceMappingURL=remainingCreditModel.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/remainingCreditModelChild.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RemainingCreditModelChild = void 0;
class RemainingCreditModelChild {
    static getAttributeTypeMap() {
        return RemainingCreditModelChild.attributeTypeMap;
    }
}
exports.RemainingCreditModelChild = RemainingCreditModelChild;
RemainingCreditModelChild.discriminator = undefined;
RemainingCreditModelChild.attributeTypeMap = [
    {
        "name": "sms",
        "baseName": "sms",
        "type": "number"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "number"
    }
]; //# sourceMappingURL=remainingCreditModelChild.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/remainingCreditModelReseller.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RemainingCreditModelReseller = void 0;
class RemainingCreditModelReseller {
    static getAttributeTypeMap() {
        return RemainingCreditModelReseller.attributeTypeMap;
    }
}
exports.RemainingCreditModelReseller = RemainingCreditModelReseller;
RemainingCreditModelReseller.discriminator = undefined;
RemainingCreditModelReseller.attributeTypeMap = [
    {
        "name": "sms",
        "baseName": "sms",
        "type": "number"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "number"
    }
]; //# sourceMappingURL=remainingCreditModelReseller.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/removeContactFromList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RemoveContactFromList = void 0;
class RemoveContactFromList {
    static getAttributeTypeMap() {
        return RemoveContactFromList.attributeTypeMap;
    }
}
exports.RemoveContactFromList = RemoveContactFromList;
RemoveContactFromList.discriminator = undefined;
RemoveContactFromList.attributeTypeMap = [
    {
        "name": "emails",
        "baseName": "emails",
        "type": "Array<string>"
    },
    {
        "name": "ids",
        "baseName": "ids",
        "type": "Array<number>"
    },
    {
        "name": "all",
        "baseName": "all",
        "type": "boolean"
    }
]; //# sourceMappingURL=removeContactFromList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/removeCredits.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RemoveCredits = void 0;
class RemoveCredits {
    static getAttributeTypeMap() {
        return RemoveCredits.attributeTypeMap;
    }
}
exports.RemoveCredits = RemoveCredits;
RemoveCredits.discriminator = undefined;
RemoveCredits.attributeTypeMap = [
    {
        "name": "sms",
        "baseName": "sms",
        "type": "number"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "number"
    }
]; //# sourceMappingURL=removeCredits.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/requestContactExport.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RequestContactExport = void 0;
class RequestContactExport {
    static getAttributeTypeMap() {
        return RequestContactExport.attributeTypeMap;
    }
}
exports.RequestContactExport = RequestContactExport;
RequestContactExport.discriminator = undefined;
RequestContactExport.attributeTypeMap = [
    {
        "name": "exportAttributes",
        "baseName": "exportAttributes",
        "type": "Array<string>"
    },
    {
        "name": "customContactFilter",
        "baseName": "customContactFilter",
        "type": "RequestContactExportCustomContactFilter"
    },
    {
        "name": "notifyUrl",
        "baseName": "notifyUrl",
        "type": "string"
    }
]; //# sourceMappingURL=requestContactExport.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/requestContactExportCustomContactFilter.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RequestContactExportCustomContactFilter = void 0;
class RequestContactExportCustomContactFilter {
    static getAttributeTypeMap() {
        return RequestContactExportCustomContactFilter.attributeTypeMap;
    }
}
exports.RequestContactExportCustomContactFilter = RequestContactExportCustomContactFilter;
RequestContactExportCustomContactFilter.discriminator = undefined;
RequestContactExportCustomContactFilter.attributeTypeMap = [
    {
        "name": "actionForContacts",
        "baseName": "actionForContacts",
        "type": "RequestContactExportCustomContactFilter.ActionForContactsEnum"
    },
    {
        "name": "actionForEmailCampaigns",
        "baseName": "actionForEmailCampaigns",
        "type": "RequestContactExportCustomContactFilter.ActionForEmailCampaignsEnum"
    },
    {
        "name": "actionForSmsCampaigns",
        "baseName": "actionForSmsCampaigns",
        "type": "RequestContactExportCustomContactFilter.ActionForSmsCampaignsEnum"
    },
    {
        "name": "listId",
        "baseName": "listId",
        "type": "number"
    },
    {
        "name": "emailCampaignId",
        "baseName": "emailCampaignId",
        "type": "number"
    },
    {
        "name": "smsCampaignId",
        "baseName": "smsCampaignId",
        "type": "number"
    }
];
(function(RequestContactExportCustomContactFilter) {
    let ActionForContactsEnum;
    (function(ActionForContactsEnum) {
        ActionForContactsEnum[ActionForContactsEnum["AllContacts"] = 'allContacts'] = "AllContacts";
        ActionForContactsEnum[ActionForContactsEnum["Subscribed"] = 'subscribed'] = "Subscribed";
        ActionForContactsEnum[ActionForContactsEnum["Unsubscribed"] = 'unsubscribed'] = "Unsubscribed";
        ActionForContactsEnum[ActionForContactsEnum["UnsubscribedPerList"] = 'unsubscribedPerList'] = "UnsubscribedPerList";
    })(ActionForContactsEnum = RequestContactExportCustomContactFilter.ActionForContactsEnum || (RequestContactExportCustomContactFilter.ActionForContactsEnum = {}));
    let ActionForEmailCampaignsEnum;
    (function(ActionForEmailCampaignsEnum) {
        ActionForEmailCampaignsEnum[ActionForEmailCampaignsEnum["Openers"] = 'openers'] = "Openers";
        ActionForEmailCampaignsEnum[ActionForEmailCampaignsEnum["NonOpeners"] = 'nonOpeners'] = "NonOpeners";
        ActionForEmailCampaignsEnum[ActionForEmailCampaignsEnum["Clickers"] = 'clickers'] = "Clickers";
        ActionForEmailCampaignsEnum[ActionForEmailCampaignsEnum["NonClickers"] = 'nonClickers'] = "NonClickers";
        ActionForEmailCampaignsEnum[ActionForEmailCampaignsEnum["Unsubscribed"] = 'unsubscribed'] = "Unsubscribed";
        ActionForEmailCampaignsEnum[ActionForEmailCampaignsEnum["HardBounces"] = 'hardBounces'] = "HardBounces";
        ActionForEmailCampaignsEnum[ActionForEmailCampaignsEnum["SoftBounces"] = 'softBounces'] = "SoftBounces";
    })(ActionForEmailCampaignsEnum = RequestContactExportCustomContactFilter.ActionForEmailCampaignsEnum || (RequestContactExportCustomContactFilter.ActionForEmailCampaignsEnum = {}));
    let ActionForSmsCampaignsEnum;
    (function(ActionForSmsCampaignsEnum) {
        ActionForSmsCampaignsEnum[ActionForSmsCampaignsEnum["HardBounces"] = 'hardBounces'] = "HardBounces";
        ActionForSmsCampaignsEnum[ActionForSmsCampaignsEnum["SoftBounces"] = 'softBounces'] = "SoftBounces";
        ActionForSmsCampaignsEnum[ActionForSmsCampaignsEnum["Unsubscribed"] = 'unsubscribed'] = "Unsubscribed";
    })(ActionForSmsCampaignsEnum = RequestContactExportCustomContactFilter.ActionForSmsCampaignsEnum || (RequestContactExportCustomContactFilter.ActionForSmsCampaignsEnum = {}));
})(RequestContactExportCustomContactFilter = exports.RequestContactExportCustomContactFilter || (exports.RequestContactExportCustomContactFilter = {})); //# sourceMappingURL=requestContactExportCustomContactFilter.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/requestContactImport.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RequestContactImport = void 0;
class RequestContactImport {
    constructor(){
        this['emailBlacklist'] = false;
        this['disableNotification'] = false;
        this['smsBlacklist'] = false;
        this['updateExistingContacts'] = true;
        this['emptyContactsAttributes'] = false;
    }
    static getAttributeTypeMap() {
        return RequestContactImport.attributeTypeMap;
    }
}
exports.RequestContactImport = RequestContactImport;
RequestContactImport.discriminator = undefined;
RequestContactImport.attributeTypeMap = [
    {
        "name": "fileUrl",
        "baseName": "fileUrl",
        "type": "string"
    },
    {
        "name": "fileBody",
        "baseName": "fileBody",
        "type": "string"
    },
    {
        "name": "jsonBody",
        "baseName": "jsonBody",
        "type": "Array<RequestContactImportJsonBodyInner>"
    },
    {
        "name": "listIds",
        "baseName": "listIds",
        "type": "Array<number>"
    },
    {
        "name": "notifyUrl",
        "baseName": "notifyUrl",
        "type": "string"
    },
    {
        "name": "newList",
        "baseName": "newList",
        "type": "RequestContactImportNewList"
    },
    {
        "name": "emailBlacklist",
        "baseName": "emailBlacklist",
        "type": "boolean"
    },
    {
        "name": "disableNotification",
        "baseName": "disableNotification",
        "type": "boolean"
    },
    {
        "name": "smsBlacklist",
        "baseName": "smsBlacklist",
        "type": "boolean"
    },
    {
        "name": "updateExistingContacts",
        "baseName": "updateExistingContacts",
        "type": "boolean"
    },
    {
        "name": "emptyContactsAttributes",
        "baseName": "emptyContactsAttributes",
        "type": "boolean"
    }
]; //# sourceMappingURL=requestContactImport.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/requestContactImportJsonBodyInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RequestContactImportJsonBodyInner = void 0;
class RequestContactImportJsonBodyInner {
    static getAttributeTypeMap() {
        return RequestContactImportJsonBodyInner.attributeTypeMap;
    }
}
exports.RequestContactImportJsonBodyInner = RequestContactImportJsonBodyInner;
RequestContactImportJsonBodyInner.discriminator = undefined;
RequestContactImportJsonBodyInner.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "attributes",
        "baseName": "attributes",
        "type": "{ [key: string]: any; }"
    }
]; //# sourceMappingURL=requestContactImportJsonBodyInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/requestContactImportNewList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RequestContactImportNewList = void 0;
class RequestContactImportNewList {
    static getAttributeTypeMap() {
        return RequestContactImportNewList.attributeTypeMap;
    }
}
exports.RequestContactImportNewList = RequestContactImportNewList;
RequestContactImportNewList.discriminator = undefined;
RequestContactImportNewList.attributeTypeMap = [
    {
        "name": "listName",
        "baseName": "listName",
        "type": "string"
    },
    {
        "name": "folderId",
        "baseName": "folderId",
        "type": "number"
    }
]; //# sourceMappingURL=requestContactImportNewList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/requestSmsRecipientExport.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RequestSmsRecipientExport = void 0;
class RequestSmsRecipientExport {
    static getAttributeTypeMap() {
        return RequestSmsRecipientExport.attributeTypeMap;
    }
}
exports.RequestSmsRecipientExport = RequestSmsRecipientExport;
RequestSmsRecipientExport.discriminator = undefined;
RequestSmsRecipientExport.attributeTypeMap = [
    {
        "name": "notifyURL",
        "baseName": "notifyURL",
        "type": "string"
    },
    {
        "name": "recipientsType",
        "baseName": "recipientsType",
        "type": "RequestSmsRecipientExport.RecipientsTypeEnum"
    }
];
(function(RequestSmsRecipientExport) {
    let RecipientsTypeEnum;
    (function(RecipientsTypeEnum) {
        RecipientsTypeEnum[RecipientsTypeEnum["All"] = 'all'] = "All";
        RecipientsTypeEnum[RecipientsTypeEnum["Delivered"] = 'delivered'] = "Delivered";
        RecipientsTypeEnum[RecipientsTypeEnum["Answered"] = 'answered'] = "Answered";
        RecipientsTypeEnum[RecipientsTypeEnum["SoftBounces"] = 'softBounces'] = "SoftBounces";
        RecipientsTypeEnum[RecipientsTypeEnum["HardBounces"] = 'hardBounces'] = "HardBounces";
        RecipientsTypeEnum[RecipientsTypeEnum["Unsubscribed"] = 'unsubscribed'] = "Unsubscribed";
    })(RecipientsTypeEnum = RequestSmsRecipientExport.RecipientsTypeEnum || (RequestSmsRecipientExport.RecipientsTypeEnum = {}));
})(RequestSmsRecipientExport = exports.RequestSmsRecipientExport || (exports.RequestSmsRecipientExport = {})); //# sourceMappingURL=requestSmsRecipientExport.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/scheduleSmtpEmail.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ScheduleSmtpEmail = void 0;
class ScheduleSmtpEmail {
    static getAttributeTypeMap() {
        return ScheduleSmtpEmail.attributeTypeMap;
    }
}
exports.ScheduleSmtpEmail = ScheduleSmtpEmail;
ScheduleSmtpEmail.discriminator = undefined;
ScheduleSmtpEmail.attributeTypeMap = [
    {
        "name": "messageId",
        "baseName": "messageId",
        "type": "string"
    },
    {
        "name": "messageIds",
        "baseName": "messageIds",
        "type": "Array<string>"
    },
    {
        "name": "batchId",
        "baseName": "batchId",
        "type": "string"
    }
]; //# sourceMappingURL=scheduleSmtpEmail.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendReport.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendReport = void 0;
class SendReport {
    constructor(){
        this['language'] = SendReport.LanguageEnum.Fr;
    }
    static getAttributeTypeMap() {
        return SendReport.attributeTypeMap;
    }
}
exports.SendReport = SendReport;
SendReport.discriminator = undefined;
SendReport.attributeTypeMap = [
    {
        "name": "language",
        "baseName": "language",
        "type": "SendReport.LanguageEnum"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "SendReportEmail"
    }
];
(function(SendReport) {
    let LanguageEnum;
    (function(LanguageEnum) {
        LanguageEnum[LanguageEnum["Fr"] = 'fr'] = "Fr";
        LanguageEnum[LanguageEnum["Es"] = 'es'] = "Es";
        LanguageEnum[LanguageEnum["Pt"] = 'pt'] = "Pt";
        LanguageEnum[LanguageEnum["It"] = 'it'] = "It";
        LanguageEnum[LanguageEnum["De"] = 'de'] = "De";
        LanguageEnum[LanguageEnum["En"] = 'en'] = "En";
    })(LanguageEnum = SendReport.LanguageEnum || (SendReport.LanguageEnum = {}));
})(SendReport = exports.SendReport || (exports.SendReport = {})); //# sourceMappingURL=sendReport.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendReportEmail.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendReportEmail = void 0;
class SendReportEmail {
    static getAttributeTypeMap() {
        return SendReportEmail.attributeTypeMap;
    }
}
exports.SendReportEmail = SendReportEmail;
SendReportEmail.discriminator = undefined;
SendReportEmail.attributeTypeMap = [
    {
        "name": "to",
        "baseName": "to",
        "type": "Array<string>"
    },
    {
        "name": "body",
        "baseName": "body",
        "type": "string"
    }
]; //# sourceMappingURL=sendReportEmail.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendSms.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendSms = void 0;
class SendSms {
    static getAttributeTypeMap() {
        return SendSms.attributeTypeMap;
    }
}
exports.SendSms = SendSms;
SendSms.discriminator = undefined;
SendSms.attributeTypeMap = [
    {
        "name": "reference",
        "baseName": "reference",
        "type": "string"
    },
    {
        "name": "messageId",
        "baseName": "messageId",
        "type": "number"
    },
    {
        "name": "smsCount",
        "baseName": "smsCount",
        "type": "number"
    },
    {
        "name": "usedCredits",
        "baseName": "usedCredits",
        "type": "number"
    },
    {
        "name": "remainingCredits",
        "baseName": "remainingCredits",
        "type": "number"
    }
]; //# sourceMappingURL=sendSms.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmail.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendSmtpEmail = void 0;
class SendSmtpEmail {
    static getAttributeTypeMap() {
        return SendSmtpEmail.attributeTypeMap;
    }
}
exports.SendSmtpEmail = SendSmtpEmail;
SendSmtpEmail.discriminator = undefined;
SendSmtpEmail.attributeTypeMap = [
    {
        "name": "sender",
        "baseName": "sender",
        "type": "SendSmtpEmailSender"
    },
    {
        "name": "to",
        "baseName": "to",
        "type": "Array<SendSmtpEmailToInner>"
    },
    {
        "name": "bcc",
        "baseName": "bcc",
        "type": "Array<SendSmtpEmailBccInner>"
    },
    {
        "name": "cc",
        "baseName": "cc",
        "type": "Array<SendSmtpEmailCcInner>"
    },
    {
        "name": "htmlContent",
        "baseName": "htmlContent",
        "type": "string"
    },
    {
        "name": "textContent",
        "baseName": "textContent",
        "type": "string"
    },
    {
        "name": "subject",
        "baseName": "subject",
        "type": "string"
    },
    {
        "name": "replyTo",
        "baseName": "replyTo",
        "type": "SendSmtpEmailReplyTo"
    },
    {
        "name": "attachment",
        "baseName": "attachment",
        "type": "Array<SendSmtpEmailAttachmentInner>"
    },
    {
        "name": "headers",
        "baseName": "headers",
        "type": "object"
    },
    {
        "name": "templateId",
        "baseName": "templateId",
        "type": "number"
    },
    {
        "name": "params",
        "baseName": "params",
        "type": "object"
    },
    {
        "name": "messageVersions",
        "baseName": "messageVersions",
        "type": "Array<SendSmtpEmailMessageVersionsInner>"
    },
    {
        "name": "tags",
        "baseName": "tags",
        "type": "Array<string>"
    },
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "Date"
    },
    {
        "name": "batchId",
        "baseName": "batchId",
        "type": "string"
    }
]; //# sourceMappingURL=sendSmtpEmail.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailAttachmentInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendSmtpEmailAttachmentInner = void 0;
class SendSmtpEmailAttachmentInner {
    static getAttributeTypeMap() {
        return SendSmtpEmailAttachmentInner.attributeTypeMap;
    }
}
exports.SendSmtpEmailAttachmentInner = SendSmtpEmailAttachmentInner;
SendSmtpEmailAttachmentInner.discriminator = undefined;
SendSmtpEmailAttachmentInner.attributeTypeMap = [
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "content",
        "baseName": "content",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=sendSmtpEmailAttachmentInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailBccInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendSmtpEmailBccInner = void 0;
class SendSmtpEmailBccInner {
    static getAttributeTypeMap() {
        return SendSmtpEmailBccInner.attributeTypeMap;
    }
}
exports.SendSmtpEmailBccInner = SendSmtpEmailBccInner;
SendSmtpEmailBccInner.discriminator = undefined;
SendSmtpEmailBccInner.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=sendSmtpEmailBccInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailCcInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendSmtpEmailCcInner = void 0;
class SendSmtpEmailCcInner {
    static getAttributeTypeMap() {
        return SendSmtpEmailCcInner.attributeTypeMap;
    }
}
exports.SendSmtpEmailCcInner = SendSmtpEmailCcInner;
SendSmtpEmailCcInner.discriminator = undefined;
SendSmtpEmailCcInner.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=sendSmtpEmailCcInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailMessageVersionsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendSmtpEmailMessageVersionsInner = void 0;
class SendSmtpEmailMessageVersionsInner {
    static getAttributeTypeMap() {
        return SendSmtpEmailMessageVersionsInner.attributeTypeMap;
    }
}
exports.SendSmtpEmailMessageVersionsInner = SendSmtpEmailMessageVersionsInner;
SendSmtpEmailMessageVersionsInner.discriminator = undefined;
SendSmtpEmailMessageVersionsInner.attributeTypeMap = [
    {
        "name": "to",
        "baseName": "to",
        "type": "Array<SendSmtpEmailMessageVersionsInnerToInner>"
    },
    {
        "name": "params",
        "baseName": "params",
        "type": "{ [key: string]: object; }"
    },
    {
        "name": "bcc",
        "baseName": "bcc",
        "type": "Array<SendSmtpEmailBccInner>"
    },
    {
        "name": "cc",
        "baseName": "cc",
        "type": "Array<SendSmtpEmailCcInner>"
    },
    {
        "name": "replyTo",
        "baseName": "replyTo",
        "type": "SendSmtpEmailMessageVersionsInnerReplyTo"
    },
    {
        "name": "subject",
        "baseName": "subject",
        "type": "string"
    },
    {
        "name": "htmlContent",
        "baseName": "htmlContent",
        "type": "string"
    },
    {
        "name": "textContent",
        "baseName": "textContent",
        "type": "string"
    }
]; //# sourceMappingURL=sendSmtpEmailMessageVersionsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailMessageVersionsInnerReplyTo.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendSmtpEmailMessageVersionsInnerReplyTo = void 0;
class SendSmtpEmailMessageVersionsInnerReplyTo {
    static getAttributeTypeMap() {
        return SendSmtpEmailMessageVersionsInnerReplyTo.attributeTypeMap;
    }
}
exports.SendSmtpEmailMessageVersionsInnerReplyTo = SendSmtpEmailMessageVersionsInnerReplyTo;
SendSmtpEmailMessageVersionsInnerReplyTo.discriminator = undefined;
SendSmtpEmailMessageVersionsInnerReplyTo.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=sendSmtpEmailMessageVersionsInnerReplyTo.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailMessageVersionsInnerToInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendSmtpEmailMessageVersionsInnerToInner = void 0;
class SendSmtpEmailMessageVersionsInnerToInner {
    static getAttributeTypeMap() {
        return SendSmtpEmailMessageVersionsInnerToInner.attributeTypeMap;
    }
}
exports.SendSmtpEmailMessageVersionsInnerToInner = SendSmtpEmailMessageVersionsInnerToInner;
SendSmtpEmailMessageVersionsInnerToInner.discriminator = undefined;
SendSmtpEmailMessageVersionsInnerToInner.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=sendSmtpEmailMessageVersionsInnerToInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailReplyTo.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendSmtpEmailReplyTo = void 0;
class SendSmtpEmailReplyTo {
    static getAttributeTypeMap() {
        return SendSmtpEmailReplyTo.attributeTypeMap;
    }
}
exports.SendSmtpEmailReplyTo = SendSmtpEmailReplyTo;
SendSmtpEmailReplyTo.discriminator = undefined;
SendSmtpEmailReplyTo.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=sendSmtpEmailReplyTo.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailSender.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendSmtpEmailSender = void 0;
class SendSmtpEmailSender {
    static getAttributeTypeMap() {
        return SendSmtpEmailSender.attributeTypeMap;
    }
}
exports.SendSmtpEmailSender = SendSmtpEmailSender;
SendSmtpEmailSender.discriminator = undefined;
SendSmtpEmailSender.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    }
]; //# sourceMappingURL=sendSmtpEmailSender.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailToInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendSmtpEmailToInner = void 0;
class SendSmtpEmailToInner {
    static getAttributeTypeMap() {
        return SendSmtpEmailToInner.attributeTypeMap;
    }
}
exports.SendSmtpEmailToInner = SendSmtpEmailToInner;
SendSmtpEmailToInner.discriminator = undefined;
SendSmtpEmailToInner.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=sendSmtpEmailToInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendTestEmail.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendTestEmail = void 0;
class SendTestEmail {
    static getAttributeTypeMap() {
        return SendTestEmail.attributeTypeMap;
    }
}
exports.SendTestEmail = SendTestEmail;
SendTestEmail.discriminator = undefined;
SendTestEmail.attributeTypeMap = [
    {
        "name": "emailTo",
        "baseName": "emailTo",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=sendTestEmail.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendTestSms.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendTestSms = void 0;
class SendTestSms {
    static getAttributeTypeMap() {
        return SendTestSms.attributeTypeMap;
    }
}
exports.SendTestSms = SendTestSms;
SendTestSms.discriminator = undefined;
SendTestSms.attributeTypeMap = [
    {
        "name": "phoneNumber",
        "baseName": "phoneNumber",
        "type": "string"
    }
]; //# sourceMappingURL=sendTestSms.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendTransacSms.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendTransacSms = void 0;
class SendTransacSms {
    constructor(){
        this['type'] = SendTransacSms.TypeEnum.Transactional;
        this['unicodeEnabled'] = false;
    }
    static getAttributeTypeMap() {
        return SendTransacSms.attributeTypeMap;
    }
}
exports.SendTransacSms = SendTransacSms;
SendTransacSms.discriminator = undefined;
SendTransacSms.attributeTypeMap = [
    {
        "name": "sender",
        "baseName": "sender",
        "type": "string"
    },
    {
        "name": "recipient",
        "baseName": "recipient",
        "type": "string"
    },
    {
        "name": "content",
        "baseName": "content",
        "type": "string"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "SendTransacSms.TypeEnum"
    },
    {
        "name": "tag",
        "baseName": "tag",
        "type": "string"
    },
    {
        "name": "webUrl",
        "baseName": "webUrl",
        "type": "string"
    },
    {
        "name": "unicodeEnabled",
        "baseName": "unicodeEnabled",
        "type": "boolean"
    },
    {
        "name": "organisationPrefix",
        "baseName": "organisationPrefix",
        "type": "string"
    }
];
(function(SendTransacSms) {
    let TypeEnum;
    (function(TypeEnum) {
        TypeEnum[TypeEnum["Transactional"] = 'transactional'] = "Transactional";
        TypeEnum[TypeEnum["Marketing"] = 'marketing'] = "Marketing";
    })(TypeEnum = SendTransacSms.TypeEnum || (SendTransacSms.TypeEnum = {}));
})(SendTransacSms = exports.SendTransacSms || (exports.SendTransacSms = {})); //# sourceMappingURL=sendTransacSms.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendWhatsappMessage.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendWhatsappMessage = void 0;
class SendWhatsappMessage {
    static getAttributeTypeMap() {
        return SendWhatsappMessage.attributeTypeMap;
    }
}
exports.SendWhatsappMessage = SendWhatsappMessage;
SendWhatsappMessage.discriminator = undefined;
SendWhatsappMessage.attributeTypeMap = [
    {
        "name": "templateId",
        "baseName": "templateId",
        "type": "number"
    },
    {
        "name": "text",
        "baseName": "text",
        "type": "string"
    },
    {
        "name": "senderNumber",
        "baseName": "senderNumber",
        "type": "string"
    },
    {
        "name": "params",
        "baseName": "params",
        "type": "object"
    },
    {
        "name": "contactNumbers",
        "baseName": "contactNumbers",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=sendWhatsappMessage.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/sendWhatsappMessage201Response.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendWhatsappMessage201Response = void 0;
class SendWhatsappMessage201Response {
    static getAttributeTypeMap() {
        return SendWhatsappMessage201Response.attributeTypeMap;
    }
}
exports.SendWhatsappMessage201Response = SendWhatsappMessage201Response;
SendWhatsappMessage201Response.discriminator = undefined;
SendWhatsappMessage201Response.attributeTypeMap = [
    {
        "name": "messageId",
        "baseName": "messageId",
        "type": "string"
    }
]; //# sourceMappingURL=sendWhatsappMessage201Response.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/ssoTokenRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SsoTokenRequest = void 0;
class SsoTokenRequest {
    static getAttributeTypeMap() {
        return SsoTokenRequest.attributeTypeMap;
    }
}
exports.SsoTokenRequest = SsoTokenRequest;
SsoTokenRequest.discriminator = undefined;
SsoTokenRequest.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "target",
        "baseName": "target",
        "type": "SsoTokenRequest.TargetEnum"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    }
];
(function(SsoTokenRequest) {
    let TargetEnum;
    (function(TargetEnum) {
        TargetEnum[TargetEnum["Automation"] = 'automation'] = "Automation";
        TargetEnum[TargetEnum["EmailCampaign"] = 'email_campaign'] = "EmailCampaign";
        TargetEnum[TargetEnum["Contacts"] = 'contacts'] = "Contacts";
        TargetEnum[TargetEnum["LandingPages"] = 'landing_pages'] = "LandingPages";
        TargetEnum[TargetEnum["EmailTransactional"] = 'email_transactional'] = "EmailTransactional";
        TargetEnum[TargetEnum["Senders"] = 'senders'] = "Senders";
        TargetEnum[TargetEnum["SmsCampaign"] = 'sms_campaign'] = "SmsCampaign";
        TargetEnum[TargetEnum["SmsTransactional"] = 'sms_transactional'] = "SmsTransactional";
    })(TargetEnum = SsoTokenRequest.TargetEnum || (SsoTokenRequest.TargetEnum = {}));
})(SsoTokenRequest = exports.SsoTokenRequest || (exports.SsoTokenRequest = {})); //# sourceMappingURL=ssoTokenRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/ssoTokenRequestCorporate.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SsoTokenRequestCorporate = void 0;
class SsoTokenRequestCorporate {
    static getAttributeTypeMap() {
        return SsoTokenRequestCorporate.attributeTypeMap;
    }
}
exports.SsoTokenRequestCorporate = SsoTokenRequestCorporate;
SsoTokenRequestCorporate.discriminator = undefined;
SsoTokenRequestCorporate.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    }
]; //# sourceMappingURL=ssoTokenRequestCorporate.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountAppsToggleRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountAppsToggleRequest = void 0;
class SubAccountAppsToggleRequest {
    static getAttributeTypeMap() {
        return SubAccountAppsToggleRequest.attributeTypeMap;
    }
}
exports.SubAccountAppsToggleRequest = SubAccountAppsToggleRequest;
SubAccountAppsToggleRequest.discriminator = undefined;
SubAccountAppsToggleRequest.attributeTypeMap = [
    {
        "name": "inbox",
        "baseName": "inbox",
        "type": "boolean"
    },
    {
        "name": "whatsapp",
        "baseName": "whatsapp",
        "type": "boolean"
    },
    {
        "name": "automation",
        "baseName": "automation",
        "type": "boolean"
    },
    {
        "name": "emailCampaigns",
        "baseName": "email-campaigns",
        "type": "boolean"
    },
    {
        "name": "smsCampaigns",
        "baseName": "sms-campaigns",
        "type": "boolean"
    },
    {
        "name": "landingPages",
        "baseName": "landing-pages",
        "type": "boolean"
    },
    {
        "name": "transactionalEmails",
        "baseName": "transactional-emails",
        "type": "boolean"
    },
    {
        "name": "transactionalSms",
        "baseName": "transactional-sms",
        "type": "boolean"
    },
    {
        "name": "facebookAds",
        "baseName": "facebook-ads",
        "type": "boolean"
    },
    {
        "name": "webPush",
        "baseName": "web-push",
        "type": "boolean"
    },
    {
        "name": "meetings",
        "baseName": "meetings",
        "type": "boolean"
    },
    {
        "name": "conversations",
        "baseName": "conversations",
        "type": "boolean"
    },
    {
        "name": "crm",
        "baseName": "crm",
        "type": "boolean"
    }
]; //# sourceMappingURL=subAccountAppsToggleRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponse.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountDetailsResponse = void 0;
class SubAccountDetailsResponse {
    static getAttributeTypeMap() {
        return SubAccountDetailsResponse.attributeTypeMap;
    }
}
exports.SubAccountDetailsResponse = SubAccountDetailsResponse;
SubAccountDetailsResponse.discriminator = undefined;
SubAccountDetailsResponse.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "companyName",
        "baseName": "companyName",
        "type": "string"
    },
    {
        "name": "groups",
        "baseName": "groups",
        "type": "Array<SubAccountDetailsResponseGroupsInner>"
    },
    {
        "name": "planInfo",
        "baseName": "planInfo",
        "type": "SubAccountDetailsResponsePlanInfo"
    }
]; //# sourceMappingURL=subAccountDetailsResponse.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponseGroupsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountDetailsResponseGroupsInner = void 0;
class SubAccountDetailsResponseGroupsInner {
    static getAttributeTypeMap() {
        return SubAccountDetailsResponseGroupsInner.attributeTypeMap;
    }
}
exports.SubAccountDetailsResponseGroupsInner = SubAccountDetailsResponseGroupsInner;
SubAccountDetailsResponseGroupsInner.discriminator = undefined;
SubAccountDetailsResponseGroupsInner.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=subAccountDetailsResponseGroupsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfo.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountDetailsResponsePlanInfo = void 0;
class SubAccountDetailsResponsePlanInfo {
    static getAttributeTypeMap() {
        return SubAccountDetailsResponsePlanInfo.attributeTypeMap;
    }
}
exports.SubAccountDetailsResponsePlanInfo = SubAccountDetailsResponsePlanInfo;
SubAccountDetailsResponsePlanInfo.discriminator = undefined;
SubAccountDetailsResponsePlanInfo.attributeTypeMap = [
    {
        "name": "credits",
        "baseName": "credits",
        "type": "SubAccountDetailsResponsePlanInfoCredits"
    },
    {
        "name": "features",
        "baseName": "features",
        "type": "SubAccountDetailsResponsePlanInfoFeatures"
    },
    {
        "name": "planType",
        "baseName": "planType",
        "type": "string"
    }
]; //# sourceMappingURL=subAccountDetailsResponsePlanInfo.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoCredits.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountDetailsResponsePlanInfoCredits = void 0;
class SubAccountDetailsResponsePlanInfoCredits {
    static getAttributeTypeMap() {
        return SubAccountDetailsResponsePlanInfoCredits.attributeTypeMap;
    }
}
exports.SubAccountDetailsResponsePlanInfoCredits = SubAccountDetailsResponsePlanInfoCredits;
SubAccountDetailsResponsePlanInfoCredits.discriminator = undefined;
SubAccountDetailsResponsePlanInfoCredits.attributeTypeMap = [
    {
        "name": "emails",
        "baseName": "emails",
        "type": "SubAccountDetailsResponsePlanInfoCreditsEmails"
    },
    {
        "name": "sms",
        "baseName": "sms",
        "type": "SubAccountDetailsResponsePlanInfoCreditsSms"
    },
    {
        "name": "wpSubscribers",
        "baseName": "wpSubscribers",
        "type": "SubAccountDetailsResponsePlanInfoCreditsWpSubscribers"
    }
]; //# sourceMappingURL=subAccountDetailsResponsePlanInfoCredits.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoCreditsEmails.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountDetailsResponsePlanInfoCreditsEmails = void 0;
class SubAccountDetailsResponsePlanInfoCreditsEmails {
    static getAttributeTypeMap() {
        return SubAccountDetailsResponsePlanInfoCreditsEmails.attributeTypeMap;
    }
}
exports.SubAccountDetailsResponsePlanInfoCreditsEmails = SubAccountDetailsResponsePlanInfoCreditsEmails;
SubAccountDetailsResponsePlanInfoCreditsEmails.discriminator = undefined;
SubAccountDetailsResponsePlanInfoCreditsEmails.attributeTypeMap = [
    {
        "name": "quantity",
        "baseName": "quantity",
        "type": "number"
    },
    {
        "name": "remaining",
        "baseName": "remaining",
        "type": "number"
    }
]; //# sourceMappingURL=subAccountDetailsResponsePlanInfoCreditsEmails.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoCreditsSms.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountDetailsResponsePlanInfoCreditsSms = void 0;
class SubAccountDetailsResponsePlanInfoCreditsSms {
    static getAttributeTypeMap() {
        return SubAccountDetailsResponsePlanInfoCreditsSms.attributeTypeMap;
    }
}
exports.SubAccountDetailsResponsePlanInfoCreditsSms = SubAccountDetailsResponsePlanInfoCreditsSms;
SubAccountDetailsResponsePlanInfoCreditsSms.discriminator = undefined;
SubAccountDetailsResponsePlanInfoCreditsSms.attributeTypeMap = [
    {
        "name": "quantity",
        "baseName": "quantity",
        "type": "number"
    },
    {
        "name": "remaining",
        "baseName": "remaining",
        "type": "number"
    }
]; //# sourceMappingURL=subAccountDetailsResponsePlanInfoCreditsSms.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoCreditsWpSubscribers.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountDetailsResponsePlanInfoCreditsWpSubscribers = void 0;
class SubAccountDetailsResponsePlanInfoCreditsWpSubscribers {
    static getAttributeTypeMap() {
        return SubAccountDetailsResponsePlanInfoCreditsWpSubscribers.attributeTypeMap;
    }
}
exports.SubAccountDetailsResponsePlanInfoCreditsWpSubscribers = SubAccountDetailsResponsePlanInfoCreditsWpSubscribers;
SubAccountDetailsResponsePlanInfoCreditsWpSubscribers.discriminator = undefined;
SubAccountDetailsResponsePlanInfoCreditsWpSubscribers.attributeTypeMap = [
    {
        "name": "quantity",
        "baseName": "quantity",
        "type": "number"
    },
    {
        "name": "remaining",
        "baseName": "remaining",
        "type": "number"
    }
]; //# sourceMappingURL=subAccountDetailsResponsePlanInfoCreditsWpSubscribers.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoFeatures.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountDetailsResponsePlanInfoFeatures = void 0;
class SubAccountDetailsResponsePlanInfoFeatures {
    static getAttributeTypeMap() {
        return SubAccountDetailsResponsePlanInfoFeatures.attributeTypeMap;
    }
}
exports.SubAccountDetailsResponsePlanInfoFeatures = SubAccountDetailsResponsePlanInfoFeatures;
SubAccountDetailsResponsePlanInfoFeatures.discriminator = undefined;
SubAccountDetailsResponsePlanInfoFeatures.attributeTypeMap = [
    {
        "name": "inbox",
        "baseName": "inbox",
        "type": "SubAccountDetailsResponsePlanInfoFeaturesInbox"
    },
    {
        "name": "landingPage",
        "baseName": "landingPage",
        "type": "SubAccountDetailsResponsePlanInfoFeaturesLandingPage"
    },
    {
        "name": "users",
        "baseName": "users",
        "type": "SubAccountDetailsResponsePlanInfoFeaturesUsers"
    }
]; //# sourceMappingURL=subAccountDetailsResponsePlanInfoFeatures.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoFeaturesInbox.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountDetailsResponsePlanInfoFeaturesInbox = void 0;
class SubAccountDetailsResponsePlanInfoFeaturesInbox {
    static getAttributeTypeMap() {
        return SubAccountDetailsResponsePlanInfoFeaturesInbox.attributeTypeMap;
    }
}
exports.SubAccountDetailsResponsePlanInfoFeaturesInbox = SubAccountDetailsResponsePlanInfoFeaturesInbox;
SubAccountDetailsResponsePlanInfoFeaturesInbox.discriminator = undefined;
SubAccountDetailsResponsePlanInfoFeaturesInbox.attributeTypeMap = [
    {
        "name": "quantity",
        "baseName": "quantity",
        "type": "number"
    },
    {
        "name": "remaining",
        "baseName": "remaining",
        "type": "number"
    }
]; //# sourceMappingURL=subAccountDetailsResponsePlanInfoFeaturesInbox.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoFeaturesLandingPage.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountDetailsResponsePlanInfoFeaturesLandingPage = void 0;
class SubAccountDetailsResponsePlanInfoFeaturesLandingPage {
    static getAttributeTypeMap() {
        return SubAccountDetailsResponsePlanInfoFeaturesLandingPage.attributeTypeMap;
    }
}
exports.SubAccountDetailsResponsePlanInfoFeaturesLandingPage = SubAccountDetailsResponsePlanInfoFeaturesLandingPage;
SubAccountDetailsResponsePlanInfoFeaturesLandingPage.discriminator = undefined;
SubAccountDetailsResponsePlanInfoFeaturesLandingPage.attributeTypeMap = [
    {
        "name": "quantity",
        "baseName": "quantity",
        "type": "number"
    },
    {
        "name": "remaining",
        "baseName": "remaining",
        "type": "number"
    }
]; //# sourceMappingURL=subAccountDetailsResponsePlanInfoFeaturesLandingPage.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoFeaturesUsers.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountDetailsResponsePlanInfoFeaturesUsers = void 0;
class SubAccountDetailsResponsePlanInfoFeaturesUsers {
    static getAttributeTypeMap() {
        return SubAccountDetailsResponsePlanInfoFeaturesUsers.attributeTypeMap;
    }
}
exports.SubAccountDetailsResponsePlanInfoFeaturesUsers = SubAccountDetailsResponsePlanInfoFeaturesUsers;
SubAccountDetailsResponsePlanInfoFeaturesUsers.discriminator = undefined;
SubAccountDetailsResponsePlanInfoFeaturesUsers.attributeTypeMap = [
    {
        "name": "quantity",
        "baseName": "quantity",
        "type": "number"
    },
    {
        "name": "remaining",
        "baseName": "remaining",
        "type": "number"
    }
]; //# sourceMappingURL=subAccountDetailsResponsePlanInfoFeaturesUsers.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountUpdatePlanRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountUpdatePlanRequest = void 0;
class SubAccountUpdatePlanRequest {
    static getAttributeTypeMap() {
        return SubAccountUpdatePlanRequest.attributeTypeMap;
    }
}
exports.SubAccountUpdatePlanRequest = SubAccountUpdatePlanRequest;
SubAccountUpdatePlanRequest.discriminator = undefined;
SubAccountUpdatePlanRequest.attributeTypeMap = [
    {
        "name": "credits",
        "baseName": "credits",
        "type": "SubAccountUpdatePlanRequestCredits"
    },
    {
        "name": "features",
        "baseName": "features",
        "type": "SubAccountUpdatePlanRequestFeatures"
    }
]; //# sourceMappingURL=subAccountUpdatePlanRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountUpdatePlanRequestCredits.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountUpdatePlanRequestCredits = void 0;
class SubAccountUpdatePlanRequestCredits {
    static getAttributeTypeMap() {
        return SubAccountUpdatePlanRequestCredits.attributeTypeMap;
    }
}
exports.SubAccountUpdatePlanRequestCredits = SubAccountUpdatePlanRequestCredits;
SubAccountUpdatePlanRequestCredits.discriminator = undefined;
SubAccountUpdatePlanRequestCredits.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "number"
    },
    {
        "name": "sms",
        "baseName": "sms",
        "type": "number"
    },
    {
        "name": "wpSubscribers",
        "baseName": "wpSubscribers",
        "type": "number"
    }
]; //# sourceMappingURL=subAccountUpdatePlanRequestCredits.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountUpdatePlanRequestFeatures.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountUpdatePlanRequestFeatures = void 0;
class SubAccountUpdatePlanRequestFeatures {
    static getAttributeTypeMap() {
        return SubAccountUpdatePlanRequestFeatures.attributeTypeMap;
    }
}
exports.SubAccountUpdatePlanRequestFeatures = SubAccountUpdatePlanRequestFeatures;
SubAccountUpdatePlanRequestFeatures.discriminator = undefined;
SubAccountUpdatePlanRequestFeatures.attributeTypeMap = [
    {
        "name": "users",
        "baseName": "users",
        "type": "number"
    },
    {
        "name": "landingPage",
        "baseName": "landingPage",
        "type": "number"
    },
    {
        "name": "inbox",
        "baseName": "inbox",
        "type": "number"
    }
]; //# sourceMappingURL=subAccountUpdatePlanRequestFeatures.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountsResponse.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountsResponse = void 0;
class SubAccountsResponse {
    static getAttributeTypeMap() {
        return SubAccountsResponse.attributeTypeMap;
    }
}
exports.SubAccountsResponse = SubAccountsResponse;
SubAccountsResponse.discriminator = undefined;
SubAccountsResponse.attributeTypeMap = [
    {
        "name": "count",
        "baseName": "count",
        "type": "number"
    },
    {
        "name": "subAccounts",
        "baseName": "subAccounts",
        "type": "Array<SubAccountsResponseSubAccountsInner>"
    }
]; //# sourceMappingURL=subAccountsResponse.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountsResponseSubAccountsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountsResponseSubAccountsInner = void 0;
class SubAccountsResponseSubAccountsInner {
    static getAttributeTypeMap() {
        return SubAccountsResponseSubAccountsInner.attributeTypeMap;
    }
}
exports.SubAccountsResponseSubAccountsInner = SubAccountsResponseSubAccountsInner;
SubAccountsResponseSubAccountsInner.discriminator = undefined;
SubAccountsResponseSubAccountsInner.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "companyName",
        "baseName": "companyName",
        "type": "string"
    },
    {
        "name": "active",
        "baseName": "active",
        "type": "boolean"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "number"
    },
    {
        "name": "groups",
        "baseName": "groups",
        "type": "Array<SubAccountsResponseSubAccountsInnerGroupsInner>"
    }
]; //# sourceMappingURL=subAccountsResponseSubAccountsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/subAccountsResponseSubAccountsInnerGroupsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubAccountsResponseSubAccountsInnerGroupsInner = void 0;
class SubAccountsResponseSubAccountsInnerGroupsInner {
    static getAttributeTypeMap() {
        return SubAccountsResponseSubAccountsInnerGroupsInner.attributeTypeMap;
    }
}
exports.SubAccountsResponseSubAccountsInnerGroupsInner = SubAccountsResponseSubAccountsInnerGroupsInner;
SubAccountsResponseSubAccountsInnerGroupsInner.discriminator = undefined;
SubAccountsResponseSubAccountsInnerGroupsInner.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=subAccountsResponseSubAccountsInnerGroupsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/task.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Task = void 0;
class Task {
    static getAttributeTypeMap() {
        return Task.attributeTypeMap;
    }
}
exports.Task = Task;
Task.discriminator = undefined;
Task.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "taskTypeId",
        "baseName": "taskTypeId",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "contactsIds",
        "baseName": "contactsIds",
        "type": "Array<number>"
    },
    {
        "name": "dealsIds",
        "baseName": "dealsIds",
        "type": "Array<string>"
    },
    {
        "name": "companiesIds",
        "baseName": "companiesIds",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=task.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/taskList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TaskList = void 0;
class TaskList {
    static getAttributeTypeMap() {
        return TaskList.attributeTypeMap;
    }
}
exports.TaskList = TaskList;
TaskList.discriminator = undefined;
TaskList.attributeTypeMap = [
    {
        "name": "items",
        "baseName": "items",
        "type": "Array<Task>"
    }
]; //# sourceMappingURL=taskList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/taskReminder.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TaskReminder = void 0;
class TaskReminder {
    static getAttributeTypeMap() {
        return TaskReminder.attributeTypeMap;
    }
}
exports.TaskReminder = TaskReminder;
TaskReminder.discriminator = undefined;
TaskReminder.attributeTypeMap = [
    {
        "name": "value",
        "baseName": "value",
        "type": "number"
    },
    {
        "name": "unit",
        "baseName": "unit",
        "type": "TaskReminder.UnitEnum"
    },
    {
        "name": "types",
        "baseName": "types",
        "type": "Array<string>"
    }
];
(function(TaskReminder) {
    let UnitEnum;
    (function(UnitEnum) {
        UnitEnum[UnitEnum["Minutes"] = 'minutes'] = "Minutes";
        UnitEnum[UnitEnum["Hours"] = 'hours'] = "Hours";
        UnitEnum[UnitEnum["Weeks"] = 'weeks'] = "Weeks";
        UnitEnum[UnitEnum["Days"] = 'days'] = "Days";
    })(UnitEnum = TaskReminder.UnitEnum || (TaskReminder.UnitEnum = {}));
})(TaskReminder = exports.TaskReminder || (exports.TaskReminder = {})); //# sourceMappingURL=taskReminder.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/taskTypes.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TaskTypes = void 0;
class TaskTypes {
    static getAttributeTypeMap() {
        return TaskTypes.attributeTypeMap;
    }
}
exports.TaskTypes = TaskTypes;
TaskTypes.discriminator = undefined;
TaskTypes.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "title",
        "baseName": "title",
        "type": "string"
    }
]; //# sourceMappingURL=taskTypes.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateAttribute.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateAttribute = void 0;
class UpdateAttribute {
    static getAttributeTypeMap() {
        return UpdateAttribute.attributeTypeMap;
    }
}
exports.UpdateAttribute = UpdateAttribute;
UpdateAttribute.discriminator = undefined;
UpdateAttribute.attributeTypeMap = [
    {
        "name": "value",
        "baseName": "value",
        "type": "string"
    },
    {
        "name": "enumeration",
        "baseName": "enumeration",
        "type": "Array<UpdateAttributeEnumerationInner>"
    }
]; //# sourceMappingURL=updateAttribute.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateAttributeEnumerationInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateAttributeEnumerationInner = void 0;
class UpdateAttributeEnumerationInner {
    static getAttributeTypeMap() {
        return UpdateAttributeEnumerationInner.attributeTypeMap;
    }
}
exports.UpdateAttributeEnumerationInner = UpdateAttributeEnumerationInner;
UpdateAttributeEnumerationInner.discriminator = undefined;
UpdateAttributeEnumerationInner.attributeTypeMap = [
    {
        "name": "value",
        "baseName": "value",
        "type": "number"
    },
    {
        "name": "label",
        "baseName": "label",
        "type": "string"
    }
]; //# sourceMappingURL=updateAttributeEnumerationInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateBatchContacts.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateBatchContacts = void 0;
class UpdateBatchContacts {
    static getAttributeTypeMap() {
        return UpdateBatchContacts.attributeTypeMap;
    }
}
exports.UpdateBatchContacts = UpdateBatchContacts;
UpdateBatchContacts.discriminator = undefined;
UpdateBatchContacts.attributeTypeMap = [
    {
        "name": "contacts",
        "baseName": "contacts",
        "type": "Array<UpdateBatchContactsContactsInner>"
    }
]; //# sourceMappingURL=updateBatchContacts.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateBatchContactsContactsInner.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateBatchContactsContactsInner = void 0;
class UpdateBatchContactsContactsInner {
    static getAttributeTypeMap() {
        return UpdateBatchContactsContactsInner.attributeTypeMap;
    }
}
exports.UpdateBatchContactsContactsInner = UpdateBatchContactsContactsInner;
UpdateBatchContactsContactsInner.discriminator = undefined;
UpdateBatchContactsContactsInner.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "sms",
        "baseName": "sms",
        "type": "string"
    },
    {
        "name": "extId",
        "baseName": "ext_id",
        "type": "string"
    },
    {
        "name": "attributes",
        "baseName": "attributes",
        "type": "{ [key: string]: object; }"
    },
    {
        "name": "emailBlacklisted",
        "baseName": "emailBlacklisted",
        "type": "boolean"
    },
    {
        "name": "smsBlacklisted",
        "baseName": "smsBlacklisted",
        "type": "boolean"
    },
    {
        "name": "listIds",
        "baseName": "listIds",
        "type": "Array<number>"
    },
    {
        "name": "unlinkListIds",
        "baseName": "unlinkListIds",
        "type": "Array<number>"
    },
    {
        "name": "smtpBlacklistSender",
        "baseName": "smtpBlacklistSender",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=updateBatchContactsContactsInner.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateBatchContactsModel.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateBatchContactsModel = void 0;
class UpdateBatchContactsModel {
    static getAttributeTypeMap() {
        return UpdateBatchContactsModel.attributeTypeMap;
    }
}
exports.UpdateBatchContactsModel = UpdateBatchContactsModel;
UpdateBatchContactsModel.discriminator = undefined;
UpdateBatchContactsModel.attributeTypeMap = [
    {
        "name": "successIds",
        "baseName": "successIds",
        "type": "Array<number>"
    },
    {
        "name": "failureIds",
        "baseName": "failureIds",
        "type": "Array<number>"
    }
]; //# sourceMappingURL=updateBatchContactsModel.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateCampaignStatus.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateCampaignStatus = void 0;
class UpdateCampaignStatus {
    static getAttributeTypeMap() {
        return UpdateCampaignStatus.attributeTypeMap;
    }
}
exports.UpdateCampaignStatus = UpdateCampaignStatus;
UpdateCampaignStatus.discriminator = undefined;
UpdateCampaignStatus.attributeTypeMap = [
    {
        "name": "status",
        "baseName": "status",
        "type": "UpdateCampaignStatus.StatusEnum"
    }
];
(function(UpdateCampaignStatus) {
    let StatusEnum;
    (function(StatusEnum) {
        StatusEnum[StatusEnum["Suspended"] = 'suspended'] = "Suspended";
        StatusEnum[StatusEnum["Archive"] = 'archive'] = "Archive";
        StatusEnum[StatusEnum["Darchive"] = 'darchive'] = "Darchive";
        StatusEnum[StatusEnum["Sent"] = 'sent'] = "Sent";
        StatusEnum[StatusEnum["Queued"] = 'queued'] = "Queued";
        StatusEnum[StatusEnum["Replicate"] = 'replicate'] = "Replicate";
        StatusEnum[StatusEnum["ReplicateTemplate"] = 'replicateTemplate'] = "ReplicateTemplate";
        StatusEnum[StatusEnum["Draft"] = 'draft'] = "Draft";
    })(StatusEnum = UpdateCampaignStatus.StatusEnum || (UpdateCampaignStatus.StatusEnum = {}));
})(UpdateCampaignStatus = exports.UpdateCampaignStatus || (exports.UpdateCampaignStatus = {})); //# sourceMappingURL=updateCampaignStatus.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateChild.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateChild = void 0;
class UpdateChild {
    static getAttributeTypeMap() {
        return UpdateChild.attributeTypeMap;
    }
}
exports.UpdateChild = UpdateChild;
UpdateChild.discriminator = undefined;
UpdateChild.attributeTypeMap = [
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "firstName",
        "baseName": "firstName",
        "type": "string"
    },
    {
        "name": "lastName",
        "baseName": "lastName",
        "type": "string"
    },
    {
        "name": "companyName",
        "baseName": "companyName",
        "type": "string"
    },
    {
        "name": "password",
        "baseName": "password",
        "type": "string"
    }
]; //# sourceMappingURL=updateChild.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateChildAccountStatus.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateChildAccountStatus = void 0;
class UpdateChildAccountStatus {
    static getAttributeTypeMap() {
        return UpdateChildAccountStatus.attributeTypeMap;
    }
}
exports.UpdateChildAccountStatus = UpdateChildAccountStatus;
UpdateChildAccountStatus.discriminator = undefined;
UpdateChildAccountStatus.attributeTypeMap = [
    {
        "name": "transactionalEmail",
        "baseName": "transactionalEmail",
        "type": "boolean"
    },
    {
        "name": "transactionalSms",
        "baseName": "transactionalSms",
        "type": "boolean"
    },
    {
        "name": "marketingAutomation",
        "baseName": "marketingAutomation",
        "type": "boolean"
    },
    {
        "name": "smsCampaign",
        "baseName": "smsCampaign",
        "type": "boolean"
    }
]; //# sourceMappingURL=updateChildAccountStatus.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateChildDomain.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateChildDomain = void 0;
class UpdateChildDomain {
    static getAttributeTypeMap() {
        return UpdateChildDomain.attributeTypeMap;
    }
}
exports.UpdateChildDomain = UpdateChildDomain;
UpdateChildDomain.discriminator = undefined;
UpdateChildDomain.attributeTypeMap = [
    {
        "name": "domain",
        "baseName": "domain",
        "type": "string"
    }
]; //# sourceMappingURL=updateChildDomain.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateContact.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateContact = void 0;
class UpdateContact {
    static getAttributeTypeMap() {
        return UpdateContact.attributeTypeMap;
    }
}
exports.UpdateContact = UpdateContact;
UpdateContact.discriminator = undefined;
UpdateContact.attributeTypeMap = [
    {
        "name": "attributes",
        "baseName": "attributes",
        "type": "object"
    },
    {
        "name": "extId",
        "baseName": "ext_id",
        "type": "string"
    },
    {
        "name": "emailBlacklisted",
        "baseName": "emailBlacklisted",
        "type": "boolean"
    },
    {
        "name": "smsBlacklisted",
        "baseName": "smsBlacklisted",
        "type": "boolean"
    },
    {
        "name": "listIds",
        "baseName": "listIds",
        "type": "Array<number>"
    },
    {
        "name": "unlinkListIds",
        "baseName": "unlinkListIds",
        "type": "Array<number>"
    },
    {
        "name": "smtpBlacklistSender",
        "baseName": "smtpBlacklistSender",
        "type": "Array<string>"
    }
]; //# sourceMappingURL=updateContact.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateCouponCollection200Response.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateCouponCollection200Response = void 0;
class UpdateCouponCollection200Response {
    static getAttributeTypeMap() {
        return UpdateCouponCollection200Response.attributeTypeMap;
    }
}
exports.UpdateCouponCollection200Response = UpdateCouponCollection200Response;
UpdateCouponCollection200Response.discriminator = undefined;
UpdateCouponCollection200Response.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "defaultCoupon",
        "baseName": "defaultCoupon",
        "type": "string"
    }
]; //# sourceMappingURL=updateCouponCollection200Response.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateCouponCollectionRequest.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateCouponCollectionRequest = void 0;
class UpdateCouponCollectionRequest {
    static getAttributeTypeMap() {
        return UpdateCouponCollectionRequest.attributeTypeMap;
    }
}
exports.UpdateCouponCollectionRequest = UpdateCouponCollectionRequest;
UpdateCouponCollectionRequest.discriminator = undefined;
UpdateCouponCollectionRequest.attributeTypeMap = [
    {
        "name": "defaultCoupon",
        "baseName": "defaultCoupon",
        "type": "string"
    },
    {
        "name": "expirationDate",
        "baseName": "expirationDate",
        "type": "Date"
    },
    {
        "name": "remainingDaysAlert",
        "baseName": "remainingDaysAlert",
        "type": "number"
    },
    {
        "name": "remainingCouponsAlert",
        "baseName": "remainingCouponsAlert",
        "type": "number"
    }
]; //# sourceMappingURL=updateCouponCollectionRequest.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateEmailCampaign.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateEmailCampaign = void 0;
class UpdateEmailCampaign {
    constructor(){
        this['inlineImageActivation'] = false;
        this['recurring'] = false;
        this['abTesting'] = false;
        this['ipWarmupEnable'] = false;
    }
    static getAttributeTypeMap() {
        return UpdateEmailCampaign.attributeTypeMap;
    }
}
exports.UpdateEmailCampaign = UpdateEmailCampaign;
UpdateEmailCampaign.discriminator = undefined;
UpdateEmailCampaign.attributeTypeMap = [
    {
        "name": "tag",
        "baseName": "tag",
        "type": "string"
    },
    {
        "name": "sender",
        "baseName": "sender",
        "type": "UpdateEmailCampaignSender"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "htmlContent",
        "baseName": "htmlContent",
        "type": "string"
    },
    {
        "name": "htmlUrl",
        "baseName": "htmlUrl",
        "type": "string"
    },
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "string"
    },
    {
        "name": "subject",
        "baseName": "subject",
        "type": "string"
    },
    {
        "name": "previewText",
        "baseName": "previewText",
        "type": "string"
    },
    {
        "name": "replyTo",
        "baseName": "replyTo",
        "type": "string"
    },
    {
        "name": "toField",
        "baseName": "toField",
        "type": "string"
    },
    {
        "name": "recipients",
        "baseName": "recipients",
        "type": "UpdateEmailCampaignRecipients"
    },
    {
        "name": "attachmentUrl",
        "baseName": "attachmentUrl",
        "type": "string"
    },
    {
        "name": "inlineImageActivation",
        "baseName": "inlineImageActivation",
        "type": "boolean"
    },
    {
        "name": "mirrorActive",
        "baseName": "mirrorActive",
        "type": "boolean"
    },
    {
        "name": "recurring",
        "baseName": "recurring",
        "type": "boolean"
    },
    {
        "name": "footer",
        "baseName": "footer",
        "type": "string"
    },
    {
        "name": "header",
        "baseName": "header",
        "type": "string"
    },
    {
        "name": "utmCampaign",
        "baseName": "utmCampaign",
        "type": "string"
    },
    {
        "name": "params",
        "baseName": "params",
        "type": "object"
    },
    {
        "name": "sendAtBestTime",
        "baseName": "sendAtBestTime",
        "type": "boolean"
    },
    {
        "name": "abTesting",
        "baseName": "abTesting",
        "type": "boolean"
    },
    {
        "name": "subjectA",
        "baseName": "subjectA",
        "type": "string"
    },
    {
        "name": "subjectB",
        "baseName": "subjectB",
        "type": "string"
    },
    {
        "name": "splitRule",
        "baseName": "splitRule",
        "type": "number"
    },
    {
        "name": "winnerCriteria",
        "baseName": "winnerCriteria",
        "type": "UpdateEmailCampaign.WinnerCriteriaEnum"
    },
    {
        "name": "winnerDelay",
        "baseName": "winnerDelay",
        "type": "number"
    },
    {
        "name": "ipWarmupEnable",
        "baseName": "ipWarmupEnable",
        "type": "boolean"
    },
    {
        "name": "initialQuota",
        "baseName": "initialQuota",
        "type": "number"
    },
    {
        "name": "increaseRate",
        "baseName": "increaseRate",
        "type": "number"
    },
    {
        "name": "unsubscriptionPageId",
        "baseName": "unsubscriptionPageId",
        "type": "string"
    },
    {
        "name": "updateFormId",
        "baseName": "updateFormId",
        "type": "string"
    }
];
(function(UpdateEmailCampaign) {
    let WinnerCriteriaEnum;
    (function(WinnerCriteriaEnum) {
        WinnerCriteriaEnum[WinnerCriteriaEnum["Open"] = 'open'] = "Open";
        WinnerCriteriaEnum[WinnerCriteriaEnum["Click"] = 'click'] = "Click";
    })(WinnerCriteriaEnum = UpdateEmailCampaign.WinnerCriteriaEnum || (UpdateEmailCampaign.WinnerCriteriaEnum = {}));
})(UpdateEmailCampaign = exports.UpdateEmailCampaign || (exports.UpdateEmailCampaign = {})); //# sourceMappingURL=updateEmailCampaign.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateEmailCampaignRecipients.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateEmailCampaignRecipients = void 0;
class UpdateEmailCampaignRecipients {
    static getAttributeTypeMap() {
        return UpdateEmailCampaignRecipients.attributeTypeMap;
    }
}
exports.UpdateEmailCampaignRecipients = UpdateEmailCampaignRecipients;
UpdateEmailCampaignRecipients.discriminator = undefined;
UpdateEmailCampaignRecipients.attributeTypeMap = [
    {
        "name": "exclusionListIds",
        "baseName": "exclusionListIds",
        "type": "Array<number>"
    },
    {
        "name": "listIds",
        "baseName": "listIds",
        "type": "Array<number>"
    },
    {
        "name": "segmentIds",
        "baseName": "segmentIds",
        "type": "Array<number>"
    }
]; //# sourceMappingURL=updateEmailCampaignRecipients.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateEmailCampaignSender.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateEmailCampaignSender = void 0;
class UpdateEmailCampaignSender {
    static getAttributeTypeMap() {
        return UpdateEmailCampaignSender.attributeTypeMap;
    }
}
exports.UpdateEmailCampaignSender = UpdateEmailCampaignSender;
UpdateEmailCampaignSender.discriminator = undefined;
UpdateEmailCampaignSender.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    }
]; //# sourceMappingURL=updateEmailCampaignSender.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateExternalFeed.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateExternalFeed = void 0;
class UpdateExternalFeed {
    constructor(){
        this['cache'] = false;
    }
    static getAttributeTypeMap() {
        return UpdateExternalFeed.attributeTypeMap;
    }
}
exports.UpdateExternalFeed = UpdateExternalFeed;
UpdateExternalFeed.discriminator = undefined;
UpdateExternalFeed.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "authType",
        "baseName": "authType",
        "type": "UpdateExternalFeed.AuthTypeEnum"
    },
    {
        "name": "username",
        "baseName": "username",
        "type": "string"
    },
    {
        "name": "password",
        "baseName": "password",
        "type": "string"
    },
    {
        "name": "token",
        "baseName": "token",
        "type": "string"
    },
    {
        "name": "headers",
        "baseName": "headers",
        "type": "Array<GetExternalFeedByUUIDHeadersInner>"
    },
    {
        "name": "maxRetries",
        "baseName": "maxRetries",
        "type": "number"
    },
    {
        "name": "cache",
        "baseName": "cache",
        "type": "boolean"
    }
];
(function(UpdateExternalFeed) {
    let AuthTypeEnum;
    (function(AuthTypeEnum) {
        AuthTypeEnum[AuthTypeEnum["Basic"] = 'basic'] = "Basic";
        AuthTypeEnum[AuthTypeEnum["Token"] = 'token'] = "Token";
        AuthTypeEnum[AuthTypeEnum["NoAuth"] = 'noAuth'] = "NoAuth";
    })(AuthTypeEnum = UpdateExternalFeed.AuthTypeEnum || (UpdateExternalFeed.AuthTypeEnum = {}));
})(UpdateExternalFeed = exports.UpdateExternalFeed || (exports.UpdateExternalFeed = {})); //# sourceMappingURL=updateExternalFeed.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateList.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateList = void 0;
class UpdateList {
    static getAttributeTypeMap() {
        return UpdateList.attributeTypeMap;
    }
}
exports.UpdateList = UpdateList;
UpdateList.discriminator = undefined;
UpdateList.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "folderId",
        "baseName": "folderId",
        "type": "number"
    }
]; //# sourceMappingURL=updateList.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateSender.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateSender = void 0;
class UpdateSender {
    static getAttributeTypeMap() {
        return UpdateSender.attributeTypeMap;
    }
}
exports.UpdateSender = UpdateSender;
UpdateSender.discriminator = undefined;
UpdateSender.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "ips",
        "baseName": "ips",
        "type": "Array<CreateSenderIpsInner>"
    }
]; //# sourceMappingURL=updateSender.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateSmsCampaign.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateSmsCampaign = void 0;
class UpdateSmsCampaign {
    constructor(){
        this['unicodeEnabled'] = false;
    }
    static getAttributeTypeMap() {
        return UpdateSmsCampaign.attributeTypeMap;
    }
}
exports.UpdateSmsCampaign = UpdateSmsCampaign;
UpdateSmsCampaign.discriminator = undefined;
UpdateSmsCampaign.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "sender",
        "baseName": "sender",
        "type": "string"
    },
    {
        "name": "content",
        "baseName": "content",
        "type": "string"
    },
    {
        "name": "recipients",
        "baseName": "recipients",
        "type": "CreateSmsCampaignRecipients"
    },
    {
        "name": "scheduledAt",
        "baseName": "scheduledAt",
        "type": "string"
    },
    {
        "name": "unicodeEnabled",
        "baseName": "unicodeEnabled",
        "type": "boolean"
    },
    {
        "name": "organisationPrefix",
        "baseName": "organisationPrefix",
        "type": "string"
    },
    {
        "name": "unsubscribeInstruction",
        "baseName": "unsubscribeInstruction",
        "type": "string"
    }
]; //# sourceMappingURL=updateSmsCampaign.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateSmtpTemplate.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateSmtpTemplate = void 0;
class UpdateSmtpTemplate {
    static getAttributeTypeMap() {
        return UpdateSmtpTemplate.attributeTypeMap;
    }
}
exports.UpdateSmtpTemplate = UpdateSmtpTemplate;
UpdateSmtpTemplate.discriminator = undefined;
UpdateSmtpTemplate.attributeTypeMap = [
    {
        "name": "tag",
        "baseName": "tag",
        "type": "string"
    },
    {
        "name": "sender",
        "baseName": "sender",
        "type": "UpdateSmtpTemplateSender"
    },
    {
        "name": "templateName",
        "baseName": "templateName",
        "type": "string"
    },
    {
        "name": "htmlContent",
        "baseName": "htmlContent",
        "type": "string"
    },
    {
        "name": "htmlUrl",
        "baseName": "htmlUrl",
        "type": "string"
    },
    {
        "name": "subject",
        "baseName": "subject",
        "type": "string"
    },
    {
        "name": "replyTo",
        "baseName": "replyTo",
        "type": "string"
    },
    {
        "name": "toField",
        "baseName": "toField",
        "type": "string"
    },
    {
        "name": "attachmentUrl",
        "baseName": "attachmentUrl",
        "type": "string"
    },
    {
        "name": "isActive",
        "baseName": "isActive",
        "type": "boolean"
    }
]; //# sourceMappingURL=updateSmtpTemplate.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateSmtpTemplateSender.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateSmtpTemplateSender = void 0;
class UpdateSmtpTemplateSender {
    static getAttributeTypeMap() {
        return UpdateSmtpTemplateSender.attributeTypeMap;
    }
}
exports.UpdateSmtpTemplateSender = UpdateSmtpTemplateSender;
UpdateSmtpTemplateSender.discriminator = undefined;
UpdateSmtpTemplateSender.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    }
]; //# sourceMappingURL=updateSmtpTemplateSender.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateWebhook.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateWebhook = void 0;
class UpdateWebhook {
    static getAttributeTypeMap() {
        return UpdateWebhook.attributeTypeMap;
    }
}
exports.UpdateWebhook = UpdateWebhook;
UpdateWebhook.discriminator = undefined;
UpdateWebhook.attributeTypeMap = [
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "description",
        "baseName": "description",
        "type": "string"
    },
    {
        "name": "events",
        "baseName": "events",
        "type": "Array<UpdateWebhook.EventsEnum>"
    },
    {
        "name": "domain",
        "baseName": "domain",
        "type": "string"
    },
    {
        "name": "batched",
        "baseName": "batched",
        "type": "boolean"
    },
    {
        "name": "auth",
        "baseName": "auth",
        "type": "GetWebhookAuth"
    },
    {
        "name": "headers",
        "baseName": "headers",
        "type": "Array<GetWebhookHeadersInner>"
    }
];
(function(UpdateWebhook) {
    let EventsEnum;
    (function(EventsEnum) {
        EventsEnum[EventsEnum["Sent"] = 'sent'] = "Sent";
        EventsEnum[EventsEnum["HardBounce"] = 'hardBounce'] = "HardBounce";
        EventsEnum[EventsEnum["SoftBounce"] = 'softBounce'] = "SoftBounce";
        EventsEnum[EventsEnum["Blocked"] = 'blocked'] = "Blocked";
        EventsEnum[EventsEnum["Spam"] = 'spam'] = "Spam";
        EventsEnum[EventsEnum["Delivered"] = 'delivered'] = "Delivered";
        EventsEnum[EventsEnum["Request"] = 'request'] = "Request";
        EventsEnum[EventsEnum["Click"] = 'click'] = "Click";
        EventsEnum[EventsEnum["Invalid"] = 'invalid'] = "Invalid";
        EventsEnum[EventsEnum["Deferred"] = 'deferred'] = "Deferred";
        EventsEnum[EventsEnum["Opened"] = 'opened'] = "Opened";
        EventsEnum[EventsEnum["UniqueOpened"] = 'uniqueOpened'] = "UniqueOpened";
        EventsEnum[EventsEnum["Unsubscribed"] = 'unsubscribed'] = "Unsubscribed";
        EventsEnum[EventsEnum["ListAddition"] = 'listAddition'] = "ListAddition";
        EventsEnum[EventsEnum["ContactUpdated"] = 'contactUpdated'] = "ContactUpdated";
        EventsEnum[EventsEnum["ContactDeleted"] = 'contactDeleted'] = "ContactDeleted";
        EventsEnum[EventsEnum["InboundEmailProcessed"] = 'inboundEmailProcessed'] = "InboundEmailProcessed";
    })(EventsEnum = UpdateWebhook.EventsEnum || (UpdateWebhook.EventsEnum = {}));
})(UpdateWebhook = exports.UpdateWebhook || (exports.UpdateWebhook = {})); //# sourceMappingURL=updateWebhook.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/updateWhatsAppCampaign.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateWhatsAppCampaign = void 0;
class UpdateWhatsAppCampaign {
    constructor(){
        this['campaignStatus'] = UpdateWhatsAppCampaign.CampaignStatusEnum.Scheduled;
    }
    static getAttributeTypeMap() {
        return UpdateWhatsAppCampaign.attributeTypeMap;
    }
}
exports.UpdateWhatsAppCampaign = UpdateWhatsAppCampaign;
UpdateWhatsAppCampaign.discriminator = undefined;
UpdateWhatsAppCampaign.attributeTypeMap = [
    {
        "name": "campaignName",
        "baseName": "campaignName",
        "type": "string"
    },
    {
        "name": "campaignStatus",
        "baseName": "campaignStatus",
        "type": "UpdateWhatsAppCampaign.CampaignStatusEnum"
    },
    {
        "name": "rescheduleFor",
        "baseName": "rescheduleFor",
        "type": "string"
    },
    {
        "name": "recipients",
        "baseName": "recipients",
        "type": "CreateWhatsAppCampaignRecipients"
    }
];
(function(UpdateWhatsAppCampaign) {
    let CampaignStatusEnum;
    (function(CampaignStatusEnum) {
        CampaignStatusEnum[CampaignStatusEnum["Scheduled"] = 'scheduled'] = "Scheduled";
        CampaignStatusEnum[CampaignStatusEnum["Suspended"] = 'suspended'] = "Suspended";
    })(CampaignStatusEnum = UpdateWhatsAppCampaign.CampaignStatusEnum || (UpdateWhatsAppCampaign.CampaignStatusEnum = {}));
})(UpdateWhatsAppCampaign = exports.UpdateWhatsAppCampaign || (exports.UpdateWhatsAppCampaign = {})); //# sourceMappingURL=updateWhatsAppCampaign.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/uploadImageModel.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UploadImageModel = void 0;
class UploadImageModel {
    static getAttributeTypeMap() {
        return UploadImageModel.attributeTypeMap;
    }
}
exports.UploadImageModel = UploadImageModel;
UploadImageModel.discriminator = undefined;
UploadImageModel.attributeTypeMap = [
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    }
]; //# sourceMappingURL=uploadImageModel.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/uploadImageToGallery.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UploadImageToGallery = void 0;
class UploadImageToGallery {
    static getAttributeTypeMap() {
        return UploadImageToGallery.attributeTypeMap;
    }
}
exports.UploadImageToGallery = UploadImageToGallery;
UploadImageToGallery.discriminator = undefined;
UploadImageToGallery.attributeTypeMap = [
    {
        "name": "imageUrl",
        "baseName": "imageUrl",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    }
]; //# sourceMappingURL=uploadImageToGallery.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/variablesItems.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.VariablesItems = void 0;
class VariablesItems {
    static getAttributeTypeMap() {
        return VariablesItems.attributeTypeMap;
    }
}
exports.VariablesItems = VariablesItems;
VariablesItems.discriminator = undefined;
VariablesItems.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "_default",
        "baseName": "default",
        "type": "string"
    },
    {
        "name": "datatype",
        "baseName": "datatype",
        "type": "string"
    }
]; //# sourceMappingURL=variablesItems.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/whatsappCampStats.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.WhatsappCampStats = void 0;
class WhatsappCampStats {
    static getAttributeTypeMap() {
        return WhatsappCampStats.attributeTypeMap;
    }
}
exports.WhatsappCampStats = WhatsappCampStats;
WhatsappCampStats.discriminator = undefined;
WhatsappCampStats.attributeTypeMap = [
    {
        "name": "sent",
        "baseName": "sent",
        "type": "number"
    },
    {
        "name": "delivered",
        "baseName": "delivered",
        "type": "number"
    },
    {
        "name": "read",
        "baseName": "read",
        "type": "number"
    },
    {
        "name": "unsubscribe",
        "baseName": "unsubscribe",
        "type": "number"
    },
    {
        "name": "notSent",
        "baseName": "not_sent",
        "type": "number"
    }
]; //# sourceMappingURL=whatsappCampStats.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/whatsappCampTemplate.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.WhatsappCampTemplate = void 0;
class WhatsappCampTemplate {
    static getAttributeTypeMap() {
        return WhatsappCampTemplate.attributeTypeMap;
    }
}
exports.WhatsappCampTemplate = WhatsappCampTemplate;
WhatsappCampTemplate.discriminator = undefined;
WhatsappCampTemplate.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "category",
        "baseName": "category",
        "type": "string"
    },
    {
        "name": "language",
        "baseName": "language",
        "type": "string"
    },
    {
        "name": "containsButton",
        "baseName": "contains_button",
        "type": "boolean"
    },
    {
        "name": "displayHeader",
        "baseName": "display_header",
        "type": "boolean"
    },
    {
        "name": "headerType",
        "baseName": "header_type",
        "type": "string"
    },
    {
        "name": "components",
        "baseName": "components",
        "type": "Array<ComponentItems>"
    },
    {
        "name": "headerVariables",
        "baseName": "header_variables",
        "type": "Array<VariablesItems>"
    },
    {
        "name": "bodyVariables",
        "baseName": "body_variables",
        "type": "Array<VariablesItems>"
    },
    {
        "name": "buttonType",
        "baseName": "button_type",
        "type": "string"
    },
    {
        "name": "hideFooter",
        "baseName": "hide_footer",
        "type": "boolean"
    }
]; //# sourceMappingURL=whatsappCampTemplate.js.map
}),
"[project]/node_modules/@getbrevo/brevo/dist/model/models.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __createBinding = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.VoidAuth = exports.OAuth = exports.ApiKeyAuth = exports.HttpBearerAuth = exports.HttpBasicAuth = exports.ObjectSerializer = void 0;
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/abTestCampaignResult.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/abTestCampaignResultClickedLinks.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/abTestCampaignResultStatistics.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/abTestVersionClicksInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/abTestVersionStats.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/addChildDomain.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/addContactToList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/addCredits.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/authenticateDomainModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/blockDomain.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/cart.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/companiesIdPatchRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/companiesLinkUnlinkIdPatchRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/companiesList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/companiesPost200Response.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/companiesPostRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/company.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/companyAttributesInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/componentItems.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/configuration.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsAgentOnlinePingPostRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsMessage.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsMessageFile.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsMessageFileImageInfo.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsMessagesIdPutRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsMessagesPostRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsPushedMessagesIdPutRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsPushedMessagesPostRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversionSourceMetrics.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversionSourceProduct.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupDetailsResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupDetailsResponseGroup.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupDetailsResponseSubAccountsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupDetailsResponseUsersInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupPost201Response.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupPostRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupUnlinkGroupIdSubAccountsPutRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateSubAccountIpAssociatePostRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateSubAccountIpDissociatePutRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateUserInvitationActionEmailPut200Response.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createApiKeyRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createApiKeyResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createAttribute.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createAttributeEnumerationInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createCategoryModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createChild.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createContact.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createCouponCollection201Response.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createCouponCollectionRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createCouponsRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createDoiContact.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createDomain.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createDomainModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createDomainModelDnsRecords.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createDomainModelDnsRecordsDkimRecord.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createEmailCampaign.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createEmailCampaignRecipients.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createEmailCampaignSender.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createExternalFeed.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createExternalFeed201Response.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createPaymentRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createPaymentResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createProductModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createReseller.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSender.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSenderIpsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSenderModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSmsCampaign.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSmsCampaignRecipients.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSmtpEmail.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSmtpTemplate.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSmtpTemplateSender.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSubAccount.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSubAccountResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateBatchCategory.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateBatchCategoryModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateBatchProducts.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateBatchProductsModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateCategories.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateCategory.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateContactModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateFolder.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateProduct.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateProducts.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createWebhook.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createWhatsAppCampaign.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createWhatsAppCampaignRecipients.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createWhatsAppTemplate.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createdBatchId.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createdProcessId.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/crmDealsIdPatchRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/crmDealsLinkUnlinkIdPatchRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/crmDealsPost201Response.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/crmDealsPostRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/crmTasksIdPatchRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/crmTasksPost201Response.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/crmTasksPostRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/deal.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/dealAttributesInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/dealsList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/deleteHardbounces.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/ecommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/ecommerceAttributionMetricsGet200Response.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/ecommerceAttributionMetricsGet200ResponseTotals.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/ecommerceAttributionProductsConversionSourceConversionSourceIdGet200Response.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/ecommerceConfigDisplayCurrencyGet200Response.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/emailExportRecipients.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/errorModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/event.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/eventIdentifiers.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/exportWebhooksHistory.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/fileData.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/fileDownloadableLink.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAccount.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAccountActivity.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAccountActivityLogsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAccountAllOfMarketingAutomation.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAccountAllOfPlan.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAccountAllOfRelay.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAccountAllOfRelayData.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAggregatedReport.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAllExternalFeeds.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAllExternalFeedsFeedsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAttributes.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAttributesAttributesInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAttributesAttributesInnerEnumerationInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getBlockedDomains.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCampaignOverview.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCampaignRecipients.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCampaignStats.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCategories.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCategoryDetails.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildAccountCreationStatus.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildDomain.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfo.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfoAllOfApiKeys.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfoAllOfApiKeysV2.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfoAllOfApiKeysV3.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfoAllOfCredits.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfoAllOfStatistics.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildrenList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildrenListChildrenInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getClient.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStats.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsClickedInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsClickedInnerLinksInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsMessagesSentInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsOpenedInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsTransacAttributesInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsUnsubscriptions.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactDetails.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContacts.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateInvitedUsersList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateInvitedUsersListUsersInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateInvitedUsersListUsersInnerFeatureAccess.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateInvitedUsersListUsersInnerGroups.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateUserPermission.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateUserPermissionFeatureAccess.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateUserPermissionGroupsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCouponCollection.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getDeviceBrowserStats.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getDomainConfigurationModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getDomainsList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getDomainsListDomainsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getEmailCampaign.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getEmailCampaigns.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getEmailCampaignsCampaignsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getEmailEventReport.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getEmailEventReportEventsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedCampaignOverview.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedCampaignOverviewAllOfSender.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedCampaignStats.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedClient.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedClientAllOfAddress.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetails.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatistics.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsClicked.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsLinks.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsMessagesSent.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsOpened.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsUnsubscriptions.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedListAllOfCampaignStats.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExternalFeedByUUID.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExternalFeedByUUIDHeadersInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getFolder.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getFolderLists.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getFolders.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInboundEmailEvents.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInboundEmailEventsByUuid.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInboundEmailEventsByUuidAttachmentsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInboundEmailEventsByUuidLogsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInboundEmailEventsEventsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInvitedUsersList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInvitedUsersListUsersInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInvitedUsersListUsersInnerFeatureAccess.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getIp.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getIpFromSender.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getIps.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getIpsFromSender.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getLists.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getListsListsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getOrders.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getOrdersOrdersInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getPaymentRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getProcess.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getProcesses.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getProductDetails.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getProducts.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getReports.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getReportsReportsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getScheduledEmailByBatchId.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getScheduledEmailByBatchIdBatchesInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getScheduledEmailByMessageId.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSegments.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSegmentsSegments.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSendersList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSendersListSendersInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSendersListSendersInnerIpsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSharedTemplateUrl.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmsCampaign.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmsCampaignOverview.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmsCampaignStats.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmsCampaigns.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmsCampaignsCampaignsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmsEventReport.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmsEventReportEventsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmtpTemplateOverview.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmtpTemplateOverviewSender.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmtpTemplates.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSsoToken.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getStatsByDevice.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSubAccountGroups200ResponseInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacAggregatedSmsReport.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacBlockedContacts.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacBlockedContactsContactsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacBlockedContactsContactsInnerReason.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacEmailContent.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacEmailContentEventsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacEmailsList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacEmailsListTransactionalEmailsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacSmsReport.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacSmsReportReportsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getUserPermission.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getUserPermissionPrivilegesInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWATemplates.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWATemplatesTemplatesInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWebhook.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWebhookAuth.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWebhookHeadersInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWebhooks.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsAppConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsappCampaignOverview.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsappCampaigns.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsappCampaignsCampaignsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsappEventReport.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsappEventReportEventsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/inviteAdminUser.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/inviteAdminUserPrivilegesInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/inviteuser.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/inviteuserPrivilegesInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/manageIp.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponseBillingInfo.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponseBillingInfoAddress.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponseBillingInfoName.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponsePlanInfo.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponsePlanInfoFeaturesInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/note.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/noteData.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/noteId.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/notification.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/order.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/orderBatch.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/orderBilling.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/orderProductsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/otp.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/pipeline.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/pipelineStage.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/postContactInfo.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/postContactInfoContacts.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/postSendFailed.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/postSendSmsTestFailed.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/putRevokeUserPermission.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/putresendcancelinvitation.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/remainingCreditModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/remainingCreditModelChild.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/remainingCreditModelReseller.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/removeContactFromList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/removeCredits.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/requestContactExport.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/requestContactExportCustomContactFilter.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/requestContactImport.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/requestContactImportJsonBodyInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/requestContactImportNewList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/requestSmsRecipientExport.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/scheduleSmtpEmail.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendReport.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendReportEmail.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSms.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmail.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailAttachmentInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailBccInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailCcInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailMessageVersionsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailMessageVersionsInnerReplyTo.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailMessageVersionsInnerToInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailReplyTo.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailSender.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailToInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendTestEmail.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendTestSms.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendTransacSms.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendWhatsappMessage.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendWhatsappMessage201Response.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/ssoTokenRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/ssoTokenRequestCorporate.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountAppsToggleRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponseGroupsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfo.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoCredits.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoCreditsEmails.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoCreditsSms.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoCreditsWpSubscribers.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoFeatures.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoFeaturesInbox.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoFeaturesLandingPage.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoFeaturesUsers.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountUpdatePlanRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountUpdatePlanRequestCredits.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountUpdatePlanRequestFeatures.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountsResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountsResponseSubAccountsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountsResponseSubAccountsInnerGroupsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/task.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/taskList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/taskReminder.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/taskTypes.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateAttribute.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateAttributeEnumerationInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateBatchContacts.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateBatchContactsContactsInner.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateBatchContactsModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateCampaignStatus.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateChild.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateChildAccountStatus.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateChildDomain.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateContact.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateCouponCollection200Response.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateCouponCollectionRequest.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateEmailCampaign.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateEmailCampaignRecipients.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateEmailCampaignSender.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateExternalFeed.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateList.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateSender.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateSmsCampaign.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateSmtpTemplate.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateSmtpTemplateSender.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateWebhook.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateWhatsAppCampaign.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/uploadImageModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/uploadImageToGallery.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/variablesItems.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/whatsappCampStats.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/whatsappCampTemplate.js [app-rsc] (ecmascript)"), exports);
const abTestCampaignResult_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/abTestCampaignResult.js [app-rsc] (ecmascript)");
const abTestCampaignResultClickedLinks_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/abTestCampaignResultClickedLinks.js [app-rsc] (ecmascript)");
const abTestCampaignResultStatistics_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/abTestCampaignResultStatistics.js [app-rsc] (ecmascript)");
const abTestVersionClicksInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/abTestVersionClicksInner.js [app-rsc] (ecmascript)");
const abTestVersionStats_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/abTestVersionStats.js [app-rsc] (ecmascript)");
const addChildDomain_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/addChildDomain.js [app-rsc] (ecmascript)");
const addContactToList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/addContactToList.js [app-rsc] (ecmascript)");
const addCredits_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/addCredits.js [app-rsc] (ecmascript)");
const authenticateDomainModel_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/authenticateDomainModel.js [app-rsc] (ecmascript)");
const blockDomain_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/blockDomain.js [app-rsc] (ecmascript)");
const cart_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/cart.js [app-rsc] (ecmascript)");
const companiesIdPatchRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/companiesIdPatchRequest.js [app-rsc] (ecmascript)");
const companiesLinkUnlinkIdPatchRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/companiesLinkUnlinkIdPatchRequest.js [app-rsc] (ecmascript)");
const companiesList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/companiesList.js [app-rsc] (ecmascript)");
const companiesPost200Response_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/companiesPost200Response.js [app-rsc] (ecmascript)");
const companiesPostRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/companiesPostRequest.js [app-rsc] (ecmascript)");
const company_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/company.js [app-rsc] (ecmascript)");
const companyAttributesInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/companyAttributesInner.js [app-rsc] (ecmascript)");
const componentItems_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/componentItems.js [app-rsc] (ecmascript)");
const configuration_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/configuration.js [app-rsc] (ecmascript)");
const conversationsAgentOnlinePingPostRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsAgentOnlinePingPostRequest.js [app-rsc] (ecmascript)");
const conversationsMessage_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsMessage.js [app-rsc] (ecmascript)");
const conversationsMessageFile_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsMessageFile.js [app-rsc] (ecmascript)");
const conversationsMessageFileImageInfo_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsMessageFileImageInfo.js [app-rsc] (ecmascript)");
const conversationsMessagesIdPutRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsMessagesIdPutRequest.js [app-rsc] (ecmascript)");
const conversationsMessagesPostRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsMessagesPostRequest.js [app-rsc] (ecmascript)");
const conversationsPushedMessagesIdPutRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsPushedMessagesIdPutRequest.js [app-rsc] (ecmascript)");
const conversationsPushedMessagesPostRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversationsPushedMessagesPostRequest.js [app-rsc] (ecmascript)");
const conversionSourceMetrics_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversionSourceMetrics.js [app-rsc] (ecmascript)");
const conversionSourceProduct_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/conversionSourceProduct.js [app-rsc] (ecmascript)");
const corporateGroupDetailsResponse_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupDetailsResponse.js [app-rsc] (ecmascript)");
const corporateGroupDetailsResponseGroup_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupDetailsResponseGroup.js [app-rsc] (ecmascript)");
const corporateGroupDetailsResponseSubAccountsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupDetailsResponseSubAccountsInner.js [app-rsc] (ecmascript)");
const corporateGroupDetailsResponseUsersInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupDetailsResponseUsersInner.js [app-rsc] (ecmascript)");
const corporateGroupPost201Response_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupPost201Response.js [app-rsc] (ecmascript)");
const corporateGroupPostRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupPostRequest.js [app-rsc] (ecmascript)");
const corporateGroupUnlinkGroupIdSubAccountsPutRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateGroupUnlinkGroupIdSubAccountsPutRequest.js [app-rsc] (ecmascript)");
const corporateSubAccountIpAssociatePostRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateSubAccountIpAssociatePostRequest.js [app-rsc] (ecmascript)");
const corporateSubAccountIpDissociatePutRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateSubAccountIpDissociatePutRequest.js [app-rsc] (ecmascript)");
const corporateUserInvitationActionEmailPut200Response_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/corporateUserInvitationActionEmailPut200Response.js [app-rsc] (ecmascript)");
const createApiKeyRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createApiKeyRequest.js [app-rsc] (ecmascript)");
const createApiKeyResponse_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createApiKeyResponse.js [app-rsc] (ecmascript)");
const createAttribute_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createAttribute.js [app-rsc] (ecmascript)");
const createAttributeEnumerationInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createAttributeEnumerationInner.js [app-rsc] (ecmascript)");
const createCategoryModel_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createCategoryModel.js [app-rsc] (ecmascript)");
const createChild_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createChild.js [app-rsc] (ecmascript)");
const createContact_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createContact.js [app-rsc] (ecmascript)");
const createCouponCollection201Response_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createCouponCollection201Response.js [app-rsc] (ecmascript)");
const createCouponCollectionRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createCouponCollectionRequest.js [app-rsc] (ecmascript)");
const createCouponsRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createCouponsRequest.js [app-rsc] (ecmascript)");
const createDoiContact_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createDoiContact.js [app-rsc] (ecmascript)");
const createDomain_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createDomain.js [app-rsc] (ecmascript)");
const createDomainModel_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createDomainModel.js [app-rsc] (ecmascript)");
const createDomainModelDnsRecords_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createDomainModelDnsRecords.js [app-rsc] (ecmascript)");
const createDomainModelDnsRecordsDkimRecord_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createDomainModelDnsRecordsDkimRecord.js [app-rsc] (ecmascript)");
const createEmailCampaign_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createEmailCampaign.js [app-rsc] (ecmascript)");
const createEmailCampaignRecipients_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createEmailCampaignRecipients.js [app-rsc] (ecmascript)");
const createEmailCampaignSender_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createEmailCampaignSender.js [app-rsc] (ecmascript)");
const createExternalFeed_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createExternalFeed.js [app-rsc] (ecmascript)");
const createExternalFeed201Response_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createExternalFeed201Response.js [app-rsc] (ecmascript)");
const createList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createList.js [app-rsc] (ecmascript)");
const createModel_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createModel.js [app-rsc] (ecmascript)");
const createPaymentRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createPaymentRequest.js [app-rsc] (ecmascript)");
const createPaymentResponse_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createPaymentResponse.js [app-rsc] (ecmascript)");
const createProductModel_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createProductModel.js [app-rsc] (ecmascript)");
const createReseller_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createReseller.js [app-rsc] (ecmascript)");
const createSender_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSender.js [app-rsc] (ecmascript)");
const createSenderIpsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSenderIpsInner.js [app-rsc] (ecmascript)");
const createSenderModel_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSenderModel.js [app-rsc] (ecmascript)");
const createSmsCampaign_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSmsCampaign.js [app-rsc] (ecmascript)");
const createSmsCampaignRecipients_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSmsCampaignRecipients.js [app-rsc] (ecmascript)");
const createSmtpEmail_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSmtpEmail.js [app-rsc] (ecmascript)");
const createSmtpTemplate_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSmtpTemplate.js [app-rsc] (ecmascript)");
const createSmtpTemplateSender_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSmtpTemplateSender.js [app-rsc] (ecmascript)");
const createSubAccount_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSubAccount.js [app-rsc] (ecmascript)");
const createSubAccountResponse_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createSubAccountResponse.js [app-rsc] (ecmascript)");
const createUpdateBatchCategory_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateBatchCategory.js [app-rsc] (ecmascript)");
const createUpdateBatchCategoryModel_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateBatchCategoryModel.js [app-rsc] (ecmascript)");
const createUpdateBatchProducts_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateBatchProducts.js [app-rsc] (ecmascript)");
const createUpdateBatchProductsModel_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateBatchProductsModel.js [app-rsc] (ecmascript)");
const createUpdateCategories_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateCategories.js [app-rsc] (ecmascript)");
const createUpdateCategory_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateCategory.js [app-rsc] (ecmascript)");
const createUpdateContactModel_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateContactModel.js [app-rsc] (ecmascript)");
const createUpdateFolder_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateFolder.js [app-rsc] (ecmascript)");
const createUpdateProduct_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateProduct.js [app-rsc] (ecmascript)");
const createUpdateProducts_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createUpdateProducts.js [app-rsc] (ecmascript)");
const createWebhook_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createWebhook.js [app-rsc] (ecmascript)");
const createWhatsAppCampaign_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createWhatsAppCampaign.js [app-rsc] (ecmascript)");
const createWhatsAppCampaignRecipients_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createWhatsAppCampaignRecipients.js [app-rsc] (ecmascript)");
const createWhatsAppTemplate_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createWhatsAppTemplate.js [app-rsc] (ecmascript)");
const createdBatchId_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createdBatchId.js [app-rsc] (ecmascript)");
const createdProcessId_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/createdProcessId.js [app-rsc] (ecmascript)");
const crmDealsIdPatchRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/crmDealsIdPatchRequest.js [app-rsc] (ecmascript)");
const crmDealsLinkUnlinkIdPatchRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/crmDealsLinkUnlinkIdPatchRequest.js [app-rsc] (ecmascript)");
const crmDealsPost201Response_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/crmDealsPost201Response.js [app-rsc] (ecmascript)");
const crmDealsPostRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/crmDealsPostRequest.js [app-rsc] (ecmascript)");
const crmTasksIdPatchRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/crmTasksIdPatchRequest.js [app-rsc] (ecmascript)");
const crmTasksPost201Response_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/crmTasksPost201Response.js [app-rsc] (ecmascript)");
const crmTasksPostRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/crmTasksPostRequest.js [app-rsc] (ecmascript)");
const deal_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/deal.js [app-rsc] (ecmascript)");
const dealAttributesInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/dealAttributesInner.js [app-rsc] (ecmascript)");
const dealsList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/dealsList.js [app-rsc] (ecmascript)");
const deleteHardbounces_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/deleteHardbounces.js [app-rsc] (ecmascript)");
const ecommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/ecommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response.js [app-rsc] (ecmascript)");
const ecommerceAttributionMetricsGet200Response_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/ecommerceAttributionMetricsGet200Response.js [app-rsc] (ecmascript)");
const ecommerceAttributionMetricsGet200ResponseTotals_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/ecommerceAttributionMetricsGet200ResponseTotals.js [app-rsc] (ecmascript)");
const ecommerceAttributionProductsConversionSourceConversionSourceIdGet200Response_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/ecommerceAttributionProductsConversionSourceConversionSourceIdGet200Response.js [app-rsc] (ecmascript)");
const ecommerceConfigDisplayCurrencyGet200Response_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/ecommerceConfigDisplayCurrencyGet200Response.js [app-rsc] (ecmascript)");
const emailExportRecipients_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/emailExportRecipients.js [app-rsc] (ecmascript)");
const errorModel_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/errorModel.js [app-rsc] (ecmascript)");
const event_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/event.js [app-rsc] (ecmascript)");
const eventIdentifiers_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/eventIdentifiers.js [app-rsc] (ecmascript)");
const exportWebhooksHistory_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/exportWebhooksHistory.js [app-rsc] (ecmascript)");
const fileData_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/fileData.js [app-rsc] (ecmascript)");
const fileDownloadableLink_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/fileDownloadableLink.js [app-rsc] (ecmascript)");
const getAccount_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAccount.js [app-rsc] (ecmascript)");
const getAccountActivity_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAccountActivity.js [app-rsc] (ecmascript)");
const getAccountActivityLogsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAccountActivityLogsInner.js [app-rsc] (ecmascript)");
const getAccountAllOfMarketingAutomation_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAccountAllOfMarketingAutomation.js [app-rsc] (ecmascript)");
const getAccountAllOfPlan_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAccountAllOfPlan.js [app-rsc] (ecmascript)");
const getAccountAllOfRelay_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAccountAllOfRelay.js [app-rsc] (ecmascript)");
const getAccountAllOfRelayData_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAccountAllOfRelayData.js [app-rsc] (ecmascript)");
const getAggregatedReport_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAggregatedReport.js [app-rsc] (ecmascript)");
const getAllExternalFeeds_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAllExternalFeeds.js [app-rsc] (ecmascript)");
const getAllExternalFeedsFeedsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAllExternalFeedsFeedsInner.js [app-rsc] (ecmascript)");
const getAttributes_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAttributes.js [app-rsc] (ecmascript)");
const getAttributesAttributesInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAttributesAttributesInner.js [app-rsc] (ecmascript)");
const getAttributesAttributesInnerEnumerationInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getAttributesAttributesInnerEnumerationInner.js [app-rsc] (ecmascript)");
const getBlockedDomains_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getBlockedDomains.js [app-rsc] (ecmascript)");
const getCampaignOverview_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCampaignOverview.js [app-rsc] (ecmascript)");
const getCampaignRecipients_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCampaignRecipients.js [app-rsc] (ecmascript)");
const getCampaignStats_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCampaignStats.js [app-rsc] (ecmascript)");
const getCategories_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCategories.js [app-rsc] (ecmascript)");
const getCategoryDetails_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCategoryDetails.js [app-rsc] (ecmascript)");
const getChildAccountCreationStatus_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildAccountCreationStatus.js [app-rsc] (ecmascript)");
const getChildDomain_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildDomain.js [app-rsc] (ecmascript)");
const getChildInfo_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfo.js [app-rsc] (ecmascript)");
const getChildInfoAllOfApiKeys_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfoAllOfApiKeys.js [app-rsc] (ecmascript)");
const getChildInfoAllOfApiKeysV2_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfoAllOfApiKeysV2.js [app-rsc] (ecmascript)");
const getChildInfoAllOfApiKeysV3_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfoAllOfApiKeysV3.js [app-rsc] (ecmascript)");
const getChildInfoAllOfCredits_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfoAllOfCredits.js [app-rsc] (ecmascript)");
const getChildInfoAllOfStatistics_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildInfoAllOfStatistics.js [app-rsc] (ecmascript)");
const getChildrenList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildrenList.js [app-rsc] (ecmascript)");
const getChildrenListChildrenInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getChildrenListChildrenInner.js [app-rsc] (ecmascript)");
const getClient_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getClient.js [app-rsc] (ecmascript)");
const getContactCampaignStats_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStats.js [app-rsc] (ecmascript)");
const getContactCampaignStatsClickedInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsClickedInner.js [app-rsc] (ecmascript)");
const getContactCampaignStatsClickedInnerLinksInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsClickedInnerLinksInner.js [app-rsc] (ecmascript)");
const getContactCampaignStatsMessagesSentInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsMessagesSentInner.js [app-rsc] (ecmascript)");
const getContactCampaignStatsOpenedInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsOpenedInner.js [app-rsc] (ecmascript)");
const getContactCampaignStatsTransacAttributesInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsTransacAttributesInner.js [app-rsc] (ecmascript)");
const getContactCampaignStatsUnsubscriptions_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsUnsubscriptions.js [app-rsc] (ecmascript)");
const getContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner.js [app-rsc] (ecmascript)");
const getContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner.js [app-rsc] (ecmascript)");
const getContactDetails_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContactDetails.js [app-rsc] (ecmascript)");
const getContacts_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getContacts.js [app-rsc] (ecmascript)");
const getCorporateInvitedUsersList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateInvitedUsersList.js [app-rsc] (ecmascript)");
const getCorporateInvitedUsersListUsersInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateInvitedUsersListUsersInner.js [app-rsc] (ecmascript)");
const getCorporateInvitedUsersListUsersInnerFeatureAccess_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateInvitedUsersListUsersInnerFeatureAccess.js [app-rsc] (ecmascript)");
const getCorporateInvitedUsersListUsersInnerGroups_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateInvitedUsersListUsersInnerGroups.js [app-rsc] (ecmascript)");
const getCorporateUserPermission_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateUserPermission.js [app-rsc] (ecmascript)");
const getCorporateUserPermissionFeatureAccess_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateUserPermissionFeatureAccess.js [app-rsc] (ecmascript)");
const getCorporateUserPermissionGroupsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCorporateUserPermissionGroupsInner.js [app-rsc] (ecmascript)");
const getCouponCollection_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getCouponCollection.js [app-rsc] (ecmascript)");
const getDeviceBrowserStats_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getDeviceBrowserStats.js [app-rsc] (ecmascript)");
const getDomainConfigurationModel_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getDomainConfigurationModel.js [app-rsc] (ecmascript)");
const getDomainsList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getDomainsList.js [app-rsc] (ecmascript)");
const getDomainsListDomainsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getDomainsListDomainsInner.js [app-rsc] (ecmascript)");
const getEmailCampaign_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getEmailCampaign.js [app-rsc] (ecmascript)");
const getEmailCampaigns_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getEmailCampaigns.js [app-rsc] (ecmascript)");
const getEmailCampaignsCampaignsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getEmailCampaignsCampaignsInner.js [app-rsc] (ecmascript)");
const getEmailEventReport_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getEmailEventReport.js [app-rsc] (ecmascript)");
const getEmailEventReportEventsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getEmailEventReportEventsInner.js [app-rsc] (ecmascript)");
const getExtendedCampaignOverview_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedCampaignOverview.js [app-rsc] (ecmascript)");
const getExtendedCampaignOverviewAllOfSender_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedCampaignOverviewAllOfSender.js [app-rsc] (ecmascript)");
const getExtendedCampaignStats_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedCampaignStats.js [app-rsc] (ecmascript)");
const getExtendedClient_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedClient.js [app-rsc] (ecmascript)");
const getExtendedClientAllOfAddress_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedClientAllOfAddress.js [app-rsc] (ecmascript)");
const getExtendedContactDetails_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetails.js [app-rsc] (ecmascript)");
const getExtendedContactDetailsAllOfStatistics_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatistics.js [app-rsc] (ecmascript)");
const getExtendedContactDetailsAllOfStatisticsClicked_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsClicked.js [app-rsc] (ecmascript)");
const getExtendedContactDetailsAllOfStatisticsLinks_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsLinks.js [app-rsc] (ecmascript)");
const getExtendedContactDetailsAllOfStatisticsMessagesSent_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsMessagesSent.js [app-rsc] (ecmascript)");
const getExtendedContactDetailsAllOfStatisticsOpened_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsOpened.js [app-rsc] (ecmascript)");
const getExtendedContactDetailsAllOfStatisticsUnsubscriptions_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsUnsubscriptions.js [app-rsc] (ecmascript)");
const getExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription.js [app-rsc] (ecmascript)");
const getExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription.js [app-rsc] (ecmascript)");
const getExtendedList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedList.js [app-rsc] (ecmascript)");
const getExtendedListAllOfCampaignStats_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExtendedListAllOfCampaignStats.js [app-rsc] (ecmascript)");
const getExternalFeedByUUID_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExternalFeedByUUID.js [app-rsc] (ecmascript)");
const getExternalFeedByUUIDHeadersInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getExternalFeedByUUIDHeadersInner.js [app-rsc] (ecmascript)");
const getFolder_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getFolder.js [app-rsc] (ecmascript)");
const getFolderLists_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getFolderLists.js [app-rsc] (ecmascript)");
const getFolders_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getFolders.js [app-rsc] (ecmascript)");
const getInboundEmailEvents_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInboundEmailEvents.js [app-rsc] (ecmascript)");
const getInboundEmailEventsByUuid_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInboundEmailEventsByUuid.js [app-rsc] (ecmascript)");
const getInboundEmailEventsByUuidAttachmentsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInboundEmailEventsByUuidAttachmentsInner.js [app-rsc] (ecmascript)");
const getInboundEmailEventsByUuidLogsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInboundEmailEventsByUuidLogsInner.js [app-rsc] (ecmascript)");
const getInboundEmailEventsEventsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInboundEmailEventsEventsInner.js [app-rsc] (ecmascript)");
const getInvitedUsersList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInvitedUsersList.js [app-rsc] (ecmascript)");
const getInvitedUsersListUsersInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInvitedUsersListUsersInner.js [app-rsc] (ecmascript)");
const getInvitedUsersListUsersInnerFeatureAccess_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getInvitedUsersListUsersInnerFeatureAccess.js [app-rsc] (ecmascript)");
const getIp_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getIp.js [app-rsc] (ecmascript)");
const getIpFromSender_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getIpFromSender.js [app-rsc] (ecmascript)");
const getIps_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getIps.js [app-rsc] (ecmascript)");
const getIpsFromSender_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getIpsFromSender.js [app-rsc] (ecmascript)");
const getList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getList.js [app-rsc] (ecmascript)");
const getLists_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getLists.js [app-rsc] (ecmascript)");
const getListsListsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getListsListsInner.js [app-rsc] (ecmascript)");
const getOrders_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getOrders.js [app-rsc] (ecmascript)");
const getOrdersOrdersInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getOrdersOrdersInner.js [app-rsc] (ecmascript)");
const getPaymentRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getPaymentRequest.js [app-rsc] (ecmascript)");
const getProcess_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getProcess.js [app-rsc] (ecmascript)");
const getProcesses_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getProcesses.js [app-rsc] (ecmascript)");
const getProductDetails_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getProductDetails.js [app-rsc] (ecmascript)");
const getProducts_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getProducts.js [app-rsc] (ecmascript)");
const getReports_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getReports.js [app-rsc] (ecmascript)");
const getReportsReportsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getReportsReportsInner.js [app-rsc] (ecmascript)");
const getScheduledEmailByBatchId_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getScheduledEmailByBatchId.js [app-rsc] (ecmascript)");
const getScheduledEmailByBatchIdBatchesInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getScheduledEmailByBatchIdBatchesInner.js [app-rsc] (ecmascript)");
const getScheduledEmailByMessageId_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getScheduledEmailByMessageId.js [app-rsc] (ecmascript)");
const getSegments_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSegments.js [app-rsc] (ecmascript)");
const getSegmentsSegments_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSegmentsSegments.js [app-rsc] (ecmascript)");
const getSendersList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSendersList.js [app-rsc] (ecmascript)");
const getSendersListSendersInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSendersListSendersInner.js [app-rsc] (ecmascript)");
const getSendersListSendersInnerIpsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSendersListSendersInnerIpsInner.js [app-rsc] (ecmascript)");
const getSharedTemplateUrl_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSharedTemplateUrl.js [app-rsc] (ecmascript)");
const getSmsCampaign_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmsCampaign.js [app-rsc] (ecmascript)");
const getSmsCampaignOverview_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmsCampaignOverview.js [app-rsc] (ecmascript)");
const getSmsCampaignStats_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmsCampaignStats.js [app-rsc] (ecmascript)");
const getSmsCampaigns_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmsCampaigns.js [app-rsc] (ecmascript)");
const getSmsCampaignsCampaignsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmsCampaignsCampaignsInner.js [app-rsc] (ecmascript)");
const getSmsEventReport_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmsEventReport.js [app-rsc] (ecmascript)");
const getSmsEventReportEventsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmsEventReportEventsInner.js [app-rsc] (ecmascript)");
const getSmtpTemplateOverview_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmtpTemplateOverview.js [app-rsc] (ecmascript)");
const getSmtpTemplateOverviewSender_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmtpTemplateOverviewSender.js [app-rsc] (ecmascript)");
const getSmtpTemplates_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSmtpTemplates.js [app-rsc] (ecmascript)");
const getSsoToken_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSsoToken.js [app-rsc] (ecmascript)");
const getStatsByDevice_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getStatsByDevice.js [app-rsc] (ecmascript)");
const getSubAccountGroups200ResponseInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getSubAccountGroups200ResponseInner.js [app-rsc] (ecmascript)");
const getTransacAggregatedSmsReport_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacAggregatedSmsReport.js [app-rsc] (ecmascript)");
const getTransacBlockedContacts_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacBlockedContacts.js [app-rsc] (ecmascript)");
const getTransacBlockedContactsContactsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacBlockedContactsContactsInner.js [app-rsc] (ecmascript)");
const getTransacBlockedContactsContactsInnerReason_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacBlockedContactsContactsInnerReason.js [app-rsc] (ecmascript)");
const getTransacEmailContent_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacEmailContent.js [app-rsc] (ecmascript)");
const getTransacEmailContentEventsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacEmailContentEventsInner.js [app-rsc] (ecmascript)");
const getTransacEmailsList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacEmailsList.js [app-rsc] (ecmascript)");
const getTransacEmailsListTransactionalEmailsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacEmailsListTransactionalEmailsInner.js [app-rsc] (ecmascript)");
const getTransacSmsReport_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacSmsReport.js [app-rsc] (ecmascript)");
const getTransacSmsReportReportsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getTransacSmsReportReportsInner.js [app-rsc] (ecmascript)");
const getUserPermission_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getUserPermission.js [app-rsc] (ecmascript)");
const getUserPermissionPrivilegesInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getUserPermissionPrivilegesInner.js [app-rsc] (ecmascript)");
const getWATemplates_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWATemplates.js [app-rsc] (ecmascript)");
const getWATemplatesTemplatesInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWATemplatesTemplatesInner.js [app-rsc] (ecmascript)");
const getWebhook_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWebhook.js [app-rsc] (ecmascript)");
const getWebhookAuth_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWebhookAuth.js [app-rsc] (ecmascript)");
const getWebhookHeadersInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWebhookHeadersInner.js [app-rsc] (ecmascript)");
const getWebhooks_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWebhooks.js [app-rsc] (ecmascript)");
const getWhatsAppConfig_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsAppConfig.js [app-rsc] (ecmascript)");
const getWhatsappCampaignOverview_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsappCampaignOverview.js [app-rsc] (ecmascript)");
const getWhatsappCampaigns_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsappCampaigns.js [app-rsc] (ecmascript)");
const getWhatsappCampaignsCampaignsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsappCampaignsCampaignsInner.js [app-rsc] (ecmascript)");
const getWhatsappEventReport_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsappEventReport.js [app-rsc] (ecmascript)");
const getWhatsappEventReportEventsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/getWhatsappEventReportEventsInner.js [app-rsc] (ecmascript)");
const inviteAdminUser_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/inviteAdminUser.js [app-rsc] (ecmascript)");
const inviteAdminUserPrivilegesInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/inviteAdminUserPrivilegesInner.js [app-rsc] (ecmascript)");
const inviteuser_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/inviteuser.js [app-rsc] (ecmascript)");
const inviteuserPrivilegesInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/inviteuserPrivilegesInner.js [app-rsc] (ecmascript)");
const manageIp_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/manageIp.js [app-rsc] (ecmascript)");
const masterDetailsResponse_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponse.js [app-rsc] (ecmascript)");
const masterDetailsResponseBillingInfo_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponseBillingInfo.js [app-rsc] (ecmascript)");
const masterDetailsResponseBillingInfoAddress_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponseBillingInfoAddress.js [app-rsc] (ecmascript)");
const masterDetailsResponseBillingInfoName_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponseBillingInfoName.js [app-rsc] (ecmascript)");
const masterDetailsResponsePlanInfo_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponsePlanInfo.js [app-rsc] (ecmascript)");
const masterDetailsResponsePlanInfoFeaturesInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/masterDetailsResponsePlanInfoFeaturesInner.js [app-rsc] (ecmascript)");
const note_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/note.js [app-rsc] (ecmascript)");
const noteData_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/noteData.js [app-rsc] (ecmascript)");
const noteId_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/noteId.js [app-rsc] (ecmascript)");
const notification_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/notification.js [app-rsc] (ecmascript)");
const order_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/order.js [app-rsc] (ecmascript)");
const orderBatch_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/orderBatch.js [app-rsc] (ecmascript)");
const orderBilling_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/orderBilling.js [app-rsc] (ecmascript)");
const orderProductsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/orderProductsInner.js [app-rsc] (ecmascript)");
const otp_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/otp.js [app-rsc] (ecmascript)");
const pipeline_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/pipeline.js [app-rsc] (ecmascript)");
const pipelineStage_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/pipelineStage.js [app-rsc] (ecmascript)");
const postContactInfo_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/postContactInfo.js [app-rsc] (ecmascript)");
const postContactInfoContacts_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/postContactInfoContacts.js [app-rsc] (ecmascript)");
const postSendFailed_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/postSendFailed.js [app-rsc] (ecmascript)");
const postSendSmsTestFailed_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/postSendSmsTestFailed.js [app-rsc] (ecmascript)");
const putRevokeUserPermission_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/putRevokeUserPermission.js [app-rsc] (ecmascript)");
const putresendcancelinvitation_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/putresendcancelinvitation.js [app-rsc] (ecmascript)");
const remainingCreditModel_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/remainingCreditModel.js [app-rsc] (ecmascript)");
const remainingCreditModelChild_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/remainingCreditModelChild.js [app-rsc] (ecmascript)");
const remainingCreditModelReseller_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/remainingCreditModelReseller.js [app-rsc] (ecmascript)");
const removeContactFromList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/removeContactFromList.js [app-rsc] (ecmascript)");
const removeCredits_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/removeCredits.js [app-rsc] (ecmascript)");
const requestContactExport_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/requestContactExport.js [app-rsc] (ecmascript)");
const requestContactExportCustomContactFilter_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/requestContactExportCustomContactFilter.js [app-rsc] (ecmascript)");
const requestContactImport_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/requestContactImport.js [app-rsc] (ecmascript)");
const requestContactImportJsonBodyInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/requestContactImportJsonBodyInner.js [app-rsc] (ecmascript)");
const requestContactImportNewList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/requestContactImportNewList.js [app-rsc] (ecmascript)");
const requestSmsRecipientExport_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/requestSmsRecipientExport.js [app-rsc] (ecmascript)");
const scheduleSmtpEmail_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/scheduleSmtpEmail.js [app-rsc] (ecmascript)");
const sendReport_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendReport.js [app-rsc] (ecmascript)");
const sendReportEmail_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendReportEmail.js [app-rsc] (ecmascript)");
const sendSms_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSms.js [app-rsc] (ecmascript)");
const sendSmtpEmail_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmail.js [app-rsc] (ecmascript)");
const sendSmtpEmailAttachmentInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailAttachmentInner.js [app-rsc] (ecmascript)");
const sendSmtpEmailBccInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailBccInner.js [app-rsc] (ecmascript)");
const sendSmtpEmailCcInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailCcInner.js [app-rsc] (ecmascript)");
const sendSmtpEmailMessageVersionsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailMessageVersionsInner.js [app-rsc] (ecmascript)");
const sendSmtpEmailMessageVersionsInnerReplyTo_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailMessageVersionsInnerReplyTo.js [app-rsc] (ecmascript)");
const sendSmtpEmailMessageVersionsInnerToInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailMessageVersionsInnerToInner.js [app-rsc] (ecmascript)");
const sendSmtpEmailReplyTo_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailReplyTo.js [app-rsc] (ecmascript)");
const sendSmtpEmailSender_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailSender.js [app-rsc] (ecmascript)");
const sendSmtpEmailToInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendSmtpEmailToInner.js [app-rsc] (ecmascript)");
const sendTestEmail_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendTestEmail.js [app-rsc] (ecmascript)");
const sendTestSms_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendTestSms.js [app-rsc] (ecmascript)");
const sendTransacSms_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendTransacSms.js [app-rsc] (ecmascript)");
const sendWhatsappMessage_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendWhatsappMessage.js [app-rsc] (ecmascript)");
const sendWhatsappMessage201Response_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/sendWhatsappMessage201Response.js [app-rsc] (ecmascript)");
const ssoTokenRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/ssoTokenRequest.js [app-rsc] (ecmascript)");
const ssoTokenRequestCorporate_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/ssoTokenRequestCorporate.js [app-rsc] (ecmascript)");
const subAccountAppsToggleRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountAppsToggleRequest.js [app-rsc] (ecmascript)");
const subAccountDetailsResponse_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponse.js [app-rsc] (ecmascript)");
const subAccountDetailsResponseGroupsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponseGroupsInner.js [app-rsc] (ecmascript)");
const subAccountDetailsResponsePlanInfo_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfo.js [app-rsc] (ecmascript)");
const subAccountDetailsResponsePlanInfoCredits_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoCredits.js [app-rsc] (ecmascript)");
const subAccountDetailsResponsePlanInfoCreditsEmails_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoCreditsEmails.js [app-rsc] (ecmascript)");
const subAccountDetailsResponsePlanInfoCreditsSms_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoCreditsSms.js [app-rsc] (ecmascript)");
const subAccountDetailsResponsePlanInfoCreditsWpSubscribers_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoCreditsWpSubscribers.js [app-rsc] (ecmascript)");
const subAccountDetailsResponsePlanInfoFeatures_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoFeatures.js [app-rsc] (ecmascript)");
const subAccountDetailsResponsePlanInfoFeaturesInbox_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoFeaturesInbox.js [app-rsc] (ecmascript)");
const subAccountDetailsResponsePlanInfoFeaturesLandingPage_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoFeaturesLandingPage.js [app-rsc] (ecmascript)");
const subAccountDetailsResponsePlanInfoFeaturesUsers_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountDetailsResponsePlanInfoFeaturesUsers.js [app-rsc] (ecmascript)");
const subAccountUpdatePlanRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountUpdatePlanRequest.js [app-rsc] (ecmascript)");
const subAccountUpdatePlanRequestCredits_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountUpdatePlanRequestCredits.js [app-rsc] (ecmascript)");
const subAccountUpdatePlanRequestFeatures_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountUpdatePlanRequestFeatures.js [app-rsc] (ecmascript)");
const subAccountsResponse_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountsResponse.js [app-rsc] (ecmascript)");
const subAccountsResponseSubAccountsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountsResponseSubAccountsInner.js [app-rsc] (ecmascript)");
const subAccountsResponseSubAccountsInnerGroupsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/subAccountsResponseSubAccountsInnerGroupsInner.js [app-rsc] (ecmascript)");
const task_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/task.js [app-rsc] (ecmascript)");
const taskList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/taskList.js [app-rsc] (ecmascript)");
const taskReminder_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/taskReminder.js [app-rsc] (ecmascript)");
const taskTypes_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/taskTypes.js [app-rsc] (ecmascript)");
const updateAttribute_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateAttribute.js [app-rsc] (ecmascript)");
const updateAttributeEnumerationInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateAttributeEnumerationInner.js [app-rsc] (ecmascript)");
const updateBatchContacts_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateBatchContacts.js [app-rsc] (ecmascript)");
const updateBatchContactsContactsInner_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateBatchContactsContactsInner.js [app-rsc] (ecmascript)");
const updateBatchContactsModel_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateBatchContactsModel.js [app-rsc] (ecmascript)");
const updateCampaignStatus_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateCampaignStatus.js [app-rsc] (ecmascript)");
const updateChild_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateChild.js [app-rsc] (ecmascript)");
const updateChildAccountStatus_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateChildAccountStatus.js [app-rsc] (ecmascript)");
const updateChildDomain_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateChildDomain.js [app-rsc] (ecmascript)");
const updateContact_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateContact.js [app-rsc] (ecmascript)");
const updateCouponCollection200Response_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateCouponCollection200Response.js [app-rsc] (ecmascript)");
const updateCouponCollectionRequest_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateCouponCollectionRequest.js [app-rsc] (ecmascript)");
const updateEmailCampaign_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateEmailCampaign.js [app-rsc] (ecmascript)");
const updateEmailCampaignRecipients_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateEmailCampaignRecipients.js [app-rsc] (ecmascript)");
const updateEmailCampaignSender_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateEmailCampaignSender.js [app-rsc] (ecmascript)");
const updateExternalFeed_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateExternalFeed.js [app-rsc] (ecmascript)");
const updateList_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateList.js [app-rsc] (ecmascript)");
const updateSender_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateSender.js [app-rsc] (ecmascript)");
const updateSmsCampaign_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateSmsCampaign.js [app-rsc] (ecmascript)");
const updateSmtpTemplate_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateSmtpTemplate.js [app-rsc] (ecmascript)");
const updateSmtpTemplateSender_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateSmtpTemplateSender.js [app-rsc] (ecmascript)");
const updateWebhook_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateWebhook.js [app-rsc] (ecmascript)");
const updateWhatsAppCampaign_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/updateWhatsAppCampaign.js [app-rsc] (ecmascript)");
const uploadImageModel_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/uploadImageModel.js [app-rsc] (ecmascript)");
const uploadImageToGallery_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/uploadImageToGallery.js [app-rsc] (ecmascript)");
const variablesItems_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/variablesItems.js [app-rsc] (ecmascript)");
const whatsappCampStats_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/whatsappCampStats.js [app-rsc] (ecmascript)");
const whatsappCampTemplate_1 = __turbopack_context__.r("[project]/node_modules/@getbrevo/brevo/dist/model/whatsappCampTemplate.js [app-rsc] (ecmascript)");
let primitives = [
    "string",
    "boolean",
    "double",
    "integer",
    "long",
    "float",
    "number",
    "any"
];
let enumsMap = {
    "AbTestCampaignResult.WinningVersionEnum": abTestCampaignResult_1.AbTestCampaignResult.WinningVersionEnum,
    "AbTestCampaignResult.WinningCriteriaEnum": abTestCampaignResult_1.AbTestCampaignResult.WinningCriteriaEnum,
    "Cart.CurrencyEnum": cart_1.Cart.CurrencyEnum,
    "ConversationsMessage.TypeEnum": conversationsMessage_1.ConversationsMessage.TypeEnum,
    "ConversionSourceMetrics.ConversionSourceEnum": conversionSourceMetrics_1.ConversionSourceMetrics.ConversionSourceEnum,
    "CreateAttribute.TypeEnum": createAttribute_1.CreateAttribute.TypeEnum,
    "CreateChild.LanguageEnum": createChild_1.CreateChild.LanguageEnum,
    "CreateEmailCampaign.WinnerCriteriaEnum": createEmailCampaign_1.CreateEmailCampaign.WinnerCriteriaEnum,
    "CreateExternalFeed.AuthTypeEnum": createExternalFeed_1.CreateExternalFeed.AuthTypeEnum,
    "CreateSubAccount.LanguageEnum": createSubAccount_1.CreateSubAccount.LanguageEnum,
    "CreateWebhook.EventsEnum": createWebhook_1.CreateWebhook.EventsEnum,
    "CreateWebhook.TypeEnum": createWebhook_1.CreateWebhook.TypeEnum,
    "CreateWhatsAppTemplate.CategoryEnum": createWhatsAppTemplate_1.CreateWhatsAppTemplate.CategoryEnum,
    "CreateWhatsAppTemplate.SourceEnum": createWhatsAppTemplate_1.CreateWhatsAppTemplate.SourceEnum,
    "EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response.ConversionSourceEnum": ecommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response_1.EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response.ConversionSourceEnum,
    "EmailExportRecipients.RecipientsTypeEnum": emailExportRecipients_1.EmailExportRecipients.RecipientsTypeEnum,
    "ErrorModel.CodeEnum": errorModel_1.ErrorModel.CodeEnum,
    "ExportWebhooksHistory.TypeEnum": exportWebhooksHistory_1.ExportWebhooksHistory.TypeEnum,
    "ExportWebhooksHistory.EventEnum": exportWebhooksHistory_1.ExportWebhooksHistory.EventEnum,
    "GetAccountAllOfPlan.TypeEnum": getAccountAllOfPlan_1.GetAccountAllOfPlan.TypeEnum,
    "GetAccountAllOfPlan.CreditsTypeEnum": getAccountAllOfPlan_1.GetAccountAllOfPlan.CreditsTypeEnum,
    "GetAllExternalFeedsFeedsInner.AuthTypeEnum": getAllExternalFeedsFeedsInner_1.GetAllExternalFeedsFeedsInner.AuthTypeEnum,
    "GetAttributesAttributesInner.CategoryEnum": getAttributesAttributesInner_1.GetAttributesAttributesInner.CategoryEnum,
    "GetAttributesAttributesInner.TypeEnum": getAttributesAttributesInner_1.GetAttributesAttributesInner.TypeEnum,
    "GetCampaignOverview.TypeEnum": getCampaignOverview_1.GetCampaignOverview.TypeEnum,
    "GetCampaignOverview.StatusEnum": getCampaignOverview_1.GetCampaignOverview.StatusEnum,
    "GetEmailCampaign.TypeEnum": getEmailCampaign_1.GetEmailCampaign.TypeEnum,
    "GetEmailCampaign.StatusEnum": getEmailCampaign_1.GetEmailCampaign.StatusEnum,
    "GetEmailCampaignsCampaignsInner.TypeEnum": getEmailCampaignsCampaignsInner_1.GetEmailCampaignsCampaignsInner.TypeEnum,
    "GetEmailCampaignsCampaignsInner.StatusEnum": getEmailCampaignsCampaignsInner_1.GetEmailCampaignsCampaignsInner.StatusEnum,
    "GetEmailEventReportEventsInner.EventEnum": getEmailEventReportEventsInner_1.GetEmailEventReportEventsInner.EventEnum,
    "GetExtendedCampaignOverview.TypeEnum": getExtendedCampaignOverview_1.GetExtendedCampaignOverview.TypeEnum,
    "GetExtendedCampaignOverview.StatusEnum": getExtendedCampaignOverview_1.GetExtendedCampaignOverview.StatusEnum,
    "GetExternalFeedByUUID.AuthTypeEnum": getExternalFeedByUUID_1.GetExternalFeedByUUID.AuthTypeEnum,
    "GetInboundEmailEventsByUuidLogsInner.TypeEnum": getInboundEmailEventsByUuidLogsInner_1.GetInboundEmailEventsByUuidLogsInner.TypeEnum,
    "GetPaymentRequest.StatusEnum": getPaymentRequest_1.GetPaymentRequest.StatusEnum,
    "GetProcess.StatusEnum": getProcess_1.GetProcess.StatusEnum,
    "GetScheduledEmailByBatchIdBatchesInner.StatusEnum": getScheduledEmailByBatchIdBatchesInner_1.GetScheduledEmailByBatchIdBatchesInner.StatusEnum,
    "GetScheduledEmailByMessageId.StatusEnum": getScheduledEmailByMessageId_1.GetScheduledEmailByMessageId.StatusEnum,
    "GetSmsCampaign.StatusEnum": getSmsCampaign_1.GetSmsCampaign.StatusEnum,
    "GetSmsCampaignOverview.StatusEnum": getSmsCampaignOverview_1.GetSmsCampaignOverview.StatusEnum,
    "GetSmsCampaignsCampaignsInner.StatusEnum": getSmsCampaignsCampaignsInner_1.GetSmsCampaignsCampaignsInner.StatusEnum,
    "GetSmsEventReportEventsInner.EventEnum": getSmsEventReportEventsInner_1.GetSmsEventReportEventsInner.EventEnum,
    "GetTransacBlockedContactsContactsInnerReason.CodeEnum": getTransacBlockedContactsContactsInnerReason_1.GetTransacBlockedContactsContactsInnerReason.CodeEnum,
    "GetWebhook.TypeEnum": getWebhook_1.GetWebhook.TypeEnum,
    "GetWhatsAppConfig.PhoneNumberQualityEnum": getWhatsAppConfig_1.GetWhatsAppConfig.PhoneNumberQualityEnum,
    "GetWhatsAppConfig.PhoneNumberNameStatusEnum": getWhatsAppConfig_1.GetWhatsAppConfig.PhoneNumberNameStatusEnum,
    "GetWhatsappCampaignOverview.CampaignStatusEnum": getWhatsappCampaignOverview_1.GetWhatsappCampaignOverview.CampaignStatusEnum,
    "GetWhatsappCampaignsCampaignsInner.CampaignStatusEnum": getWhatsappCampaignsCampaignsInner_1.GetWhatsappCampaignsCampaignsInner.CampaignStatusEnum,
    "GetWhatsappEventReportEventsInner.EventEnum": getWhatsappEventReportEventsInner_1.GetWhatsappEventReportEventsInner.EventEnum,
    "InviteAdminUserPrivilegesInner.FeatureEnum": inviteAdminUserPrivilegesInner_1.InviteAdminUserPrivilegesInner.FeatureEnum,
    "InviteAdminUserPrivilegesInner.PermissionsEnum": inviteAdminUserPrivilegesInner_1.InviteAdminUserPrivilegesInner.PermissionsEnum,
    "InviteuserPrivilegesInner.FeatureEnum": inviteuserPrivilegesInner_1.InviteuserPrivilegesInner.FeatureEnum,
    "InviteuserPrivilegesInner.PermissionsEnum": inviteuserPrivilegesInner_1.InviteuserPrivilegesInner.PermissionsEnum,
    "MasterDetailsResponsePlanInfo.PlanPeriodEnum": masterDetailsResponsePlanInfo_1.MasterDetailsResponsePlanInfo.PlanPeriodEnum,
    "Notification.ChannelEnum": notification_1.Notification.ChannelEnum,
    "RequestContactExportCustomContactFilter.ActionForContactsEnum": requestContactExportCustomContactFilter_1.RequestContactExportCustomContactFilter.ActionForContactsEnum,
    "RequestContactExportCustomContactFilter.ActionForEmailCampaignsEnum": requestContactExportCustomContactFilter_1.RequestContactExportCustomContactFilter.ActionForEmailCampaignsEnum,
    "RequestContactExportCustomContactFilter.ActionForSmsCampaignsEnum": requestContactExportCustomContactFilter_1.RequestContactExportCustomContactFilter.ActionForSmsCampaignsEnum,
    "RequestSmsRecipientExport.RecipientsTypeEnum": requestSmsRecipientExport_1.RequestSmsRecipientExport.RecipientsTypeEnum,
    "SendReport.LanguageEnum": sendReport_1.SendReport.LanguageEnum,
    "SendTransacSms.TypeEnum": sendTransacSms_1.SendTransacSms.TypeEnum,
    "SsoTokenRequest.TargetEnum": ssoTokenRequest_1.SsoTokenRequest.TargetEnum,
    "TaskReminder.UnitEnum": taskReminder_1.TaskReminder.UnitEnum,
    "UpdateCampaignStatus.StatusEnum": updateCampaignStatus_1.UpdateCampaignStatus.StatusEnum,
    "UpdateEmailCampaign.WinnerCriteriaEnum": updateEmailCampaign_1.UpdateEmailCampaign.WinnerCriteriaEnum,
    "UpdateExternalFeed.AuthTypeEnum": updateExternalFeed_1.UpdateExternalFeed.AuthTypeEnum,
    "UpdateWebhook.EventsEnum": updateWebhook_1.UpdateWebhook.EventsEnum,
    "UpdateWhatsAppCampaign.CampaignStatusEnum": updateWhatsAppCampaign_1.UpdateWhatsAppCampaign.CampaignStatusEnum
};
let typeMap = {
    "AbTestCampaignResult": abTestCampaignResult_1.AbTestCampaignResult,
    "AbTestCampaignResultClickedLinks": abTestCampaignResultClickedLinks_1.AbTestCampaignResultClickedLinks,
    "AbTestCampaignResultStatistics": abTestCampaignResultStatistics_1.AbTestCampaignResultStatistics,
    "AbTestVersionClicksInner": abTestVersionClicksInner_1.AbTestVersionClicksInner,
    "AbTestVersionStats": abTestVersionStats_1.AbTestVersionStats,
    "AddChildDomain": addChildDomain_1.AddChildDomain,
    "AddContactToList": addContactToList_1.AddContactToList,
    "AddCredits": addCredits_1.AddCredits,
    "AuthenticateDomainModel": authenticateDomainModel_1.AuthenticateDomainModel,
    "BlockDomain": blockDomain_1.BlockDomain,
    "Cart": cart_1.Cart,
    "CompaniesIdPatchRequest": companiesIdPatchRequest_1.CompaniesIdPatchRequest,
    "CompaniesLinkUnlinkIdPatchRequest": companiesLinkUnlinkIdPatchRequest_1.CompaniesLinkUnlinkIdPatchRequest,
    "CompaniesList": companiesList_1.CompaniesList,
    "CompaniesPost200Response": companiesPost200Response_1.CompaniesPost200Response,
    "CompaniesPostRequest": companiesPostRequest_1.CompaniesPostRequest,
    "Company": company_1.Company,
    "CompanyAttributesInner": companyAttributesInner_1.CompanyAttributesInner,
    "ComponentItems": componentItems_1.ComponentItems,
    "Configuration": configuration_1.Configuration,
    "ConversationsAgentOnlinePingPostRequest": conversationsAgentOnlinePingPostRequest_1.ConversationsAgentOnlinePingPostRequest,
    "ConversationsMessage": conversationsMessage_1.ConversationsMessage,
    "ConversationsMessageFile": conversationsMessageFile_1.ConversationsMessageFile,
    "ConversationsMessageFileImageInfo": conversationsMessageFileImageInfo_1.ConversationsMessageFileImageInfo,
    "ConversationsMessagesIdPutRequest": conversationsMessagesIdPutRequest_1.ConversationsMessagesIdPutRequest,
    "ConversationsMessagesPostRequest": conversationsMessagesPostRequest_1.ConversationsMessagesPostRequest,
    "ConversationsPushedMessagesIdPutRequest": conversationsPushedMessagesIdPutRequest_1.ConversationsPushedMessagesIdPutRequest,
    "ConversationsPushedMessagesPostRequest": conversationsPushedMessagesPostRequest_1.ConversationsPushedMessagesPostRequest,
    "ConversionSourceMetrics": conversionSourceMetrics_1.ConversionSourceMetrics,
    "ConversionSourceProduct": conversionSourceProduct_1.ConversionSourceProduct,
    "CorporateGroupDetailsResponse": corporateGroupDetailsResponse_1.CorporateGroupDetailsResponse,
    "CorporateGroupDetailsResponseGroup": corporateGroupDetailsResponseGroup_1.CorporateGroupDetailsResponseGroup,
    "CorporateGroupDetailsResponseSubAccountsInner": corporateGroupDetailsResponseSubAccountsInner_1.CorporateGroupDetailsResponseSubAccountsInner,
    "CorporateGroupDetailsResponseUsersInner": corporateGroupDetailsResponseUsersInner_1.CorporateGroupDetailsResponseUsersInner,
    "CorporateGroupPost201Response": corporateGroupPost201Response_1.CorporateGroupPost201Response,
    "CorporateGroupPostRequest": corporateGroupPostRequest_1.CorporateGroupPostRequest,
    "CorporateGroupUnlinkGroupIdSubAccountsPutRequest": corporateGroupUnlinkGroupIdSubAccountsPutRequest_1.CorporateGroupUnlinkGroupIdSubAccountsPutRequest,
    "CorporateSubAccountIpAssociatePostRequest": corporateSubAccountIpAssociatePostRequest_1.CorporateSubAccountIpAssociatePostRequest,
    "CorporateSubAccountIpDissociatePutRequest": corporateSubAccountIpDissociatePutRequest_1.CorporateSubAccountIpDissociatePutRequest,
    "CorporateUserInvitationActionEmailPut200Response": corporateUserInvitationActionEmailPut200Response_1.CorporateUserInvitationActionEmailPut200Response,
    "CreateApiKeyRequest": createApiKeyRequest_1.CreateApiKeyRequest,
    "CreateApiKeyResponse": createApiKeyResponse_1.CreateApiKeyResponse,
    "CreateAttribute": createAttribute_1.CreateAttribute,
    "CreateAttributeEnumerationInner": createAttributeEnumerationInner_1.CreateAttributeEnumerationInner,
    "CreateCategoryModel": createCategoryModel_1.CreateCategoryModel,
    "CreateChild": createChild_1.CreateChild,
    "CreateContact": createContact_1.CreateContact,
    "CreateCouponCollection201Response": createCouponCollection201Response_1.CreateCouponCollection201Response,
    "CreateCouponCollectionRequest": createCouponCollectionRequest_1.CreateCouponCollectionRequest,
    "CreateCouponsRequest": createCouponsRequest_1.CreateCouponsRequest,
    "CreateDoiContact": createDoiContact_1.CreateDoiContact,
    "CreateDomain": createDomain_1.CreateDomain,
    "CreateDomainModel": createDomainModel_1.CreateDomainModel,
    "CreateDomainModelDnsRecords": createDomainModelDnsRecords_1.CreateDomainModelDnsRecords,
    "CreateDomainModelDnsRecordsDkimRecord": createDomainModelDnsRecordsDkimRecord_1.CreateDomainModelDnsRecordsDkimRecord,
    "CreateEmailCampaign": createEmailCampaign_1.CreateEmailCampaign,
    "CreateEmailCampaignRecipients": createEmailCampaignRecipients_1.CreateEmailCampaignRecipients,
    "CreateEmailCampaignSender": createEmailCampaignSender_1.CreateEmailCampaignSender,
    "CreateExternalFeed": createExternalFeed_1.CreateExternalFeed,
    "CreateExternalFeed201Response": createExternalFeed201Response_1.CreateExternalFeed201Response,
    "CreateList": createList_1.CreateList,
    "CreateModel": createModel_1.CreateModel,
    "CreatePaymentRequest": createPaymentRequest_1.CreatePaymentRequest,
    "CreatePaymentResponse": createPaymentResponse_1.CreatePaymentResponse,
    "CreateProductModel": createProductModel_1.CreateProductModel,
    "CreateReseller": createReseller_1.CreateReseller,
    "CreateSender": createSender_1.CreateSender,
    "CreateSenderIpsInner": createSenderIpsInner_1.CreateSenderIpsInner,
    "CreateSenderModel": createSenderModel_1.CreateSenderModel,
    "CreateSmsCampaign": createSmsCampaign_1.CreateSmsCampaign,
    "CreateSmsCampaignRecipients": createSmsCampaignRecipients_1.CreateSmsCampaignRecipients,
    "CreateSmtpEmail": createSmtpEmail_1.CreateSmtpEmail,
    "CreateSmtpTemplate": createSmtpTemplate_1.CreateSmtpTemplate,
    "CreateSmtpTemplateSender": createSmtpTemplateSender_1.CreateSmtpTemplateSender,
    "CreateSubAccount": createSubAccount_1.CreateSubAccount,
    "CreateSubAccountResponse": createSubAccountResponse_1.CreateSubAccountResponse,
    "CreateUpdateBatchCategory": createUpdateBatchCategory_1.CreateUpdateBatchCategory,
    "CreateUpdateBatchCategoryModel": createUpdateBatchCategoryModel_1.CreateUpdateBatchCategoryModel,
    "CreateUpdateBatchProducts": createUpdateBatchProducts_1.CreateUpdateBatchProducts,
    "CreateUpdateBatchProductsModel": createUpdateBatchProductsModel_1.CreateUpdateBatchProductsModel,
    "CreateUpdateCategories": createUpdateCategories_1.CreateUpdateCategories,
    "CreateUpdateCategory": createUpdateCategory_1.CreateUpdateCategory,
    "CreateUpdateContactModel": createUpdateContactModel_1.CreateUpdateContactModel,
    "CreateUpdateFolder": createUpdateFolder_1.CreateUpdateFolder,
    "CreateUpdateProduct": createUpdateProduct_1.CreateUpdateProduct,
    "CreateUpdateProducts": createUpdateProducts_1.CreateUpdateProducts,
    "CreateWebhook": createWebhook_1.CreateWebhook,
    "CreateWhatsAppCampaign": createWhatsAppCampaign_1.CreateWhatsAppCampaign,
    "CreateWhatsAppCampaignRecipients": createWhatsAppCampaignRecipients_1.CreateWhatsAppCampaignRecipients,
    "CreateWhatsAppTemplate": createWhatsAppTemplate_1.CreateWhatsAppTemplate,
    "CreatedBatchId": createdBatchId_1.CreatedBatchId,
    "CreatedProcessId": createdProcessId_1.CreatedProcessId,
    "CrmDealsIdPatchRequest": crmDealsIdPatchRequest_1.CrmDealsIdPatchRequest,
    "CrmDealsLinkUnlinkIdPatchRequest": crmDealsLinkUnlinkIdPatchRequest_1.CrmDealsLinkUnlinkIdPatchRequest,
    "CrmDealsPost201Response": crmDealsPost201Response_1.CrmDealsPost201Response,
    "CrmDealsPostRequest": crmDealsPostRequest_1.CrmDealsPostRequest,
    "CrmTasksIdPatchRequest": crmTasksIdPatchRequest_1.CrmTasksIdPatchRequest,
    "CrmTasksPost201Response": crmTasksPost201Response_1.CrmTasksPost201Response,
    "CrmTasksPostRequest": crmTasksPostRequest_1.CrmTasksPostRequest,
    "Deal": deal_1.Deal,
    "DealAttributesInner": dealAttributesInner_1.DealAttributesInner,
    "DealsList": dealsList_1.DealsList,
    "DeleteHardbounces": deleteHardbounces_1.DeleteHardbounces,
    "EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response": ecommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response_1.EcommerceAttributionMetricsConversionSourceConversionSourceIdGet200Response,
    "EcommerceAttributionMetricsGet200Response": ecommerceAttributionMetricsGet200Response_1.EcommerceAttributionMetricsGet200Response,
    "EcommerceAttributionMetricsGet200ResponseTotals": ecommerceAttributionMetricsGet200ResponseTotals_1.EcommerceAttributionMetricsGet200ResponseTotals,
    "EcommerceAttributionProductsConversionSourceConversionSourceIdGet200Response": ecommerceAttributionProductsConversionSourceConversionSourceIdGet200Response_1.EcommerceAttributionProductsConversionSourceConversionSourceIdGet200Response,
    "EcommerceConfigDisplayCurrencyGet200Response": ecommerceConfigDisplayCurrencyGet200Response_1.EcommerceConfigDisplayCurrencyGet200Response,
    "EmailExportRecipients": emailExportRecipients_1.EmailExportRecipients,
    "ErrorModel": errorModel_1.ErrorModel,
    "Event": event_1.Event,
    "EventIdentifiers": eventIdentifiers_1.EventIdentifiers,
    "ExportWebhooksHistory": exportWebhooksHistory_1.ExportWebhooksHistory,
    "FileData": fileData_1.FileData,
    "FileDownloadableLink": fileDownloadableLink_1.FileDownloadableLink,
    "GetAccount": getAccount_1.GetAccount,
    "GetAccountActivity": getAccountActivity_1.GetAccountActivity,
    "GetAccountActivityLogsInner": getAccountActivityLogsInner_1.GetAccountActivityLogsInner,
    "GetAccountAllOfMarketingAutomation": getAccountAllOfMarketingAutomation_1.GetAccountAllOfMarketingAutomation,
    "GetAccountAllOfPlan": getAccountAllOfPlan_1.GetAccountAllOfPlan,
    "GetAccountAllOfRelay": getAccountAllOfRelay_1.GetAccountAllOfRelay,
    "GetAccountAllOfRelayData": getAccountAllOfRelayData_1.GetAccountAllOfRelayData,
    "GetAggregatedReport": getAggregatedReport_1.GetAggregatedReport,
    "GetAllExternalFeeds": getAllExternalFeeds_1.GetAllExternalFeeds,
    "GetAllExternalFeedsFeedsInner": getAllExternalFeedsFeedsInner_1.GetAllExternalFeedsFeedsInner,
    "GetAttributes": getAttributes_1.GetAttributes,
    "GetAttributesAttributesInner": getAttributesAttributesInner_1.GetAttributesAttributesInner,
    "GetAttributesAttributesInnerEnumerationInner": getAttributesAttributesInnerEnumerationInner_1.GetAttributesAttributesInnerEnumerationInner,
    "GetBlockedDomains": getBlockedDomains_1.GetBlockedDomains,
    "GetCampaignOverview": getCampaignOverview_1.GetCampaignOverview,
    "GetCampaignRecipients": getCampaignRecipients_1.GetCampaignRecipients,
    "GetCampaignStats": getCampaignStats_1.GetCampaignStats,
    "GetCategories": getCategories_1.GetCategories,
    "GetCategoryDetails": getCategoryDetails_1.GetCategoryDetails,
    "GetChildAccountCreationStatus": getChildAccountCreationStatus_1.GetChildAccountCreationStatus,
    "GetChildDomain": getChildDomain_1.GetChildDomain,
    "GetChildInfo": getChildInfo_1.GetChildInfo,
    "GetChildInfoAllOfApiKeys": getChildInfoAllOfApiKeys_1.GetChildInfoAllOfApiKeys,
    "GetChildInfoAllOfApiKeysV2": getChildInfoAllOfApiKeysV2_1.GetChildInfoAllOfApiKeysV2,
    "GetChildInfoAllOfApiKeysV3": getChildInfoAllOfApiKeysV3_1.GetChildInfoAllOfApiKeysV3,
    "GetChildInfoAllOfCredits": getChildInfoAllOfCredits_1.GetChildInfoAllOfCredits,
    "GetChildInfoAllOfStatistics": getChildInfoAllOfStatistics_1.GetChildInfoAllOfStatistics,
    "GetChildrenList": getChildrenList_1.GetChildrenList,
    "GetChildrenListChildrenInner": getChildrenListChildrenInner_1.GetChildrenListChildrenInner,
    "GetClient": getClient_1.GetClient,
    "GetContactCampaignStats": getContactCampaignStats_1.GetContactCampaignStats,
    "GetContactCampaignStatsClickedInner": getContactCampaignStatsClickedInner_1.GetContactCampaignStatsClickedInner,
    "GetContactCampaignStatsClickedInnerLinksInner": getContactCampaignStatsClickedInnerLinksInner_1.GetContactCampaignStatsClickedInnerLinksInner,
    "GetContactCampaignStatsMessagesSentInner": getContactCampaignStatsMessagesSentInner_1.GetContactCampaignStatsMessagesSentInner,
    "GetContactCampaignStatsOpenedInner": getContactCampaignStatsOpenedInner_1.GetContactCampaignStatsOpenedInner,
    "GetContactCampaignStatsTransacAttributesInner": getContactCampaignStatsTransacAttributesInner_1.GetContactCampaignStatsTransacAttributesInner,
    "GetContactCampaignStatsUnsubscriptions": getContactCampaignStatsUnsubscriptions_1.GetContactCampaignStatsUnsubscriptions,
    "GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner": getContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner_1.GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionInner,
    "GetContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner": getContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner_1.GetContactCampaignStatsUnsubscriptionsUserUnsubscriptionInner,
    "GetContactDetails": getContactDetails_1.GetContactDetails,
    "GetContacts": getContacts_1.GetContacts,
    "GetCorporateInvitedUsersList": getCorporateInvitedUsersList_1.GetCorporateInvitedUsersList,
    "GetCorporateInvitedUsersListUsersInner": getCorporateInvitedUsersListUsersInner_1.GetCorporateInvitedUsersListUsersInner,
    "GetCorporateInvitedUsersListUsersInnerFeatureAccess": getCorporateInvitedUsersListUsersInnerFeatureAccess_1.GetCorporateInvitedUsersListUsersInnerFeatureAccess,
    "GetCorporateInvitedUsersListUsersInnerGroups": getCorporateInvitedUsersListUsersInnerGroups_1.GetCorporateInvitedUsersListUsersInnerGroups,
    "GetCorporateUserPermission": getCorporateUserPermission_1.GetCorporateUserPermission,
    "GetCorporateUserPermissionFeatureAccess": getCorporateUserPermissionFeatureAccess_1.GetCorporateUserPermissionFeatureAccess,
    "GetCorporateUserPermissionGroupsInner": getCorporateUserPermissionGroupsInner_1.GetCorporateUserPermissionGroupsInner,
    "GetCouponCollection": getCouponCollection_1.GetCouponCollection,
    "GetDeviceBrowserStats": getDeviceBrowserStats_1.GetDeviceBrowserStats,
    "GetDomainConfigurationModel": getDomainConfigurationModel_1.GetDomainConfigurationModel,
    "GetDomainsList": getDomainsList_1.GetDomainsList,
    "GetDomainsListDomainsInner": getDomainsListDomainsInner_1.GetDomainsListDomainsInner,
    "GetEmailCampaign": getEmailCampaign_1.GetEmailCampaign,
    "GetEmailCampaigns": getEmailCampaigns_1.GetEmailCampaigns,
    "GetEmailCampaignsCampaignsInner": getEmailCampaignsCampaignsInner_1.GetEmailCampaignsCampaignsInner,
    "GetEmailEventReport": getEmailEventReport_1.GetEmailEventReport,
    "GetEmailEventReportEventsInner": getEmailEventReportEventsInner_1.GetEmailEventReportEventsInner,
    "GetExtendedCampaignOverview": getExtendedCampaignOverview_1.GetExtendedCampaignOverview,
    "GetExtendedCampaignOverviewAllOfSender": getExtendedCampaignOverviewAllOfSender_1.GetExtendedCampaignOverviewAllOfSender,
    "GetExtendedCampaignStats": getExtendedCampaignStats_1.GetExtendedCampaignStats,
    "GetExtendedClient": getExtendedClient_1.GetExtendedClient,
    "GetExtendedClientAllOfAddress": getExtendedClientAllOfAddress_1.GetExtendedClientAllOfAddress,
    "GetExtendedContactDetails": getExtendedContactDetails_1.GetExtendedContactDetails,
    "GetExtendedContactDetailsAllOfStatistics": getExtendedContactDetailsAllOfStatistics_1.GetExtendedContactDetailsAllOfStatistics,
    "GetExtendedContactDetailsAllOfStatisticsClicked": getExtendedContactDetailsAllOfStatisticsClicked_1.GetExtendedContactDetailsAllOfStatisticsClicked,
    "GetExtendedContactDetailsAllOfStatisticsLinks": getExtendedContactDetailsAllOfStatisticsLinks_1.GetExtendedContactDetailsAllOfStatisticsLinks,
    "GetExtendedContactDetailsAllOfStatisticsMessagesSent": getExtendedContactDetailsAllOfStatisticsMessagesSent_1.GetExtendedContactDetailsAllOfStatisticsMessagesSent,
    "GetExtendedContactDetailsAllOfStatisticsOpened": getExtendedContactDetailsAllOfStatisticsOpened_1.GetExtendedContactDetailsAllOfStatisticsOpened,
    "GetExtendedContactDetailsAllOfStatisticsUnsubscriptions": getExtendedContactDetailsAllOfStatisticsUnsubscriptions_1.GetExtendedContactDetailsAllOfStatisticsUnsubscriptions,
    "GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription": getExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription_1.GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsAdminUnsubscription,
    "GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription": getExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription_1.GetExtendedContactDetailsAllOfStatisticsUnsubscriptionsUserUnsubscription,
    "GetExtendedList": getExtendedList_1.GetExtendedList,
    "GetExtendedListAllOfCampaignStats": getExtendedListAllOfCampaignStats_1.GetExtendedListAllOfCampaignStats,
    "GetExternalFeedByUUID": getExternalFeedByUUID_1.GetExternalFeedByUUID,
    "GetExternalFeedByUUIDHeadersInner": getExternalFeedByUUIDHeadersInner_1.GetExternalFeedByUUIDHeadersInner,
    "GetFolder": getFolder_1.GetFolder,
    "GetFolderLists": getFolderLists_1.GetFolderLists,
    "GetFolders": getFolders_1.GetFolders,
    "GetInboundEmailEvents": getInboundEmailEvents_1.GetInboundEmailEvents,
    "GetInboundEmailEventsByUuid": getInboundEmailEventsByUuid_1.GetInboundEmailEventsByUuid,
    "GetInboundEmailEventsByUuidAttachmentsInner": getInboundEmailEventsByUuidAttachmentsInner_1.GetInboundEmailEventsByUuidAttachmentsInner,
    "GetInboundEmailEventsByUuidLogsInner": getInboundEmailEventsByUuidLogsInner_1.GetInboundEmailEventsByUuidLogsInner,
    "GetInboundEmailEventsEventsInner": getInboundEmailEventsEventsInner_1.GetInboundEmailEventsEventsInner,
    "GetInvitedUsersList": getInvitedUsersList_1.GetInvitedUsersList,
    "GetInvitedUsersListUsersInner": getInvitedUsersListUsersInner_1.GetInvitedUsersListUsersInner,
    "GetInvitedUsersListUsersInnerFeatureAccess": getInvitedUsersListUsersInnerFeatureAccess_1.GetInvitedUsersListUsersInnerFeatureAccess,
    "GetIp": getIp_1.GetIp,
    "GetIpFromSender": getIpFromSender_1.GetIpFromSender,
    "GetIps": getIps_1.GetIps,
    "GetIpsFromSender": getIpsFromSender_1.GetIpsFromSender,
    "GetList": getList_1.GetList,
    "GetLists": getLists_1.GetLists,
    "GetListsListsInner": getListsListsInner_1.GetListsListsInner,
    "GetOrders": getOrders_1.GetOrders,
    "GetOrdersOrdersInner": getOrdersOrdersInner_1.GetOrdersOrdersInner,
    "GetPaymentRequest": getPaymentRequest_1.GetPaymentRequest,
    "GetProcess": getProcess_1.GetProcess,
    "GetProcesses": getProcesses_1.GetProcesses,
    "GetProductDetails": getProductDetails_1.GetProductDetails,
    "GetProducts": getProducts_1.GetProducts,
    "GetReports": getReports_1.GetReports,
    "GetReportsReportsInner": getReportsReportsInner_1.GetReportsReportsInner,
    "GetScheduledEmailByBatchId": getScheduledEmailByBatchId_1.GetScheduledEmailByBatchId,
    "GetScheduledEmailByBatchIdBatchesInner": getScheduledEmailByBatchIdBatchesInner_1.GetScheduledEmailByBatchIdBatchesInner,
    "GetScheduledEmailByMessageId": getScheduledEmailByMessageId_1.GetScheduledEmailByMessageId,
    "GetSegments": getSegments_1.GetSegments,
    "GetSegmentsSegments": getSegmentsSegments_1.GetSegmentsSegments,
    "GetSendersList": getSendersList_1.GetSendersList,
    "GetSendersListSendersInner": getSendersListSendersInner_1.GetSendersListSendersInner,
    "GetSendersListSendersInnerIpsInner": getSendersListSendersInnerIpsInner_1.GetSendersListSendersInnerIpsInner,
    "GetSharedTemplateUrl": getSharedTemplateUrl_1.GetSharedTemplateUrl,
    "GetSmsCampaign": getSmsCampaign_1.GetSmsCampaign,
    "GetSmsCampaignOverview": getSmsCampaignOverview_1.GetSmsCampaignOverview,
    "GetSmsCampaignStats": getSmsCampaignStats_1.GetSmsCampaignStats,
    "GetSmsCampaigns": getSmsCampaigns_1.GetSmsCampaigns,
    "GetSmsCampaignsCampaignsInner": getSmsCampaignsCampaignsInner_1.GetSmsCampaignsCampaignsInner,
    "GetSmsEventReport": getSmsEventReport_1.GetSmsEventReport,
    "GetSmsEventReportEventsInner": getSmsEventReportEventsInner_1.GetSmsEventReportEventsInner,
    "GetSmtpTemplateOverview": getSmtpTemplateOverview_1.GetSmtpTemplateOverview,
    "GetSmtpTemplateOverviewSender": getSmtpTemplateOverviewSender_1.GetSmtpTemplateOverviewSender,
    "GetSmtpTemplates": getSmtpTemplates_1.GetSmtpTemplates,
    "GetSsoToken": getSsoToken_1.GetSsoToken,
    "GetStatsByDevice": getStatsByDevice_1.GetStatsByDevice,
    "GetSubAccountGroups200ResponseInner": getSubAccountGroups200ResponseInner_1.GetSubAccountGroups200ResponseInner,
    "GetTransacAggregatedSmsReport": getTransacAggregatedSmsReport_1.GetTransacAggregatedSmsReport,
    "GetTransacBlockedContacts": getTransacBlockedContacts_1.GetTransacBlockedContacts,
    "GetTransacBlockedContactsContactsInner": getTransacBlockedContactsContactsInner_1.GetTransacBlockedContactsContactsInner,
    "GetTransacBlockedContactsContactsInnerReason": getTransacBlockedContactsContactsInnerReason_1.GetTransacBlockedContactsContactsInnerReason,
    "GetTransacEmailContent": getTransacEmailContent_1.GetTransacEmailContent,
    "GetTransacEmailContentEventsInner": getTransacEmailContentEventsInner_1.GetTransacEmailContentEventsInner,
    "GetTransacEmailsList": getTransacEmailsList_1.GetTransacEmailsList,
    "GetTransacEmailsListTransactionalEmailsInner": getTransacEmailsListTransactionalEmailsInner_1.GetTransacEmailsListTransactionalEmailsInner,
    "GetTransacSmsReport": getTransacSmsReport_1.GetTransacSmsReport,
    "GetTransacSmsReportReportsInner": getTransacSmsReportReportsInner_1.GetTransacSmsReportReportsInner,
    "GetUserPermission": getUserPermission_1.GetUserPermission,
    "GetUserPermissionPrivilegesInner": getUserPermissionPrivilegesInner_1.GetUserPermissionPrivilegesInner,
    "GetWATemplates": getWATemplates_1.GetWATemplates,
    "GetWATemplatesTemplatesInner": getWATemplatesTemplatesInner_1.GetWATemplatesTemplatesInner,
    "GetWebhook": getWebhook_1.GetWebhook,
    "GetWebhookAuth": getWebhookAuth_1.GetWebhookAuth,
    "GetWebhookHeadersInner": getWebhookHeadersInner_1.GetWebhookHeadersInner,
    "GetWebhooks": getWebhooks_1.GetWebhooks,
    "GetWhatsAppConfig": getWhatsAppConfig_1.GetWhatsAppConfig,
    "GetWhatsappCampaignOverview": getWhatsappCampaignOverview_1.GetWhatsappCampaignOverview,
    "GetWhatsappCampaigns": getWhatsappCampaigns_1.GetWhatsappCampaigns,
    "GetWhatsappCampaignsCampaignsInner": getWhatsappCampaignsCampaignsInner_1.GetWhatsappCampaignsCampaignsInner,
    "GetWhatsappEventReport": getWhatsappEventReport_1.GetWhatsappEventReport,
    "GetWhatsappEventReportEventsInner": getWhatsappEventReportEventsInner_1.GetWhatsappEventReportEventsInner,
    "InviteAdminUser": inviteAdminUser_1.InviteAdminUser,
    "InviteAdminUserPrivilegesInner": inviteAdminUserPrivilegesInner_1.InviteAdminUserPrivilegesInner,
    "Inviteuser": inviteuser_1.Inviteuser,
    "InviteuserPrivilegesInner": inviteuserPrivilegesInner_1.InviteuserPrivilegesInner,
    "ManageIp": manageIp_1.ManageIp,
    "MasterDetailsResponse": masterDetailsResponse_1.MasterDetailsResponse,
    "MasterDetailsResponseBillingInfo": masterDetailsResponseBillingInfo_1.MasterDetailsResponseBillingInfo,
    "MasterDetailsResponseBillingInfoAddress": masterDetailsResponseBillingInfoAddress_1.MasterDetailsResponseBillingInfoAddress,
    "MasterDetailsResponseBillingInfoName": masterDetailsResponseBillingInfoName_1.MasterDetailsResponseBillingInfoName,
    "MasterDetailsResponsePlanInfo": masterDetailsResponsePlanInfo_1.MasterDetailsResponsePlanInfo,
    "MasterDetailsResponsePlanInfoFeaturesInner": masterDetailsResponsePlanInfoFeaturesInner_1.MasterDetailsResponsePlanInfoFeaturesInner,
    "Note": note_1.Note,
    "NoteData": noteData_1.NoteData,
    "NoteId": noteId_1.NoteId,
    "Notification": notification_1.Notification,
    "Order": order_1.Order,
    "OrderBatch": orderBatch_1.OrderBatch,
    "OrderBilling": orderBilling_1.OrderBilling,
    "OrderProductsInner": orderProductsInner_1.OrderProductsInner,
    "Otp": otp_1.Otp,
    "Pipeline": pipeline_1.Pipeline,
    "PipelineStage": pipelineStage_1.PipelineStage,
    "PostContactInfo": postContactInfo_1.PostContactInfo,
    "PostContactInfoContacts": postContactInfoContacts_1.PostContactInfoContacts,
    "PostSendFailed": postSendFailed_1.PostSendFailed,
    "PostSendSmsTestFailed": postSendSmsTestFailed_1.PostSendSmsTestFailed,
    "PutRevokeUserPermission": putRevokeUserPermission_1.PutRevokeUserPermission,
    "Putresendcancelinvitation": putresendcancelinvitation_1.Putresendcancelinvitation,
    "RemainingCreditModel": remainingCreditModel_1.RemainingCreditModel,
    "RemainingCreditModelChild": remainingCreditModelChild_1.RemainingCreditModelChild,
    "RemainingCreditModelReseller": remainingCreditModelReseller_1.RemainingCreditModelReseller,
    "RemoveContactFromList": removeContactFromList_1.RemoveContactFromList,
    "RemoveCredits": removeCredits_1.RemoveCredits,
    "RequestContactExport": requestContactExport_1.RequestContactExport,
    "RequestContactExportCustomContactFilter": requestContactExportCustomContactFilter_1.RequestContactExportCustomContactFilter,
    "RequestContactImport": requestContactImport_1.RequestContactImport,
    "RequestContactImportJsonBodyInner": requestContactImportJsonBodyInner_1.RequestContactImportJsonBodyInner,
    "RequestContactImportNewList": requestContactImportNewList_1.RequestContactImportNewList,
    "RequestSmsRecipientExport": requestSmsRecipientExport_1.RequestSmsRecipientExport,
    "ScheduleSmtpEmail": scheduleSmtpEmail_1.ScheduleSmtpEmail,
    "SendReport": sendReport_1.SendReport,
    "SendReportEmail": sendReportEmail_1.SendReportEmail,
    "SendSms": sendSms_1.SendSms,
    "SendSmtpEmail": sendSmtpEmail_1.SendSmtpEmail,
    "SendSmtpEmailAttachmentInner": sendSmtpEmailAttachmentInner_1.SendSmtpEmailAttachmentInner,
    "SendSmtpEmailBccInner": sendSmtpEmailBccInner_1.SendSmtpEmailBccInner,
    "SendSmtpEmailCcInner": sendSmtpEmailCcInner_1.SendSmtpEmailCcInner,
    "SendSmtpEmailMessageVersionsInner": sendSmtpEmailMessageVersionsInner_1.SendSmtpEmailMessageVersionsInner,
    "SendSmtpEmailMessageVersionsInnerReplyTo": sendSmtpEmailMessageVersionsInnerReplyTo_1.SendSmtpEmailMessageVersionsInnerReplyTo,
    "SendSmtpEmailMessageVersionsInnerToInner": sendSmtpEmailMessageVersionsInnerToInner_1.SendSmtpEmailMessageVersionsInnerToInner,
    "SendSmtpEmailReplyTo": sendSmtpEmailReplyTo_1.SendSmtpEmailReplyTo,
    "SendSmtpEmailSender": sendSmtpEmailSender_1.SendSmtpEmailSender,
    "SendSmtpEmailToInner": sendSmtpEmailToInner_1.SendSmtpEmailToInner,
    "SendTestEmail": sendTestEmail_1.SendTestEmail,
    "SendTestSms": sendTestSms_1.SendTestSms,
    "SendTransacSms": sendTransacSms_1.SendTransacSms,
    "SendWhatsappMessage": sendWhatsappMessage_1.SendWhatsappMessage,
    "SendWhatsappMessage201Response": sendWhatsappMessage201Response_1.SendWhatsappMessage201Response,
    "SsoTokenRequest": ssoTokenRequest_1.SsoTokenRequest,
    "SsoTokenRequestCorporate": ssoTokenRequestCorporate_1.SsoTokenRequestCorporate,
    "SubAccountAppsToggleRequest": subAccountAppsToggleRequest_1.SubAccountAppsToggleRequest,
    "SubAccountDetailsResponse": subAccountDetailsResponse_1.SubAccountDetailsResponse,
    "SubAccountDetailsResponseGroupsInner": subAccountDetailsResponseGroupsInner_1.SubAccountDetailsResponseGroupsInner,
    "SubAccountDetailsResponsePlanInfo": subAccountDetailsResponsePlanInfo_1.SubAccountDetailsResponsePlanInfo,
    "SubAccountDetailsResponsePlanInfoCredits": subAccountDetailsResponsePlanInfoCredits_1.SubAccountDetailsResponsePlanInfoCredits,
    "SubAccountDetailsResponsePlanInfoCreditsEmails": subAccountDetailsResponsePlanInfoCreditsEmails_1.SubAccountDetailsResponsePlanInfoCreditsEmails,
    "SubAccountDetailsResponsePlanInfoCreditsSms": subAccountDetailsResponsePlanInfoCreditsSms_1.SubAccountDetailsResponsePlanInfoCreditsSms,
    "SubAccountDetailsResponsePlanInfoCreditsWpSubscribers": subAccountDetailsResponsePlanInfoCreditsWpSubscribers_1.SubAccountDetailsResponsePlanInfoCreditsWpSubscribers,
    "SubAccountDetailsResponsePlanInfoFeatures": subAccountDetailsResponsePlanInfoFeatures_1.SubAccountDetailsResponsePlanInfoFeatures,
    "SubAccountDetailsResponsePlanInfoFeaturesInbox": subAccountDetailsResponsePlanInfoFeaturesInbox_1.SubAccountDetailsResponsePlanInfoFeaturesInbox,
    "SubAccountDetailsResponsePlanInfoFeaturesLandingPage": subAccountDetailsResponsePlanInfoFeaturesLandingPage_1.SubAccountDetailsResponsePlanInfoFeaturesLandingPage,
    "SubAccountDetailsResponsePlanInfoFeaturesUsers": subAccountDetailsResponsePlanInfoFeaturesUsers_1.SubAccountDetailsResponsePlanInfoFeaturesUsers,
    "SubAccountUpdatePlanRequest": subAccountUpdatePlanRequest_1.SubAccountUpdatePlanRequest,
    "SubAccountUpdatePlanRequestCredits": subAccountUpdatePlanRequestCredits_1.SubAccountUpdatePlanRequestCredits,
    "SubAccountUpdatePlanRequestFeatures": subAccountUpdatePlanRequestFeatures_1.SubAccountUpdatePlanRequestFeatures,
    "SubAccountsResponse": subAccountsResponse_1.SubAccountsResponse,
    "SubAccountsResponseSubAccountsInner": subAccountsResponseSubAccountsInner_1.SubAccountsResponseSubAccountsInner,
    "SubAccountsResponseSubAccountsInnerGroupsInner": subAccountsResponseSubAccountsInnerGroupsInner_1.SubAccountsResponseSubAccountsInnerGroupsInner,
    "Task": task_1.Task,
    "TaskList": taskList_1.TaskList,
    "TaskReminder": taskReminder_1.TaskReminder,
    "TaskTypes": taskTypes_1.TaskTypes,
    "UpdateAttribute": updateAttribute_1.UpdateAttribute,
    "UpdateAttributeEnumerationInner": updateAttributeEnumerationInner_1.UpdateAttributeEnumerationInner,
    "UpdateBatchContacts": updateBatchContacts_1.UpdateBatchContacts,
    "UpdateBatchContactsContactsInner": updateBatchContactsContactsInner_1.UpdateBatchContactsContactsInner,
    "UpdateBatchContactsModel": updateBatchContactsModel_1.UpdateBatchContactsModel,
    "UpdateCampaignStatus": updateCampaignStatus_1.UpdateCampaignStatus,
    "UpdateChild": updateChild_1.UpdateChild,
    "UpdateChildAccountStatus": updateChildAccountStatus_1.UpdateChildAccountStatus,
    "UpdateChildDomain": updateChildDomain_1.UpdateChildDomain,
    "UpdateContact": updateContact_1.UpdateContact,
    "UpdateCouponCollection200Response": updateCouponCollection200Response_1.UpdateCouponCollection200Response,
    "UpdateCouponCollectionRequest": updateCouponCollectionRequest_1.UpdateCouponCollectionRequest,
    "UpdateEmailCampaign": updateEmailCampaign_1.UpdateEmailCampaign,
    "UpdateEmailCampaignRecipients": updateEmailCampaignRecipients_1.UpdateEmailCampaignRecipients,
    "UpdateEmailCampaignSender": updateEmailCampaignSender_1.UpdateEmailCampaignSender,
    "UpdateExternalFeed": updateExternalFeed_1.UpdateExternalFeed,
    "UpdateList": updateList_1.UpdateList,
    "UpdateSender": updateSender_1.UpdateSender,
    "UpdateSmsCampaign": updateSmsCampaign_1.UpdateSmsCampaign,
    "UpdateSmtpTemplate": updateSmtpTemplate_1.UpdateSmtpTemplate,
    "UpdateSmtpTemplateSender": updateSmtpTemplateSender_1.UpdateSmtpTemplateSender,
    "UpdateWebhook": updateWebhook_1.UpdateWebhook,
    "UpdateWhatsAppCampaign": updateWhatsAppCampaign_1.UpdateWhatsAppCampaign,
    "UploadImageModel": uploadImageModel_1.UploadImageModel,
    "UploadImageToGallery": uploadImageToGallery_1.UploadImageToGallery,
    "VariablesItems": variablesItems_1.VariablesItems,
    "WhatsappCampStats": whatsappCampStats_1.WhatsappCampStats,
    "WhatsappCampTemplate": whatsappCampTemplate_1.WhatsappCampTemplate
};
class ObjectSerializer {
    static findCorrectType(data, expectedType) {
        if (data == undefined) {
            return expectedType;
        } else if (primitives.indexOf(expectedType.toLowerCase()) !== -1) {
            return expectedType;
        } else if (expectedType === "Date") {
            return expectedType;
        } else {
            if (enumsMap[expectedType]) {
                return expectedType;
            }
            if (!typeMap[expectedType]) {
                return expectedType;
            }
            let discriminatorProperty = typeMap[expectedType].discriminator;
            if (discriminatorProperty == null) {
                return expectedType;
            } else {
                if (data[discriminatorProperty]) {
                    var discriminatorType = data[discriminatorProperty];
                    if (typeMap[discriminatorType]) {
                        return discriminatorType;
                    } else {
                        return expectedType;
                    }
                } else {
                    return expectedType;
                }
            }
        }
    }
    static serialize(data, type) {
        if (data == undefined) {
            return data;
        } else if (primitives.indexOf(type.toLowerCase()) !== -1) {
            return data;
        } else if (type.lastIndexOf("Array<", 0) === 0) {
            let subType = type.replace("Array<", "");
            subType = subType.substring(0, subType.length - 1);
            let transformedData = [];
            for(let index = 0; index < data.length; index++){
                let datum = data[index];
                transformedData.push(ObjectSerializer.serialize(datum, subType));
            }
            return transformedData;
        } else if (type === "Date") {
            return data.toISOString();
        } else {
            if (enumsMap[type]) {
                return data;
            }
            if (!typeMap[type]) {
                return data;
            }
            type = this.findCorrectType(data, type);
            let attributeTypes = typeMap[type].getAttributeTypeMap();
            let instance = {};
            for(let index = 0; index < attributeTypes.length; index++){
                let attributeType = attributeTypes[index];
                instance[attributeType.baseName] = ObjectSerializer.serialize(data[attributeType.name], attributeType.type);
            }
            return instance;
        }
    }
    static deserialize(data, type) {
        type = ObjectSerializer.findCorrectType(data, type);
        if (data == undefined) {
            return data;
        } else if (primitives.indexOf(type.toLowerCase()) !== -1) {
            return data;
        } else if (type.lastIndexOf("Array<", 0) === 0) {
            let subType = type.replace("Array<", "");
            subType = subType.substring(0, subType.length - 1);
            let transformedData = [];
            for(let index = 0; index < data.length; index++){
                let datum = data[index];
                transformedData.push(ObjectSerializer.deserialize(datum, subType));
            }
            return transformedData;
        } else if (type === "Date") {
            return new Date(data);
        } else {
            if (enumsMap[type]) {
                return data;
            }
            if (!typeMap[type]) {
                return data;
            }
            let instance = new typeMap[type]();
            let attributeTypes = typeMap[type].getAttributeTypeMap();
            for(let index = 0; index < attributeTypes.length; index++){
                let attributeType = attributeTypes[index];
                instance[attributeType.name] = ObjectSerializer.deserialize(data[attributeType.baseName], attributeType.type);
            }
            return instance;
        }
    }
}
exports.ObjectSerializer = ObjectSerializer;
class HttpBasicAuth {
    constructor(){
        this.username = '';
        this.password = '';
    }
    applyToRequest(requestOptions) {
        requestOptions.auth = {
            username: this.username,
            password: this.password
        };
    }
}
exports.HttpBasicAuth = HttpBasicAuth;
class HttpBearerAuth {
    constructor(){
        this.accessToken = '';
    }
    applyToRequest(requestOptions) {
        if (requestOptions && requestOptions.headers) {
            const accessToken = typeof this.accessToken === 'function' ? this.accessToken() : this.accessToken;
            requestOptions.headers["Authorization"] = "Bearer " + accessToken;
        }
    }
}
exports.HttpBearerAuth = HttpBearerAuth;
class ApiKeyAuth {
    constructor(location, paramName){
        this.location = location;
        this.paramName = paramName;
        this.apiKey = '';
    }
    applyToRequest(requestOptions) {
        if (this.location == "query") {
            requestOptions.qs[this.paramName] = this.apiKey;
        } else if (this.location == "header" && requestOptions && requestOptions.headers) {
            requestOptions.headers[this.paramName] = this.apiKey;
        } else if (this.location == 'cookie' && requestOptions && requestOptions.headers) {
            if (requestOptions.headers['Cookie']) {
                requestOptions.headers['Cookie'] += '; ' + this.paramName + '=' + encodeURIComponent(this.apiKey);
            } else {
                requestOptions.headers['Cookie'] = this.paramName + '=' + encodeURIComponent(this.apiKey);
            }
        }
    }
}
exports.ApiKeyAuth = ApiKeyAuth;
class OAuth {
    constructor(){
        this.accessToken = '';
    }
    applyToRequest(requestOptions) {
        if (requestOptions && requestOptions.headers) {
            requestOptions.headers["Authorization"] = "Bearer " + this.accessToken;
        }
    }
}
exports.OAuth = OAuth;
class VoidAuth {
    constructor(){
        this.username = '';
        this.password = '';
    }
    applyToRequest(_) {}
}
exports.VoidAuth = VoidAuth; //# sourceMappingURL=models.js.map
}),
];

//# sourceMappingURL=node_modules_%40getbrevo_brevo_dist_model_aae0c202._.js.map