{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///Users/charlesdoiron/Documents/Sites/bayard-website/src/app/actions/newsletter.ts"],"sourcesContent":["\"use server\";\n\nimport * as brevo from \"@getbrevo/brevo\";\n\nexport async function addEmailToBrevo(formData: FormData) {\n  const email = formData.get(\"email\") as string;\n\n  // Enhanced validation\n  if (!email || typeof email !== \"string\") {\n    console.error(\"Email is required and must be a string\");\n    return {\n      success: false,\n      message: \"L'adresse email est requise\",\n    };\n  }\n\n  const trimmedEmail = email.trim();\n\n  if (!trimmedEmail) {\n    return {\n      success: false,\n      message: \"L'adresse email ne peut pas être vide\",\n    };\n  }\n\n  // Server-side email validation\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!emailRegex.test(trimmedEmail)) {\n    return {\n      success: false,\n      message: \"Veuillez entrer une adresse email valide\",\n    };\n  }\n\n  // Check for environment configuration\n  if (!process.env.BREVO_API_KEY) {\n    console.error(\"BREVO_API_KEY is not configured\");\n    return {\n      success: false,\n      message:\n        \"Service temporairement indisponible. Veuillez réessayer plus tard.\",\n    };\n  }\n\n  try {\n    // Configure Brevo API\n    const apiInstance = new brevo.ContactsApi();\n    apiInstance.setApiKey(\n      brevo.ContactsApiApiKeys.apiKey,\n      process.env.BREVO_API_KEY!\n    );\n\n    // Create contact data\n    const createContact = new brevo.CreateContact();\n    createContact.email = trimmedEmail.toLowerCase(); // Normalize email\n\n    // Use environment variable for list ID, fallback to default\n    const listId = process.env.BREVO_LIST_ID\n      ? parseInt(process.env.BREVO_LIST_ID)\n      : 4;\n    createContact.listIds = [listId];\n\n    // Add contact to Brevo\n    const result = await apiInstance.createContact(createContact);\n\n    console.log(\"Contact ajouté:\", result.body?.id);\n    return {\n      success: true,\n      message: \"Votre inscription a été effectuée avec succès\",\n    };\n  } catch (error: unknown) {\n    console.error(\"Brevo API Error:\", error);\n\n    // Type guard for axios-like errors\n    const isAxiosError = (\n      err: unknown\n    ): err is {\n      response?: {\n        status?: number;\n        body?: { code?: string };\n        data?: { code?: string };\n      };\n    } => {\n      return err !== null && typeof err === \"object\" && \"response\" in err;\n    };\n\n    // Log detailed error information\n    if (isAxiosError(error) && error.response) {\n      console.error(\"Error status:\", error.response.status);\n      console.error(\n        \"Error data:\",\n        JSON.stringify(error.response.body || error.response.data, null, 2)\n      );\n    }\n\n    // Handle duplicate contact error (contact already exists) - treat as success\n    if (\n      (isAxiosError(error) &&\n        (error.response?.body?.code === \"duplicate_parameter\" ||\n          error.response?.data?.code === \"duplicate_parameter\")) ||\n      (error instanceof Error && error.message.includes(\"duplicate_parameter\"))\n    ) {\n      console.log(\"Email already subscribed - treating as success\");\n      return {\n        success: true,\n        message:\n          \"Votre inscription a été confirmée ! Vous êtes déjà abonné(e) à notre newsletter.\",\n      };\n    }\n\n    // Handle specific error types\n    if (isAxiosError(error) && error.response && error.response.status) {\n      const status = error.response.status;\n\n      if (status === 401) {\n        console.error(\"Invalid API key\");\n        return {\n          success: false,\n          message:\n            \"Service temporairement indisponible. Veuillez réessayer plus tard.\",\n        };\n      }\n\n      if (status === 429) {\n        console.error(\"Rate limit exceeded\");\n        return {\n          success: false,\n          message: \"Trop de tentatives. Veuillez patienter avant de réessayer.\",\n        };\n      }\n\n      if (status >= 500) {\n        console.error(\"Server error\");\n        return {\n          success: false,\n          message:\n            \"Service temporairement indisponible. Veuillez réessayer dans quelques minutes.\",\n        };\n      }\n    }\n\n    // For other errors, provide user-friendly message\n    console.error(\"Erreur lors de l'inscription à la newsletter:\", error);\n    return {\n      success: false,\n      message:\n        \"Une erreur s'est produite lors de l'inscription. Veuillez réessayer.\",\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;AAEO,eAAe,gBAAgB,QAAkB;IACtD,MAAM,QAAQ,SAAS,GAAG,CAAC;IAE3B,sBAAsB;IACtB,IAAI,CAAC,SAAS,OAAO,UAAU,UAAU;QACvC,QAAQ,KAAK,CAAC;QACd,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;IAEA,MAAM,eAAe,MAAM,IAAI;IAE/B,IAAI,CAAC,cAAc;QACjB,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;IAEA,+BAA+B;IAC/B,MAAM,aAAa;IACnB,IAAI,CAAC,WAAW,IAAI,CAAC,eAAe;QAClC,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;IAEA,sCAAsC;IACtC,IAAI,CAAC,QAAQ,GAAG,CAAC,aAAa,EAAE;QAC9B,QAAQ,KAAK,CAAC;QACd,OAAO;YACL,SAAS;YACT,SACE;QACJ;IACF;IAEA,IAAI;QACF,sBAAsB;QACtB,MAAM,cAAc,IAAI,iKAAiB;QACzC,YAAY,SAAS,CACnB,wKAAwB,CAAC,MAAM,EAC/B,QAAQ,GAAG,CAAC,aAAa;QAG3B,sBAAsB;QACtB,MAAM,gBAAgB,IAAI,mKAAmB;QAC7C,cAAc,KAAK,GAAG,aAAa,WAAW,IAAI,kBAAkB;QAEpE,4DAA4D;QAC5D,MAAM,SAAS,QAAQ,GAAG,CAAC,aAAa,GACpC,SAAS,QAAQ,GAAG,CAAC,aAAa,IAClC;QACJ,cAAc,OAAO,GAAG;YAAC;SAAO;QAEhC,uBAAuB;QACvB,MAAM,SAAS,MAAM,YAAY,aAAa,CAAC;QAE/C,QAAQ,GAAG,CAAC,mBAAmB,OAAO,IAAI,EAAE;QAC5C,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF,EAAE,OAAO,OAAgB;QACvB,QAAQ,KAAK,CAAC,oBAAoB;QAElC,mCAAmC;QACnC,MAAM,eAAe,CACnB;YAQA,OAAO,QAAQ,QAAQ,OAAO,QAAQ,YAAY,cAAc;QAClE;QAEA,iCAAiC;QACjC,IAAI,aAAa,UAAU,MAAM,QAAQ,EAAE;YACzC,QAAQ,KAAK,CAAC,iBAAiB,MAAM,QAAQ,CAAC,MAAM;YACpD,QAAQ,KAAK,CACX,eACA,KAAK,SAAS,CAAC,MAAM,QAAQ,CAAC,IAAI,IAAI,MAAM,QAAQ,CAAC,IAAI,EAAE,MAAM;QAErE;QAEA,6EAA6E;QAC7E,IACE,AAAC,aAAa,UACZ,CAAC,MAAM,QAAQ,EAAE,MAAM,SAAS,yBAC9B,MAAM,QAAQ,EAAE,MAAM,SAAS,qBAAqB,KACvD,iBAAiB,SAAS,MAAM,OAAO,CAAC,QAAQ,CAAC,wBAClD;YACA,QAAQ,GAAG,CAAC;YACZ,OAAO;gBACL,SAAS;gBACT,SACE;YACJ;QACF;QAEA,8BAA8B;QAC9B,IAAI,aAAa,UAAU,MAAM,QAAQ,IAAI,MAAM,QAAQ,CAAC,MAAM,EAAE;YAClE,MAAM,SAAS,MAAM,QAAQ,CAAC,MAAM;YAEpC,IAAI,WAAW,KAAK;gBAClB,QAAQ,KAAK,CAAC;gBACd,OAAO;oBACL,SAAS;oBACT,SACE;gBACJ;YACF;YAEA,IAAI,WAAW,KAAK;gBAClB,QAAQ,KAAK,CAAC;gBACd,OAAO;oBACL,SAAS;oBACT,SAAS;gBACX;YACF;YAEA,IAAI,UAAU,KAAK;gBACjB,QAAQ,KAAK,CAAC;gBACd,OAAO;oBACL,SAAS;oBACT,SACE;gBACJ;YACF;QACF;QAEA,kDAAkD;QAClD,QAAQ,KAAK,CAAC,iDAAiD;QAC/D,OAAO;YACL,SAAS;YACT,SACE;QACJ;IACF;AACF;;;IAjJsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///Users/charlesdoiron/Documents/Sites/bayard-website/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {addEmailToBrevo as '40438af99855e1c86cd59492b5daf0369794ae5898'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///Users/charlesdoiron/Documents/Sites/bayard-website/src/app/page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///Users/charlesdoiron/Documents/Sites/bayard-website/src/app/page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}